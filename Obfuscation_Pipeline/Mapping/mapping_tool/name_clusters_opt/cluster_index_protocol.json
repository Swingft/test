[
  {
    "size": 40,
    "rep": "PledgePaymentMethodsViewModelInputs",
    "tokens": [
      "add",
      "amount",
      "cell",
      "controller",
      "delegate",
      "details",
      "disclaimer",
      "inputs",
      "label",
      "location",
      "management",
      "method",
      "methods",
      "model",
      "option",
      "outputs",
      "payment",
      "plan",
      "plans",
      "pledge",
      "shipping",
      "status",
      "summary",
      "type",
      "view"
    ],
    "members": [
      "PledgeAmountSummaryViewModelInputs",
      "PledgeAmountSummaryViewModelOutputs",
      "PledgeAmountSummaryViewModelType",
      "PledgeAmountViewModelInputs",
      "PledgeAmountViewModelOutputs",
      "PledgeAmountViewModelType",
      "PledgeDisclaimerViewDelegate",
      "PledgeDisclaimerViewModelInputs",
      "PledgeDisclaimerViewModelOutputs",
      "PledgeDisclaimerViewModelType",
      "PledgeManagementDetailsViewModelInputs",
      "PledgeManagementDetailsViewModelOutputs",
      "PledgeManagementDetailsViewModelType",
      "PledgePaymentMethodAddCellViewModelType",
      "PledgePaymentMethodCellViewModelInputs",
      "PledgePaymentMethodCellViewModelOutputs",
      "PledgePaymentMethodCellViewModelType",
      "PledgePaymentMethodsViewModelInputs",
      "PledgePaymentMethodsViewModelOutputs",
      "PledgePaymentMethodsViewModelType",
      "PledgePaymentPlanOptionViewDelegate",
      "PledgePaymentPlansOptionViewModelInputs",
      "PledgePaymentPlansOptionViewModelOutputs",
      "PledgePaymentPlansOptionViewModelType",
      "PledgePaymentPlansViewControllerDelegate",
      "PledgePaymentPlansViewModelInputs",
      "PledgePaymentPlansViewModelOutputs",
      "PledgePaymentPlansViewModelType",
      "PledgeShippingLocationViewModelInputs",
      "PledgeShippingLocationViewModelOutputs",
      "PledgeShippingLocationViewModelType",
      "PledgeShippingSummaryViewModelInputs",
      "PledgeShippingSummaryViewModelOutputs",
      "PledgeShippingSummaryViewModelType",
      "PledgeStatusLabelViewModelInputs",
      "PledgeStatusLabelViewModelOutputs",
      "PledgeStatusLabelViewModelType",
      "PledgeSummaryViewModelInputs",
      "PledgeSummaryViewModelOutputs",
      "PledgeSummaryViewModelType"
    ]
  },
  {
    "size": 22,
    "rep": "MessageThreadsViewModelOutputs",
    "tokens": [
      "banner",
      "cell",
      "dialog",
      "inputs",
      "message",
      "messages",
      "model",
      "outputs",
      "protocol",
      "search",
      "thread",
      "threads",
      "type",
      "view"
    ],
    "members": [
      "MessageBannerViewModelInputs",
      "MessageBannerViewModelOutputs",
      "MessageBannerViewModelType",
      "MessageCellViewModelInputs",
      "MessageCellViewModelOutputs",
      "MessageCellViewModelType",
      "MessageDialogViewModelInputs",
      "MessageDialogViewModelOutputs",
      "MessageDialogViewModelType",
      "MessageThreadCellViewModelInputs",
      "MessageThreadCellViewModelOutputs",
      "MessageThreadCellViewModelType",
      "MessageThreadsViewModelInputs",
      "MessageThreadsViewModelOutputs",
      "MessageThreadsViewModelType",
      "MessageViewModelProtocol",
      "MessagesSearchViewModelInputs",
      "MessagesSearchViewModelOutputs",
      "MessagesSearchViewModelType",
      "MessagesViewModelInputs",
      "MessagesViewModelOutputs",
      "MessagesViewModelType"
    ]
  },
  {
    "size": 22,
    "rep": "ProjectNotificationCellViewModelType",
    "tokens": [
      "cell",
      "checkmark",
      "content",
      "delegate",
      "disclaimer",
      "inputs",
      "list",
      "main",
      "model",
      "navigation",
      "notification",
      "notifications",
      "outputs",
      "pamphlet",
      "project",
      "risks",
      "selector",
      "subpage",
      "tab",
      "type",
      "view"
    ],
    "members": [
      "ProjectNavigationSelectorViewDelegate",
      "ProjectNavigationSelectorViewModelInputs",
      "ProjectNavigationSelectorViewModelType",
      "ProjectNotificationCellDelegate",
      "ProjectNotificationCellViewModelInputs",
      "ProjectNotificationCellViewModelOutputs",
      "ProjectNotificationCellViewModelType",
      "ProjectNotificationsViewModelInputs",
      "ProjectNotificationsViewModelOutputs",
      "ProjectNotificationsViewModelType",
      "ProjectPamphletContentViewModelInputs",
      "ProjectPamphletContentViewModelOutputs",
      "ProjectPamphletContentViewModelType",
      "ProjectPamphletMainCellViewModelInputs",
      "ProjectPamphletMainCellViewModelOutputs",
      "ProjectPamphletMainCellViewModelType",
      "ProjectPamphletSubpageCellViewModelType",
      "ProjectRisksDisclaimerCellViewModelType",
      "ProjectTabCheckmarkListCellViewModelType",
      "ProjectTabDisclaimerCellViewModelInputs",
      "ProjectTabDisclaimerCellViewModelOutputs",
      "ProjectTabDisclaimerCellViewModelType"
    ]
  },
  {
    "size": 21,
    "rep": "ProjectUpdatesViewModelInputs",
    "tokens": [
      "card",
      "cell",
      "creator",
      "curated",
      "faqs",
      "inputs",
      "model",
      "outputs",
      "page",
      "project",
      "projects",
      "risks",
      "type",
      "updates",
      "view"
    ],
    "members": [
      "CuratedProjectsViewModelInputs",
      "CuratedProjectsViewModelOutputs",
      "CuratedProjectsViewModelType",
      "ProjectCardViewModelType",
      "ProjectCreatorViewModelInputs",
      "ProjectCreatorViewModelOutputs",
      "ProjectCreatorViewModelType",
      "ProjectFAQsCellViewModelInputs",
      "ProjectFAQsCellViewModelOutputs",
      "ProjectFAQsCellViewModelType",
      "ProjectPageViewModelInputs",
      "ProjectPageViewModelOutputs",
      "ProjectPageViewModelType",
      "ProjectRisksCellViewModelInputs",
      "ProjectRisksCellViewModelOutputs",
      "ProjectRisksCellViewModelType",
      "ProjectUpdatesViewModelInputs",
      "ProjectUpdatesViewModelOutputs",
      "ProjectUpdatesViewModelType",
      "ProjectsCardViewModelInputs",
      "ProjectsCardViewModelOutputs"
    ]
  },
  {
    "size": 21,
    "rep": "SearchViewModelInputs",
    "tokens": [
      "bar",
      "data",
      "delegate",
      "engine",
      "footer",
      "fspager",
      "help",
      "inputs",
      "model",
      "outputs",
      "provider",
      "search",
      "share",
      "sort",
      "source",
      "type",
      "view",
      "web"
    ],
    "members": [
      "FSPagerViewDataSource",
      "FSPagerViewDelegate",
      "FooterViewDelegate",
      "HelpViewModelInputs",
      "HelpViewModelOutputs",
      "HelpViewModelType",
      "HelpWebViewModelInputs",
      "HelpWebViewModelOutputs",
      "HelpWebViewModelType",
      "SearchBarDelegate",
      "SearchEngineDelegate",
      "SearchEngineProvider",
      "SearchViewDelegate",
      "SearchViewModelInputs",
      "SearchViewModelOutputs",
      "SearchViewModelType",
      "ShareViewModelInputs",
      "ShareViewModelOutputs",
      "ShareViewModelType",
      "SortViewModelInputs",
      "SortViewModelOutputs"
    ]
  },
  {
    "size": 19,
    "rep": "CommentRepliesViewModelOutputs",
    "tokens": [
      "cell",
      "comment",
      "comments",
      "composer",
      "delegate",
      "dialog",
      "errors",
      "inputs",
      "model",
      "outputs",
      "removed",
      "replies",
      "type",
      "view"
    ],
    "members": [
      "CommentCellViewDelegate",
      "CommentCellViewModelInputs",
      "CommentCellViewModelOutputs",
      "CommentCellViewModelType",
      "CommentComposerViewDelegate",
      "CommentComposerViewModelInputs",
      "CommentComposerViewModelOutputs",
      "CommentComposerViewModelType",
      "CommentDialogViewModelErrors",
      "CommentDialogViewModelInputs",
      "CommentDialogViewModelOutputs",
      "CommentDialogViewModelType",
      "CommentRemovedCellDelegate",
      "CommentRepliesViewModelInputs",
      "CommentRepliesViewModelOutputs",
      "CommentRepliesViewModelType",
      "CommentsViewModelInputs",
      "CommentsViewModelOutputs",
      "CommentsViewModelType"
    ]
  },
  {
    "size": 19,
    "rep": "DiscoveryProjectCardViewModelInputs",
    "tokens": [
      "card",
      "category",
      "cell",
      "delegate",
      "discovery",
      "expandable",
      "filters",
      "inputs",
      "model",
      "onboarding",
      "outputs",
      "page",
      "postcard",
      "project",
      "row",
      "type",
      "view"
    ],
    "members": [
      "DiscoveryExpandableRowCellInputs",
      "DiscoveryExpandableRowCellOutputs",
      "DiscoveryFiltersViewModelInputs",
      "DiscoveryFiltersViewModelOutputs",
      "DiscoveryFiltersViewModelType",
      "DiscoveryOnboardingCellDelegate",
      "DiscoveryPageViewModelInputs",
      "DiscoveryPageViewModelOutputs",
      "DiscoveryPageViewModelType",
      "DiscoveryPostcardCellDelegate",
      "DiscoveryPostcardViewModelInputs",
      "DiscoveryPostcardViewModelOutputs",
      "DiscoveryPostcardViewModelType",
      "DiscoveryProjectCardViewModelInputs",
      "DiscoveryProjectCardViewModelOutputs",
      "DiscoveryProjectCardViewModelType",
      "DiscoveryProjectCategoryViewModelInputs",
      "DiscoveryProjectCategoryViewModelOutputs",
      "DiscoveryProjectCategoryViewModelType"
    ]
  },
  {
    "size": 15,
    "rep": "ActivitySampleFollowCellViewModelInputs",
    "tokens": [
      "activity",
      "backing",
      "backings",
      "cell",
      "errored",
      "follow",
      "friend",
      "inputs",
      "model",
      "outputs",
      "project",
      "sample",
      "type",
      "view"
    ],
    "members": [
      "ActivityErroredBackingsCellInputs",
      "ActivityErroredBackingsCellOutputs",
      "ActivityErroredBackingsCellViewModelType",
      "ActivityFriendBackingViewModelInputs",
      "ActivityFriendBackingViewModelOutputs",
      "ActivityFriendBackingViewModelType",
      "ActivityFriendFollowCellViewModelInputs",
      "ActivityFriendFollowCellViewModelOutputs",
      "ActivitySampleBackingCellViewModelInputs",
      "ActivitySampleBackingCellViewModelType",
      "ActivitySampleFollowCellViewModelInputs",
      "ActivitySampleFollowCellViewModelOutputs",
      "ActivitySampleFollowCellViewModelType",
      "ActivitySampleProjectCellViewModelInputs",
      "ActivitySampleProjectCellViewModelType"
    ]
  },
  {
    "size": 15,
    "rep": "ImageCore",
    "tokens": [
      "cache",
      "caching",
      "core",
      "decoding",
      "encoding",
      "filter",
      "handler",
      "image",
      "imageable",
      "modifier",
      "picker",
      "processing",
      "processor",
      "provider",
      "service",
      "style"
    ],
    "members": [
      "ImageCache",
      "ImageCaching",
      "ImageCore",
      "ImageDecoding",
      "ImageEncoding",
      "ImageFilter",
      "ImageHandler",
      "ImageModifier",
      "ImagePicker",
      "ImageProcessing",
      "ImageProcessor",
      "ImageProvider",
      "ImageService",
      "ImageStyle",
      "Imageable"
    ]
  },
  {
    "size": 15,
    "rep": "SupportsRightLayoutProxy",
    "tokens": [
      "baseline",
      "bottom",
      "center",
      "centering",
      "edges",
      "height",
      "layout",
      "leading",
      "left",
      "positioning",
      "proxy",
      "right",
      "size",
      "supports",
      "top",
      "trailing",
      "width",
      "xlayout",
      "ylayout"
    ],
    "members": [
      "SupportsBaselineLayoutProxy",
      "SupportsBottomLayoutProxy",
      "SupportsCenterXLayoutProxy",
      "SupportsCenterYLayoutProxy",
      "SupportsCenteringLayoutProxy",
      "SupportsEdgesLayoutProxy",
      "SupportsHeightLayoutProxy",
      "SupportsLeadingLayoutProxy",
      "SupportsLeftLayoutProxy",
      "SupportsPositioningLayoutProxy",
      "SupportsRightLayoutProxy",
      "SupportsSizeLayoutProxy",
      "SupportsTopLayoutProxy",
      "SupportsTrailingLayoutProxy",
      "SupportsWidthLayoutProxy"
    ]
  },
  {
    "size": 13,
    "rep": "Request",
    "tokens": [
      "adapter",
      "context",
      "decodable",
      "delegate",
      "encoder",
      "handler",
      "id",
      "request",
      "requestable",
      "retrier",
      "serializer",
      "service",
      "type"
    ],
    "members": [
      "Request",
      "RequestAdapter",
      "RequestContext",
      "RequestDecodable",
      "RequestDelegate",
      "RequestEncoder",
      "RequestHandler",
      "RequestID",
      "RequestRetrier",
      "RequestSerializer",
      "RequestService",
      "RequestType",
      "Requestable"
    ]
  },
  {
    "size": 12,
    "rep": "Animation",
    "tokens": [
      "animated",
      "animation",
      "animator",
      "driver",
      "layer",
      "model",
      "node",
      "path",
      "presenting",
      "protocol",
      "providing",
      "transitioning",
      "type"
    ],
    "members": [
      "AnimatedPresenting",
      "AnimatedProviding",
      "AnimatedTransitioning",
      "Animation",
      "AnimationDriver",
      "AnimationLayer",
      "AnimationModel",
      "AnimationPath",
      "AnimationProtocol",
      "AnimationType",
      "AnimatorNode",
      "AnimatorProviding"
    ]
  },
  {
    "size": 12,
    "rep": "OCKAnyReadOnlyPatientStore",
    "tokens": [
      "care",
      "contact",
      "event",
      "ockany",
      "ockread",
      "ockreadable",
      "only",
      "outcome",
      "patient",
      "plan",
      "read",
      "store",
      "task"
    ],
    "members": [
      "OCKAnyReadOnlyCarePlanStore",
      "OCKAnyReadOnlyContactStore",
      "OCKAnyReadOnlyEventStore",
      "OCKAnyReadOnlyOutcomeStore",
      "OCKAnyReadOnlyPatientStore",
      "OCKAnyReadOnlyTaskStore",
      "OCKReadOnlyEventStore",
      "OCKReadableCarePlanStore",
      "OCKReadableContactStore",
      "OCKReadableOutcomeStore",
      "OCKReadablePatientStore",
      "OCKReadableTaskStore"
    ]
  },
  {
    "size": 11,
    "rep": "OCKAnyTaskStore",
    "tokens": [
      "care",
      "contact",
      "event",
      "ockany",
      "ockappearance",
      "ockcare",
      "ockcontact",
      "ockevent",
      "ockpatient",
      "ocktask",
      "patient",
      "plan",
      "store",
      "styler",
      "task"
    ],
    "members": [
      "OCKAnyCarePlanStore",
      "OCKAnyContactStore",
      "OCKAnyEventStore",
      "OCKAnyPatientStore",
      "OCKAnyTaskStore",
      "OCKAppearanceStyler",
      "OCKCarePlanStore",
      "OCKContactStore",
      "OCKEventStore",
      "OCKPatientStore",
      "OCKTaskStore"
    ]
  },
  {
    "size": 10,
    "rep": "HTMLTypeContext",
    "tokens": [
      "context",
      "htmldividable",
      "htmllinkable",
      "htmlmedia",
      "htmlnamable",
      "htmlscriptable",
      "htmlsource",
      "htmlstylable",
      "htmltype",
      "htmlvalue",
      "list"
    ],
    "members": [
      "HTMLDividableContext",
      "HTMLLinkableContext",
      "HTMLMediaContext",
      "HTMLNamableContext",
      "HTMLScriptableContext",
      "HTMLSourceContext",
      "HTMLSourceListContext",
      "HTMLStylableContext",
      "HTMLTypeContext",
      "HTMLValueContext"
    ]
  },
  {
    "size": 10,
    "rep": "Storage",
    "tokens": [
      "action",
      "aware",
      "core",
      "engine",
      "interface",
      "key",
      "storable",
      "storage",
      "store"
    ],
    "members": [
      "Storable",
      "Storage",
      "StorageAware",
      "StorageCore",
      "StorageEngine",
      "StorageInterface",
      "StorageKey",
      "Store",
      "StoreAction",
      "StoreInterface"
    ]
  },
  {
    "size": 10,
    "rep": "UITableViewProtocol",
    "tokens": [
      "bar",
      "field",
      "item",
      "protocol",
      "uibar",
      "uiimage",
      "uistack",
      "uistepper",
      "uiswitch",
      "uitab",
      "uitable",
      "uitext",
      "view"
    ],
    "members": [
      "UIBarItemProtocol",
      "UIImageViewProtocol",
      "UIStackViewProtocol",
      "UIStepperProtocol",
      "UISwitchProtocol",
      "UITabBarItemProtocol",
      "UITabBarProtocol",
      "UITableViewProtocol",
      "UITextFieldProtocol",
      "UITextViewProtocol"
    ]
  },
  {
    "size": 9,
    "rep": "NavigatorDelegate",
    "tokens": [
      "action",
      "animator",
      "controller",
      "delegate",
      "identifier",
      "navigation",
      "navigator",
      "protocol",
      "response",
      "toolbar"
    ],
    "members": [
      "AnimatorDelegate",
      "NavigationAction",
      "NavigationController",
      "NavigationDelegate",
      "NavigationIdentifier",
      "NavigationResponse",
      "NavigationToolbar",
      "NavigatorDelegate",
      "NavigatorProtocol"
    ]
  },
  {
    "size": 9,
    "rep": "ManagePledgeViewModelInputs",
    "tokens": [
      "app",
      "cancel",
      "delegate",
      "inputs",
      "manage",
      "model",
      "outputs",
      "pledge",
      "type",
      "view"
    ],
    "members": [
      "AppDelegateViewModelInputs",
      "AppDelegateViewModelOutputs",
      "AppDelegateViewModelType",
      "CancelPledgeViewModelInputs",
      "CancelPledgeViewModelOutputs",
      "CancelPledgeViewModelType",
      "ManagePledgeViewModelInputs",
      "ManagePledgeViewModelOutputs",
      "ManagePledgeViewModelType"
    ]
  },
  {
    "size": 9,
    "rep": "CanBeTriggeredByScrollBounceTop",
    "tokens": [
      "any",
      "background",
      "be",
      "bottom",
      "bounce",
      "by",
      "can",
      "double",
      "image",
      "interaction",
      "left",
      "overlay",
      "right",
      "scroll",
      "tap",
      "top",
      "triggered",
      "view"
    ],
    "members": [
      "CanBeTriggeredByAnyInteraction",
      "CanBeTriggeredByBackgroundDoubleTap",
      "CanBeTriggeredByBackgroundViewTap",
      "CanBeTriggeredByImageViewDoubleTap",
      "CanBeTriggeredByOverlayDoubleTap",
      "CanBeTriggeredByScrollBounceBottom",
      "CanBeTriggeredByScrollBounceLeft",
      "CanBeTriggeredByScrollBounceRight",
      "CanBeTriggeredByScrollBounceTop"
    ]
  },
  {
    "size": 9,
    "rep": "ContentContainer",
    "tokens": [
      "component",
      "containable",
      "container",
      "content",
      "context",
      "decoder",
      "encoder",
      "equatable",
      "identifiable",
      "protocol"
    ],
    "members": [
      "ContentComponent",
      "ContentContainable",
      "ContentContainer",
      "ContentDecoder",
      "ContentEncoder",
      "ContentEquatable",
      "ContentIdentifiable",
      "ContentProtocol",
      "ContextProtocol"
    ]
  },
  {
    "size": 9,
    "rep": "FindFriendsCellViewModelOutputs",
    "tokens": [
      "cell",
      "find",
      "friends",
      "inputs",
      "model",
      "outputs",
      "stats",
      "type",
      "view"
    ],
    "members": [
      "FindFriendsCellViewModelInputs",
      "FindFriendsCellViewModelOutputs",
      "FindFriendsCellViewModelType",
      "FindFriendsStatsCellViewModelInputs",
      "FindFriendsStatsCellViewModelOutputs",
      "FindFriendsStatsCellViewModelType",
      "FindFriendsViewModelInputs",
      "FindFriendsViewModelOutputs",
      "FindFriendsViewModelType"
    ]
  },
  {
    "size": 9,
    "rep": "HTTPServerHandler",
    "tokens": [
      "delegate",
      "handler",
      "http",
      "http1request",
      "http1response",
      "httpdecoder",
      "httperror",
      "httprequest",
      "httpserver",
      "iodelegate",
      "responder",
      "server"
    ],
    "members": [
      "HTTP1RequestHandler",
      "HTTP1ResponseHandler",
      "HTTPDecoderDelegate",
      "HTTPErrorHandler",
      "HTTPRequestHandler",
      "HTTPServerDelegate",
      "HTTPServerHandler",
      "HTTPServerResponder",
      "HttpServerIODelegate"
    ]
  },
  {
    "size": 9,
    "rep": "RewardCardContainerViewModelOutputs",
    "tokens": [
      "add",
      "card",
      "collection",
      "container",
      "inputs",
      "model",
      "on",
      "outputs",
      "reward",
      "rewards",
      "selection",
      "type",
      "view"
    ],
    "members": [
      "RewardAddOnSelectionViewModelInputs",
      "RewardAddOnSelectionViewModelOutputs",
      "RewardAddOnSelectionViewModelType",
      "RewardCardContainerViewModelInputs",
      "RewardCardContainerViewModelOutputs",
      "RewardCardContainerViewModelType",
      "RewardsCollectionViewModelInputs",
      "RewardsCollectionViewModelOutputs",
      "RewardsCollectionViewModelType"
    ]
  },
  {
    "size": 9,
    "rep": "SettingsNewslettersCellViewModelType",
    "tokens": [
      "cell",
      "controller",
      "delegate",
      "inputs",
      "model",
      "newsletters",
      "outputs",
      "settings",
      "style",
      "top",
      "type",
      "view"
    ],
    "members": [
      "SettingsNewslettersCellDelegate",
      "SettingsNewslettersCellViewModelInputs",
      "SettingsNewslettersCellViewModelOutputs",
      "SettingsNewslettersCellViewModelType",
      "SettingsNewslettersTopCellDelegate",
      "SettingsNewslettersViewModelInputs",
      "SettingsNewslettersViewModelOutputs",
      "SettingsNewslettersViewModelType",
      "SettingsStyleControllerDelegate"
    ]
  },
  {
    "size": 8,
    "rep": "LoginViewModelOutputs",
    "tokens": [
      "delegate",
      "inputs",
      "login",
      "model",
      "outputs",
      "tooltip",
      "tout",
      "type",
      "view"
    ],
    "members": [
      "LoginTooltipViewDelegate",
      "LoginToutViewModelInputs",
      "LoginToutViewModelOutputs",
      "LoginToutViewModelType",
      "LoginViewModelDelegate",
      "LoginViewModelInputs",
      "LoginViewModelOutputs",
      "LoginViewModelType"
    ]
  },
  {
    "size": 8,
    "rep": "SettingsNotificationCellViewModelType",
    "tokens": [
      "cell",
      "delegate",
      "inputs",
      "model",
      "notification",
      "notifications",
      "outputs",
      "picker",
      "settings",
      "type",
      "view"
    ],
    "members": [
      "SettingsNotificationCellDelegate",
      "SettingsNotificationCellViewModelInputs",
      "SettingsNotificationCellViewModelOutputs",
      "SettingsNotificationCellViewModelType",
      "SettingsNotificationPickerViewModelType",
      "SettingsNotificationsViewModelInputs",
      "SettingsNotificationsViewModelOutputs",
      "SettingsNotificationsViewModelType"
    ]
  },
  {
    "size": 8,
    "rep": "SmokeServerStaticContextInitializer",
    "tokens": [
      "async",
      "context",
      "initializer",
      "invocation",
      "per",
      "server",
      "smoke",
      "static",
      "v2"
    ],
    "members": [
      "SmokeAsyncServerStaticContextInitializer",
      "SmokeAsyncStaticContextInitializer",
      "SmokePerInvocationContextInitializer",
      "SmokePerInvocationContextInitializerV2",
      "SmokeServerStaticContextInitializer",
      "SmokeServerStaticContextInitializerV2",
      "SmokeStaticContextInitializer",
      "SmokeStaticContextInitializerV2"
    ]
  },
  {
    "size": 7,
    "rep": "ConstraintInsetTarget",
    "tokens": [
      "attributes",
      "constant",
      "constraint",
      "dsl",
      "inset",
      "multiplier",
      "offset",
      "priority",
      "relatable",
      "target"
    ],
    "members": [
      "ConstraintAttributesDSL",
      "ConstraintConstantTarget",
      "ConstraintInsetTarget",
      "ConstraintMultiplierTarget",
      "ConstraintOffsetTarget",
      "ConstraintPriorityTarget",
      "ConstraintRelatableTarget"
    ]
  },
  {
    "size": 7,
    "rep": "NodeFailable",
    "tokens": [
      "async",
      "failable",
      "instant",
      "node",
      "non"
    ],
    "members": [
      "NodeFailable",
      "NodeFailableAsync",
      "NodeFailableInstant",
      "NodeNonFailable",
      "NodeNonFailableAsync",
      "NodeNonFailableInstant",
      "NonFailable"
    ]
  },
  {
    "size": 7,
    "rep": "ObserverType",
    "tokens": [
      "object",
      "observable",
      "observer",
      "reducer",
      "resolver",
      "resource",
      "state",
      "type"
    ],
    "members": [
      "ObservableObject",
      "ObservableState",
      "ObservableType",
      "ObserverType",
      "ReducerType",
      "ResolverType",
      "ResourceType"
    ]
  },
  {
    "size": 7,
    "rep": "PledgeViewCTAContainerViewModelType",
    "tokens": [
      "ctacontainer",
      "delegate",
      "inputs",
      "model",
      "outputs",
      "pledge",
      "type",
      "view"
    ],
    "members": [
      "PledgeCTAContainerViewViewModelInputs",
      "PledgeCTAContainerViewViewModelOutputs",
      "PledgeCTAContainerViewViewModelType",
      "PledgeViewCTAContainerViewDelegate",
      "PledgeViewCTAContainerViewModelInputs",
      "PledgeViewCTAContainerViewModelOutputs",
      "PledgeViewCTAContainerViewModelType"
    ]
  },
  {
    "size": 7,
    "rep": "RewardCardViewModelOutputs",
    "tokens": [
      "card",
      "cell",
      "delegate",
      "inputs",
      "model",
      "outputs",
      "reward",
      "type",
      "view"
    ],
    "members": [
      "RewardCardViewDelegate",
      "RewardCardViewModelInputs",
      "RewardCardViewModelOutputs",
      "RewardCardViewModelType",
      "RewardCellViewModelInputs",
      "RewardCellViewModelOutputs",
      "RewardCellViewModelType"
    ]
  },
  {
    "size": 7,
    "rep": "WallpaperGalleryViewControllerDelegate",
    "tokens": [
      "controller",
      "create",
      "delegate",
      "drag",
      "gallery",
      "main",
      "root",
      "set",
      "view",
      "wallpaper",
      "window"
    ],
    "members": [
      "WallpaperCreateViewControllerDelegate",
      "WallpaperGalleryDragControllerDelegate",
      "WallpaperGalleryViewControllerDelegate",
      "WallpaperMainViewControllerDelegate",
      "WallpaperRootViewControllerDelegate",
      "WallpaperSetViewControllerDelegate",
      "WallpaperWindowControllerDelegate"
    ]
  },
  {
    "size": 6,
    "rep": "ActivityUpdateViewModelInputs",
    "tokens": [
      "actitivies",
      "activities",
      "activity",
      "inputs",
      "model",
      "outputs",
      "type",
      "update",
      "view"
    ],
    "members": [
      "ActitiviesViewModelInputs",
      "ActivitiesViewModelOutputs",
      "ActivitiesViewModelType",
      "ActivityUpdateViewModelInputs",
      "ActivityUpdateViewModelOutputs",
      "ActivityUpdateViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "ChangeEmailViewModelOutputs",
    "tokens": [
      "change",
      "email",
      "inputs",
      "model",
      "outputs",
      "password",
      "type",
      "view"
    ],
    "members": [
      "ChangeEmailViewModelInputs",
      "ChangeEmailViewModelOutputs",
      "ChangeEmailViewModelType",
      "ChangePasswordViewModelInputs",
      "ChangePasswordViewModelOutputs",
      "ChangePasswordViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "CreatePasswordViewModelOutputs",
    "tokens": [
      "create",
      "inputs",
      "model",
      "outputs",
      "password",
      "reset",
      "type",
      "view"
    ],
    "members": [
      "CreatePasswordViewModelInputs",
      "CreatePasswordViewModelOutputs",
      "CreatePasswordViewModelType",
      "ResetPasswordViewModelInputs",
      "ResetPasswordViewModelOutputs",
      "ResetPasswordViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "FontRepresentable",
    "tokens": [
      "data",
      "drawer",
      "flow",
      "font",
      "kvorepresentable",
      "presentable",
      "representable",
      "simdrepresentable"
    ],
    "members": [
      "DataRepresentable",
      "DrawerPresentable",
      "FlowRepresentable",
      "FontRepresentable",
      "KVORepresentable",
      "SIMDRepresentable"
    ]
  },
  {
    "size": 6,
    "rep": "ElementInspectorFormPanelDelegate",
    "tokens": [
      "appearance",
      "controller",
      "coordinator",
      "data",
      "delegate",
      "element",
      "form",
      "inspector",
      "model",
      "panel",
      "protocol",
      "providing",
      "source",
      "view"
    ],
    "members": [
      "ElementInspectorAppearanceProviding",
      "ElementInspectorCoordinatorDelegate",
      "ElementInspectorFormPanelDataSource",
      "ElementInspectorFormPanelDelegate",
      "ElementInspectorViewControllerDelegate",
      "ElementInspectorViewModelProtocol"
    ]
  },
  {
    "size": 6,
    "rep": "EmptyStatesViewModelOutputs",
    "tokens": [
      "empty",
      "inputs",
      "model",
      "outputs",
      "state",
      "states",
      "type",
      "view"
    ],
    "members": [
      "EmptyStateViewModelInputs",
      "EmptyStateViewModelOutputs",
      "EmptyStateViewModelType",
      "EmptyStatesViewModelInputs",
      "EmptyStatesViewModelOutputs",
      "EmptyStatesViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "GTOEYear",
    "tokens": [
      "gtoeday",
      "gtoeera",
      "gtoeyear",
      "ltoeday",
      "ltoeera",
      "ltoeyear"
    ],
    "members": [
      "GTOEDay",
      "GTOEEra",
      "GTOEYear",
      "LTOEDay",
      "LTOEEra",
      "LTOEYear"
    ]
  },
  {
    "size": 6,
    "rep": "Layoutable",
    "tokens": [
      "backed",
      "delegate",
      "item",
      "layout",
      "layoutable",
      "managed",
      "model"
    ],
    "members": [
      "LayoutBacked",
      "LayoutDelegate",
      "LayoutItem",
      "LayoutManaged",
      "LayoutModel",
      "Layoutable"
    ]
  },
  {
    "size": 6,
    "rep": "MoviesQueryListViewModelInput",
    "tokens": [
      "details",
      "input",
      "list",
      "model",
      "movie",
      "movies",
      "output",
      "query",
      "view"
    ],
    "members": [
      "MovieDetailsViewModelInput",
      "MovieDetailsViewModelOutput",
      "MoviesListViewModelInput",
      "MoviesListViewModelOutput",
      "MoviesQueryListViewModelInput",
      "MoviesQueryListViewModelOutput"
    ]
  },
  {
    "size": 6,
    "rep": "NotificationPresenter",
    "tokens": [
      "enum",
      "notification",
      "observer",
      "poster",
      "presenter",
      "protocol",
      "receiver"
    ],
    "members": [
      "NotificationEnum",
      "NotificationObserver",
      "NotificationPoster",
      "NotificationPresenter",
      "NotificationProtocol",
      "NotificationReceiver"
    ]
  },
  {
    "size": 6,
    "rep": "OCKContactViewSynchronizerProtocol",
    "tokens": [
      "contact",
      "ockany",
      "ockcalendar",
      "ockchart",
      "ockcontact",
      "ocktask",
      "protocol",
      "synchronizer",
      "task",
      "view"
    ],
    "members": [
      "OCKAnyContactViewSynchronizerProtocol",
      "OCKAnyTaskViewSynchronizerProtocol",
      "OCKCalendarViewSynchronizerProtocol",
      "OCKChartViewSynchronizerProtocol",
      "OCKContactViewSynchronizerProtocol",
      "OCKTaskViewSynchronizerProtocol"
    ]
  },
  {
    "size": 6,
    "rep": "OCKContactDisplayable",
    "tokens": [
      "displayable",
      "ockcalendar",
      "ockchart",
      "ockcontact",
      "ocktask",
      "updatable"
    ],
    "members": [
      "OCKCalendarDisplayable",
      "OCKChartDisplayable",
      "OCKContactDisplayable",
      "OCKContactUpdatable",
      "OCKTaskDisplayable",
      "OCKTaskUpdatable"
    ]
  },
  {
    "size": 6,
    "rep": "RecoilNode",
    "tokens": [
      "async",
      "hook",
      "key",
      "node",
      "recoil",
      "sync",
      "uiscope"
    ],
    "members": [
      "RecoilAsyncNode",
      "RecoilHook",
      "RecoilKey",
      "RecoilNode",
      "RecoilSyncNode",
      "RecoilUIScope"
    ]
  },
  {
    "size": 6,
    "rep": "SettingsPrivacyViewModelOutputs",
    "tokens": [
      "account",
      "inputs",
      "model",
      "outputs",
      "privacy",
      "settings",
      "type",
      "view"
    ],
    "members": [
      "SettingsAccountViewModelInputs",
      "SettingsAccountViewModelOutputs",
      "SettingsAccountViewModelType",
      "SettingsPrivacyViewModelInputs",
      "SettingsPrivacyViewModelOutputs",
      "SettingsPrivacyViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "ShippingRuleCellViewModelInputs",
    "tokens": [
      "cell",
      "inputs",
      "model",
      "outputs",
      "rule",
      "rules",
      "shipping",
      "type",
      "view"
    ],
    "members": [
      "ShippingRuleCellViewModelInputs",
      "ShippingRuleCellViewModelOutputs",
      "ShippingRuleCellViewModelType",
      "ShippingRulesViewModelInputs",
      "ShippingRulesViewModelOutputs",
      "ShippingRulesViewModelType"
    ]
  },
  {
    "size": 6,
    "rep": "SystemAlert",
    "tokens": [
      "alert",
      "allow",
      "cancel",
      "deny",
      "ok",
      "space",
      "system",
      "tracker"
    ],
    "members": [
      "SystemAlert",
      "SystemAlertAllow",
      "SystemAlertCancel",
      "SystemAlertDeny",
      "SystemAlertOk",
      "SystemSpaceTracker"
    ]
  },
  {
    "size": 6,
    "rep": "TransitionContext",
    "tokens": [
      "animatable",
      "animation",
      "animator",
      "context",
      "controller",
      "transaction",
      "transition",
      "type"
    ],
    "members": [
      "TransactionContext",
      "TransactionController",
      "TransitionAnimatable",
      "TransitionAnimation",
      "TransitionAnimatorType",
      "TransitionContext"
    ]
  },
  {
    "size": 5,
    "rep": "CoachMarksControllerDelegate",
    "tokens": [
      "coach",
      "controller",
      "data",
      "delegate",
      "marks",
      "proxy",
      "source",
      "view"
    ],
    "members": [
      "CoachMarksControllerDataSource",
      "CoachMarksControllerDelegate",
      "CoachMarksControllerProxyDataSource",
      "CoachMarksControllerProxyDelegate",
      "CoachMarksViewControllerDelegate"
    ]
  },
  {
    "size": 5,
    "rep": "CollectionSection",
    "tokens": [
      "collection",
      "data",
      "layout",
      "provider",
      "section",
      "skeleton",
      "view"
    ],
    "members": [
      "CollectionDataProvider",
      "CollectionSection",
      "CollectionSkeleton",
      "CollectionViewLayout",
      "CollectionViewProvider"
    ]
  },
  {
    "size": 5,
    "rep": "DateParsable",
    "tokens": [
      "data",
      "date",
      "formattable",
      "parsable",
      "parser",
      "provider"
    ],
    "members": [
      "DataParser",
      "DataProvider",
      "DateFormattable",
      "DateParsable",
      "DateProvider"
    ]
  },
  {
    "size": 5,
    "rep": "DependentAsType",
    "tokens": [
      "as",
      "dependency",
      "dependent",
      "key",
      "object",
      "type",
      "value"
    ],
    "members": [
      "Dependency",
      "DependencyKey",
      "DependentAsObject",
      "DependentAsType",
      "DependentAsValue"
    ]
  },
  {
    "size": 5,
    "rep": "Expression",
    "tokens": [
      "expressible",
      "expression",
      "matcher",
      "parser",
      "type"
    ],
    "members": [
      "Expressible",
      "Expression",
      "ExpressionMatcher",
      "ExpressionParser",
      "ExpressionType"
    ]
  },
  {
    "size": 5,
    "rep": "FinderFile",
    "tokens": [
      "disk",
      "file",
      "finder",
      "folder",
      "item",
      "label"
    ],
    "members": [
      "FinderDisk",
      "FinderFile",
      "FinderFolder",
      "FinderItem",
      "FinderLabel"
    ]
  },
  {
    "size": 5,
    "rep": "LayoutExampleSceneDisplayLogic",
    "tokens": [
      "business",
      "data",
      "display",
      "example",
      "layout",
      "logic",
      "passing",
      "routing",
      "scene",
      "store"
    ],
    "members": [
      "LayoutExampleSceneBusinessLogic",
      "LayoutExampleSceneDataPassing",
      "LayoutExampleSceneDataStore",
      "LayoutExampleSceneDisplayLogic",
      "LayoutExampleSceneRoutingLogic"
    ]
  },
  {
    "size": 5,
    "rep": "LayoutSettingsSceneDisplayLogic",
    "tokens": [
      "business",
      "data",
      "display",
      "layout",
      "logic",
      "passing",
      "routing",
      "scene",
      "settings",
      "store"
    ],
    "members": [
      "LayoutSettingsSceneBusinessLogic",
      "LayoutSettingsSceneDataPassing",
      "LayoutSettingsSceneDataStore",
      "LayoutSettingsSceneDisplayLogic",
      "LayoutSettingsSceneRoutingLogic"
    ]
  },
  {
    "size": 5,
    "rep": "LightboxControllerTapDelegate",
    "tokens": [
      "controller",
      "delegate",
      "delete",
      "dismissal",
      "lightbox",
      "page",
      "tap",
      "touch"
    ],
    "members": [
      "LightboxControllerDeleteDelegate",
      "LightboxControllerDismissalDelegate",
      "LightboxControllerPageDelegate",
      "LightboxControllerTapDelegate",
      "LightboxControllerTouchDelegate"
    ]
  },
  {
    "size": 5,
    "rep": "Parser",
    "tokens": [
      "object",
      "parsable",
      "parse",
      "parser",
      "role",
      "user"
    ],
    "members": [
      "Parsable",
      "ParseObject",
      "ParseRole",
      "ParseUser",
      "Parser"
    ]
  },
  {
    "size": 5,
    "rep": "ParseEncodable",
    "tokens": [
      "cloud",
      "cloudable",
      "encodable",
      "hookable",
      "parse",
      "typeable",
      "user"
    ],
    "members": [
      "ParseCloudUser",
      "ParseCloudable",
      "ParseEncodable",
      "ParseHookable",
      "ParseTypeable"
    ]
  },
  {
    "size": 5,
    "rep": "StoryboardBased",
    "tokens": [
      "based",
      "loadable",
      "scene",
      "storyboard",
      "type",
      "view"
    ],
    "members": [
      "StoryboardBased",
      "StoryboardLoadable",
      "StoryboardScene",
      "StoryboardType",
      "StoryboardView"
    ]
  },
  {
    "size": 5,
    "rep": "WebSocketMessageHandler",
    "tokens": [
      "client",
      "delegate",
      "error",
      "handler",
      "message",
      "parser",
      "serializer",
      "socket",
      "web"
    ],
    "members": [
      "WebSocketClientDelegate",
      "WebSocketErrorHandler",
      "WebSocketMessageHandler",
      "WebSocketMessageSerializer",
      "WebSocketParserDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "AnimationImageProvider",
    "tokens": [
      "animation",
      "cache",
      "environment",
      "font",
      "image",
      "provider"
    ],
    "members": [
      "AnimationCacheProvider",
      "AnimationEnvironment",
      "AnimationFontProvider",
      "AnimationImageProvider"
    ]
  },
  {
    "size": 4,
    "rep": "ApplicationDelegate",
    "tokens": [
      "application",
      "delegate",
      "element",
      "helper",
      "menu",
      "type"
    ],
    "members": [
      "ApplicationDelegate",
      "ApplicationElementType",
      "ApplicationHelper",
      "ApplicationMenuDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "AsyncBearerAuthenticator",
    "tokens": [
      "async",
      "authenticator",
      "basic",
      "bearer",
      "request",
      "session"
    ],
    "members": [
      "AsyncBasicAuthenticator",
      "AsyncBearerAuthenticator",
      "AsyncRequestAuthenticator",
      "AsyncSessionAuthenticator"
    ]
  },
  {
    "size": 4,
    "rep": "BackerDashboardProjectsViewModelType",
    "tokens": [
      "backer",
      "cell",
      "dashboard",
      "inputs",
      "model",
      "outputs",
      "project",
      "projects",
      "type",
      "view"
    ],
    "members": [
      "BackerDashboardProjectCellViewModelType",
      "BackerDashboardProjectsViewModelInputs",
      "BackerDashboardProjectsViewModelOutputs",
      "BackerDashboardProjectsViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "Bindable",
    "tokens": [
      "base",
      "bind",
      "bindable",
      "binder",
      "toable",
      "type"
    ],
    "members": [
      "BindToable",
      "Bindable",
      "BinderBase",
      "BinderType"
    ]
  },
  {
    "size": 4,
    "rep": "BookmarksHandler",
    "tokens": [
      "bookmarks",
      "cell",
      "delegate",
      "folder",
      "handler",
      "saver"
    ],
    "members": [
      "BookmarksDelegate",
      "BookmarksFolderCell",
      "BookmarksHandler",
      "BookmarksSaver"
    ]
  },
  {
    "size": 4,
    "rep": "CDMarkdownLinkElement",
    "tokens": [
      "cdmarkdown",
      "common",
      "delegate",
      "element",
      "label",
      "level",
      "link"
    ],
    "members": [
      "CDMarkdownCommonElement",
      "CDMarkdownLabelDelegate",
      "CDMarkdownLevelElement",
      "CDMarkdownLinkElement"
    ]
  },
  {
    "size": 4,
    "rep": "ChannelInboundInvoker",
    "tokens": [
      "channel",
      "handler",
      "inbound",
      "invoker",
      "outbound"
    ],
    "members": [
      "ChannelInboundHandler",
      "ChannelInboundInvoker",
      "ChannelOutboundHandler",
      "ChannelOutboundInvoker"
    ]
  },
  {
    "size": 4,
    "rep": "ChatMessageCollectionAdapterProtocol",
    "tokens": [
      "adapter",
      "chat",
      "collection",
      "controller",
      "delegate",
      "holder",
      "message",
      "messages",
      "protocol",
      "view"
    ],
    "members": [
      "ChatMessageCollectionAdapterDelegate",
      "ChatMessageCollectionAdapterProtocol",
      "ChatMessagesCollectionHolderProtocol",
      "ChatMessagesViewControllerDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "CollectionDataActionsInterface",
    "tokens": [
      "actions",
      "animation",
      "collection",
      "data",
      "delegate",
      "interface",
      "manual",
      "reload",
      "state"
    ],
    "members": [
      "CollectionDataActionsInterface",
      "CollectionDataAnimationDelegate",
      "CollectionDataManualReloadDelegate",
      "CollectionDataStateInterface"
    ]
  },
  {
    "size": 4,
    "rep": "CollectionSectionDataStateInterface",
    "tokens": [
      "actions",
      "animation",
      "collection",
      "data",
      "delegate",
      "fixed",
      "interface",
      "section",
      "state"
    ],
    "members": [
      "CollectionDataFixedSectionInterface",
      "CollectionSectionDataActionsInterface",
      "CollectionSectionDataAnimationDelegate",
      "CollectionSectionDataStateInterface"
    ]
  },
  {
    "size": 4,
    "rep": "CommentTableViewFooterViewModelType",
    "tokens": [
      "comment",
      "delegate",
      "footer",
      "inputs",
      "model",
      "outputs",
      "table",
      "type",
      "view"
    ],
    "members": [
      "CommentTableViewFooterViewDelegate",
      "CommentTableViewFooterViewModelInputs",
      "CommentTableViewFooterViewModelOutputs",
      "CommentTableViewFooterViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "Component",
    "tokens": [
      "component",
      "composable",
      "composite",
      "compound"
    ],
    "members": [
      "Component",
      "Composable",
      "Composite",
      "Compound"
    ]
  },
  {
    "size": 4,
    "rep": "ViewRepresentable",
    "tokens": [
      "date",
      "file",
      "refreshable",
      "representable",
      "view"
    ],
    "members": [
      "DateRepresentable",
      "FileRepresentable",
      "ViewRefreshable",
      "ViewRepresentable"
    ]
  },
  {
    "size": 4,
    "rep": "DefaultsBridge",
    "tokens": [
      "bridge",
      "defaultable",
      "defaults",
      "key",
      "providing"
    ],
    "members": [
      "Defaultable",
      "DefaultsBridge",
      "DefaultsKey",
      "DefaultsProviding"
    ]
  },
  {
    "size": 4,
    "rep": "DERCodable",
    "tokens": [
      "demoable",
      "dercodable",
      "derdecodable",
      "derencodable"
    ],
    "members": [
      "DERCodable",
      "DERDecodable",
      "DEREncodable",
      "Demoable"
    ]
  },
  {
    "size": 4,
    "rep": "TransitionProtocol",
    "tokens": [
      "destination",
      "performer",
      "protocol",
      "transition",
      "transitioner",
      "type"
    ],
    "members": [
      "DestinationProtocol",
      "TransitionPerformer",
      "TransitionProtocol",
      "TransitionerType"
    ]
  },
  {
    "size": 4,
    "rep": "DispatchSourceInterface",
    "tokens": [
      "dispatch",
      "factory",
      "group",
      "interface",
      "queue",
      "source",
      "timer"
    ],
    "members": [
      "DispatchGroupInterface",
      "DispatchQueueInterface",
      "DispatchSourceInterface",
      "DispatchSourceTimerFactory"
    ]
  },
  {
    "size": 4,
    "rep": "SharingDelegate",
    "tokens": [
      "delegate",
      "dialog",
      "drag",
      "drawing",
      "sharing"
    ],
    "members": [
      "DragDelegate",
      "DrawingDelegate",
      "SharingDelegate",
      "SharingDialog"
    ]
  },
  {
    "size": 4,
    "rep": "DynamicViewPresenter",
    "tokens": [
      "content",
      "dynamic",
      "presentable",
      "presenter",
      "property",
      "view"
    ],
    "members": [
      "DynamicViewContent",
      "DynamicViewPresentable",
      "DynamicViewPresenter",
      "DynamicViewProperty"
    ]
  },
  {
    "size": 4,
    "rep": "HomeViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "edit",
      "hero",
      "home",
      "video",
      "view"
    ],
    "members": [
      "EditViewControllerDelegate",
      "HeroViewControllerDelegate",
      "HomeViewControllerDelegate",
      "VideoViewControllerDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "FacebookConfirmationViewModelOutputs",
    "tokens": [
      "confirmation",
      "errors",
      "facebook",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "FacebookConfirmationViewModelErrors",
      "FacebookConfirmationViewModelInputs",
      "FacebookConfirmationViewModelOutputs",
      "FacebookConfirmationViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "FaviconURLFetcher",
    "tokens": [
      "favicon",
      "fetcher",
      "urlcache",
      "urlfetcher",
      "urlhandler"
    ],
    "members": [
      "FaviconFetcher",
      "FaviconURLCache",
      "FaviconURLFetcher",
      "FaviconURLHandler"
    ]
  },
  {
    "size": 4,
    "rep": "FileRenderer",
    "tokens": [
      "file",
      "generator",
      "reader",
      "renderer",
      "view"
    ],
    "members": [
      "FileGenerator",
      "FileReader",
      "FileRenderer",
      "ViewRenderer"
    ]
  },
  {
    "size": 4,
    "rep": "FinderAliasList",
    "tokens": [
      "alias",
      "application",
      "clipping",
      "file",
      "finder",
      "list"
    ],
    "members": [
      "FinderAliasFile",
      "FinderAliasList",
      "FinderApplication",
      "FinderClipping"
    ]
  },
  {
    "size": 4,
    "rep": "GalleryCollectionViewItemDelegate",
    "tokens": [
      "collection",
      "content",
      "data",
      "delegate",
      "gallery",
      "internal",
      "item",
      "source",
      "view"
    ],
    "members": [
      "GalleryCollectionContentViewDelegate",
      "GalleryCollectionDataSourceDelegate",
      "GalleryCollectionViewItemDelegate",
      "GalleryInternalCollectionViewDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "GTOEMinute",
    "tokens": [
      "gtoeminute",
      "gtoemonth",
      "ltoeminute",
      "ltoemonth"
    ],
    "members": [
      "GTOEMinute",
      "GTOEMonth",
      "LTOEMinute",
      "LTOEMonth"
    ]
  },
  {
    "size": 4,
    "rep": "ImagePickerDelegate",
    "tokens": [
      "delegate",
      "factory",
      "image",
      "images",
      "interactor",
      "picker",
      "pipeline"
    ],
    "members": [
      "ImagePickerDelegate",
      "ImagePickerFactory",
      "ImagePipelineDelegate",
      "ImagesInteractor"
    ]
  },
  {
    "size": 4,
    "rep": "KeyboardTrackerDelegate",
    "tokens": [
      "delegate",
      "helper",
      "keyboard",
      "protocol",
      "table",
      "tracker",
      "view"
    ],
    "members": [
      "KeyboardHelperDelegate",
      "KeyboardTableViewDelegate",
      "KeyboardTrackerDelegate",
      "KeyboardTrackerProtocol"
    ]
  },
  {
    "size": 4,
    "rep": "LaunchEnvironmentWithMultipleValues",
    "tokens": [
      "argument",
      "environment",
      "launch",
      "multiple",
      "single",
      "value",
      "values",
      "with"
    ],
    "members": [
      "LaunchArgumentWithMultipleValues",
      "LaunchArgumentWithSingleValue",
      "LaunchEnvironmentWithMultipleValues",
      "LaunchEnvironmentWithSingleValue"
    ]
  },
  {
    "size": 4,
    "rep": "LocationAlertOk",
    "tokens": [
      "alert",
      "allow",
      "cancel",
      "deny",
      "location",
      "ok"
    ],
    "members": [
      "LocationAlertAllow",
      "LocationAlertCancel",
      "LocationAlertDeny",
      "LocationAlertOk"
    ]
  },
  {
    "size": 4,
    "rep": "ManagedObjectEncodable",
    "tokens": [
      "convertible",
      "decodable",
      "encodable",
      "managed",
      "object",
      "protocol"
    ],
    "members": [
      "ManagedObjectConvertible",
      "ManagedObjectDecodable",
      "ManagedObjectEncodable",
      "ManagedObjectProtocol"
    ]
  },
  {
    "size": 4,
    "rep": "MMPlayerToProtocol",
    "tokens": [
      "from",
      "item",
      "layer",
      "mmplayer",
      "protocol",
      "to"
    ],
    "members": [
      "MMPlayerFromProtocol",
      "MMPlayerItemProtocol",
      "MMPlayerLayerProtocol",
      "MMPlayerToProtocol"
    ]
  },
  {
    "size": 4,
    "rep": "NextLevelDeviceDelegate",
    "tokens": [
      "delegate",
      "device",
      "level",
      "next",
      "photo",
      "preview",
      "video"
    ],
    "members": [
      "NextLevelDeviceDelegate",
      "NextLevelPhotoDelegate",
      "NextLevelPreviewDelegate",
      "NextLevelVideoDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "OverlayViewDelegate",
    "tokens": [
      "delegate",
      "manager",
      "overlay",
      "presenting",
      "view",
      "window"
    ],
    "members": [
      "OverlayManagerDelegate",
      "OverlayViewDelegate",
      "OverlayViewPresenting",
      "OverlayWindowDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "PhotosInputDataProviderProtocol",
    "tokens": [
      "camera",
      "cell",
      "data",
      "delegate",
      "input",
      "photos",
      "picker",
      "protocol",
      "provider"
    ],
    "members": [
      "PhotosInputCameraPickerProtocol",
      "PhotosInputCellProviderProtocol",
      "PhotosInputDataProviderDelegate",
      "PhotosInputDataProviderProtocol"
    ]
  },
  {
    "size": 4,
    "rep": "PPOProjectCardViewModelInputs",
    "tokens": [
      "card",
      "inputs",
      "model",
      "outputs",
      "ppocontainer",
      "ppoproject",
      "view"
    ],
    "members": [
      "PPOContainerViewModelInputs",
      "PPOContainerViewModelOutputs",
      "PPOProjectCardViewModelInputs",
      "PPOProjectCardViewModelOutputs"
    ]
  },
  {
    "size": 4,
    "rep": "PresentationModel",
    "tokens": [
      "designable",
      "link",
      "manager",
      "model",
      "presentation",
      "view"
    ],
    "members": [
      "PresentationDesignable",
      "PresentationLinkView",
      "PresentationManager",
      "PresentationModel"
    ]
  },
  {
    "size": 4,
    "rep": "RewardAddOnCardViewModelType",
    "tokens": [
      "add",
      "card",
      "delegate",
      "inputs",
      "model",
      "on",
      "outputs",
      "reward",
      "type",
      "view"
    ],
    "members": [
      "RewardAddOnCardViewDelegate",
      "RewardAddOnCardViewModelInputs",
      "RewardAddOnCardViewModelOutputs",
      "RewardAddOnCardViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "RewardTrackingDetailsViewModelType",
    "tokens": [
      "delegate",
      "details",
      "inputs",
      "model",
      "outputs",
      "reward",
      "tracking",
      "type",
      "view"
    ],
    "members": [
      "RewardTrackingDetailsViewDelegate",
      "RewardTrackingDetailsViewModelInputs",
      "RewardTrackingDetailsViewModelOutputs",
      "RewardTrackingDetailsViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "SearchFiltersUseCaseUIOutputs",
    "tokens": [
      "case",
      "data",
      "filters",
      "inputs",
      "outputs",
      "search",
      "type",
      "uioutputs",
      "use"
    ],
    "members": [
      "SearchFiltersUseCaseDataOutputs",
      "SearchFiltersUseCaseInputs",
      "SearchFiltersUseCaseType",
      "SearchFiltersUseCaseUIOutputs"
    ]
  },
  {
    "size": 4,
    "rep": "Settings_p",
    "tokens": [
      "p",
      "pane",
      "setting",
      "settings",
      "v"
    ],
    "members": [
      "Setting",
      "SettingsPane",
      "Settings_p",
      "Settings_v"
    ]
  },
  {
    "size": 4,
    "rep": "SettingsAccountPickerCellViewModelInputs",
    "tokens": [
      "account",
      "cell",
      "inputs",
      "model",
      "picker",
      "privacy",
      "settings",
      "switch",
      "type",
      "view"
    ],
    "members": [
      "SettingsAccountPickerCellViewModelInputs",
      "SettingsAccountPickerCellViewModelType",
      "SettingsPrivacySwitchCellViewModelInputs",
      "SettingsPrivacySwitchCellViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "SettingsViewModelType",
    "tokens": [
      "delegate",
      "flow",
      "inputs",
      "model",
      "outputs",
      "settings",
      "type",
      "view"
    ],
    "members": [
      "SettingsFlowDelegate",
      "SettingsViewModelInputs",
      "SettingsViewModelOutputs",
      "SettingsViewModelType"
    ]
  },
  {
    "size": 4,
    "rep": "ShapeWithThreePoints",
    "tokens": [
      "points",
      "shape",
      "standard",
      "state",
      "stroke",
      "three",
      "two",
      "with"
    ],
    "members": [
      "ShapeWithStandardState",
      "ShapeWithStrokeState",
      "ShapeWithThreePoints",
      "ShapeWithTwoPoints"
    ]
  },
  {
    "size": 4,
    "rep": "SideMenuAnimationControllerDelegate",
    "tokens": [
      "animation",
      "controller",
      "delegate",
      "menu",
      "navigation",
      "presentation",
      "side",
      "transition"
    ],
    "members": [
      "SideMenuAnimationControllerDelegate",
      "SideMenuNavigationControllerDelegate",
      "SideMenuPresentationControllerDelegate",
      "SideMenuTransitionControllerDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "SiteImageHandler",
    "tokens": [
      "cache",
      "downloader",
      "handler",
      "image",
      "site",
      "view"
    ],
    "members": [
      "SiteImageCache",
      "SiteImageDownloader",
      "SiteImageHandler",
      "SiteImageView"
    ]
  },
  {
    "size": 4,
    "rep": "SocketEngineSpec",
    "tokens": [
      "client",
      "engine",
      "pollable",
      "socket",
      "spec",
      "websocket"
    ],
    "members": [
      "SocketEngineClient",
      "SocketEnginePollable",
      "SocketEngineSpec",
      "SocketEngineWebsocket"
    ]
  },
  {
    "size": 4,
    "rep": "TopTabCellDelegate",
    "tokens": [
      "cell",
      "delegate",
      "scroll",
      "tab",
      "tabs",
      "top"
    ],
    "members": [
      "TabCellDelegate",
      "TopTabCellDelegate",
      "TopTabsDelegate",
      "TopTabsScrollDelegate"
    ]
  },
  {
    "size": 4,
    "rep": "Transformer",
    "tokens": [
      "model",
      "transform",
      "transformer",
      "transport",
      "type"
    ],
    "members": [
      "TransformModel",
      "TransformType",
      "Transformer",
      "Transport"
    ]
  },
  {
    "size": 4,
    "rep": "Validator",
    "tokens": [
      "result",
      "rule",
      "validatable",
      "validation",
      "validator"
    ],
    "members": [
      "Validatable",
      "ValidationRule",
      "Validator",
      "ValidatorResult"
    ]
  },
  {
    "size": 4,
    "rep": "WindowManager",
    "tokens": [
      "finder",
      "image",
      "list",
      "manager",
      "mover",
      "window"
    ],
    "members": [
      "WindowFinder",
      "WindowListImage",
      "WindowManager",
      "WindowMover"
    ]
  },
  {
    "size": 3,
    "rep": "AboutSettingsDelegate",
    "tokens": [
      "about",
      "account",
      "delegate",
      "settings",
      "tool"
    ],
    "members": [
      "AboutSettingsDelegate",
      "AccountSettingsDelegate",
      "ToolSettingsDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "ActionType",
    "tokens": [
      "action",
      "actionable",
      "factory",
      "type"
    ],
    "members": [
      "ActionFactory",
      "ActionType",
      "Actionable"
    ]
  },
  {
    "size": 3,
    "rep": "ActivityProjectStatusViewModelOutputs",
    "tokens": [
      "activity",
      "inputs",
      "model",
      "outputs",
      "project",
      "status",
      "type",
      "view"
    ],
    "members": [
      "ActivityProjectStatusViewModelInputs",
      "ActivityProjectStatusViewModelOutputs",
      "ActivityProjectStatusViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ActivitySampleProjectCellDelegate",
    "tokens": [
      "activity",
      "backing",
      "cell",
      "delegate",
      "follow",
      "project",
      "sample"
    ],
    "members": [
      "ActivitySampleBackingCellDelegate",
      "ActivitySampleFollowCellDelegate",
      "ActivitySampleProjectCellDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "ApplePayTokenUseCaseUIOutputs",
    "tokens": [
      "apple",
      "case",
      "data",
      "outputs",
      "pay",
      "token",
      "uiinputs",
      "uioutputs",
      "use"
    ],
    "members": [
      "ApplePayTokenUseCaseDataOutputs",
      "ApplePayTokenUseCaseUIInputs",
      "ApplePayTokenUseCaseUIOutputs"
    ]
  },
  {
    "size": 3,
    "rep": "BackerDashboardViewModelOutputs",
    "tokens": [
      "backer",
      "dashboard",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "BackerDashboardViewModelInputs",
      "BackerDashboardViewModelOutputs",
      "BackerDashboardViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "BackingCellViewModelOutputs",
    "tokens": [
      "backing",
      "cell",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "BackingCellViewModelInputs",
      "BackingCellViewModelOutputs",
      "BackingCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "BetaToolsViewModelOutputs",
    "tokens": [
      "beta",
      "inputs",
      "model",
      "outputs",
      "tools",
      "type",
      "view"
    ],
    "members": [
      "BetaToolsViewModelInputs",
      "BetaToolsViewModelOutputs",
      "BetaToolsViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "BLEDelegate",
    "tokens": [
      "bledelegate",
      "bubble",
      "buffer",
      "delegate"
    ],
    "members": [
      "BLEDelegate",
      "BubbleDelegate",
      "BufferDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "CategoryPillCellViewModelOutputs",
    "tokens": [
      "category",
      "cell",
      "inputs",
      "model",
      "outputs",
      "pill",
      "type",
      "view"
    ],
    "members": [
      "CategoryPillCellViewModelInputs",
      "CategoryPillCellViewModelOutputs",
      "CategoryPillCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "CategorySelectionHeaderViewModelOutputs",
    "tokens": [
      "category",
      "header",
      "inputs",
      "model",
      "outputs",
      "selection",
      "type",
      "view"
    ],
    "members": [
      "CategorySelectionHeaderViewModelInputs",
      "CategorySelectionHeaderViewModelOutputs",
      "CategorySelectionHeaderViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ChannelInvoker",
    "tokens": [
      "channel",
      "core",
      "handler",
      "invoker"
    ],
    "members": [
      "ChannelCore",
      "ChannelHandler",
      "ChannelInvoker"
    ]
  },
  {
    "size": 3,
    "rep": "ChatItemPresenterBuilderProtocol",
    "tokens": [
      "builder",
      "chat",
      "factory",
      "item",
      "menu",
      "presenter",
      "protocol"
    ],
    "members": [
      "ChatItemMenuPresenterProtocol",
      "ChatItemPresenterBuilderProtocol",
      "ChatItemPresenterFactoryProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "FieldProtocol",
    "tokens": [
      "child",
      "field",
      "filter",
      "protocol"
    ],
    "members": [
      "ChildProtocol",
      "FieldProtocol",
      "FilterProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "CloudKitDecodable",
    "tokens": [
      "cloud",
      "codable",
      "decodable",
      "encodable",
      "kit"
    ],
    "members": [
      "CloudKitCodable",
      "CloudKitDecodable",
      "CloudKitEncodable"
    ]
  },
  {
    "size": 3,
    "rep": "CoachMarkBodyView",
    "tokens": [
      "arrow",
      "body",
      "coach",
      "mark",
      "skip",
      "view"
    ],
    "members": [
      "CoachMarkArrowView",
      "CoachMarkBodyView",
      "CoachMarkSkipView"
    ]
  },
  {
    "size": 3,
    "rep": "CollectionViewDropDelegate",
    "tokens": [
      "collection",
      "data",
      "delegate",
      "drop",
      "events",
      "handling",
      "provider",
      "view"
    ],
    "members": [
      "CollectionViewDataProvider",
      "CollectionViewDropDelegate",
      "CollectionViewEventsHandling"
    ]
  },
  {
    "size": 3,
    "rep": "ComponentVisitor",
    "tokens": [
      "component",
      "container",
      "model",
      "view",
      "visitor"
    ],
    "members": [
      "ComponentContainer",
      "ComponentViewModel",
      "ComponentVisitor"
    ]
  },
  {
    "size": 3,
    "rep": "Connection",
    "tokens": [
      "connected",
      "connection",
      "connections"
    ],
    "members": [
      "Connected",
      "Connection",
      "Connections"
    ]
  },
  {
    "size": 3,
    "rep": "ContainerCompositionProtocol",
    "tokens": [
      "composition",
      "configuration",
      "container",
      "control",
      "protocol",
      "queue"
    ],
    "members": [
      "ContainerCompositionProtocol",
      "ContainerConfigurationProtocol",
      "ContainerQueueControlProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "CreditCardCellViewModelOutputs",
    "tokens": [
      "card",
      "cell",
      "credit",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "CreditCardCellViewModelInputs",
      "CreditCardCellViewModelOutputs",
      "CreditCardCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "DataCaching",
    "tokens": [
      "caching",
      "chunk",
      "data",
      "loading"
    ],
    "members": [
      "DataCaching",
      "DataChunk",
      "DataLoading"
    ]
  },
  {
    "size": 3,
    "rep": "EncodableTransformer",
    "tokens": [
      "arguments",
      "decodable",
      "encodable",
      "transformer"
    ],
    "members": [
      "DecodableTransformer",
      "EncodableArguments",
      "EncodableTransformer"
    ]
  },
  {
    "size": 3,
    "rep": "DiscoveryNavigationHeaderViewModelType",
    "tokens": [
      "delegate",
      "discovery",
      "header",
      "inputs",
      "model",
      "navigation",
      "type",
      "view"
    ],
    "members": [
      "DiscoveryNavigationHeaderViewDelegate",
      "DiscoveryNavigationHeaderViewModelInputs",
      "DiscoveryNavigationHeaderViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "DiscoveryViewModelOutputs",
    "tokens": [
      "discovery",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "DiscoveryViewModelInputs",
      "DiscoveryViewModelOutputs",
      "DiscoveryViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "DownloadDelegate",
    "tokens": [
      "delegate",
      "download",
      "downloading",
      "fetcher",
      "file"
    ],
    "members": [
      "DownloadDelegate",
      "DownloadFileFetcher",
      "DownloadingDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "ErroredBackingViewViewModelOutputs",
    "tokens": [
      "backing",
      "errored",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "ErroredBackingViewViewModelInputs",
      "ErroredBackingViewViewModelOutputs",
      "ErroredBackingViewViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "FacebookResetPasswordViewModelOutputs",
    "tokens": [
      "facebook",
      "inputs",
      "model",
      "outputs",
      "password",
      "reset",
      "type",
      "view"
    ],
    "members": [
      "FacebookResetPasswordViewModelInputs",
      "FacebookResetPasswordViewModelOutputs",
      "FacebookResetPasswordViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "FeatureFlagToolsViewModelOutputs",
    "tokens": [
      "feature",
      "flag",
      "inputs",
      "model",
      "outputs",
      "tools",
      "type",
      "view"
    ],
    "members": [
      "FeatureFlagToolsViewModelInputs",
      "FeatureFlagToolsViewModelOutputs",
      "FeatureFlagToolsViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "FeliCaCardItems",
    "tokens": [
      "ca",
      "card",
      "data",
      "feli",
      "item",
      "items",
      "type"
    ],
    "members": [
      "FeliCaCardData",
      "FeliCaCardItemType",
      "FeliCaCardItems"
    ]
  },
  {
    "size": 3,
    "rep": "FetchCategoriesUseCaseDataOutputs",
    "tokens": [
      "case",
      "categories",
      "data",
      "fetch",
      "locations",
      "outputs",
      "uioutputs",
      "use"
    ],
    "members": [
      "FetchCategoriesUseCaseDataOutputs",
      "FetchCategoriesUseCaseUIOutputs",
      "FetchLocationsUseCaseDataOutputs"
    ]
  },
  {
    "size": 3,
    "rep": "Fetchable",
    "tokens": [
      "clause",
      "fetch",
      "fetchable",
      "fetcher"
    ],
    "members": [
      "FetchClause",
      "Fetchable",
      "Fetcher"
    ]
  },
  {
    "size": 3,
    "rep": "FieldRelationshipToOneType",
    "tokens": [
      "field",
      "many",
      "one",
      "protocol",
      "relationship",
      "to",
      "type"
    ],
    "members": [
      "FieldRelationshipProtocol",
      "FieldRelationshipToManyType",
      "FieldRelationshipToOneType"
    ]
  },
  {
    "size": 3,
    "rep": "Filterable",
    "tokens": [
      "fileable",
      "filter",
      "filterable",
      "type"
    ],
    "members": [
      "Fileable",
      "FilterType",
      "Filterable"
    ]
  },
  {
    "size": 3,
    "rep": "FileSearchRule",
    "tokens": [
      "file",
      "files",
      "rule",
      "search",
      "searchable",
      "service"
    ],
    "members": [
      "FileSearchRule",
      "FileService",
      "FilesSearchable"
    ]
  },
  {
    "size": 3,
    "rep": "FileWatcherInput",
    "tokens": [
      "file",
      "input",
      "output",
      "protocol",
      "watcher"
    ],
    "members": [
      "FileWatcherInput",
      "FileWatcherOutput",
      "FileWatcherProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "FinderIconViewOptions",
    "tokens": [
      "column",
      "finder",
      "icon",
      "list",
      "options",
      "view"
    ],
    "members": [
      "FinderColumnViewOptions",
      "FinderIconViewOptions",
      "FinderListViewOptions"
    ]
  },
  {
    "size": 3,
    "rep": "FinderDesktopObject",
    "tokens": [
      "computer",
      "desktop",
      "finder",
      "object",
      "window"
    ],
    "members": [
      "FinderComputerObject",
      "FinderDesktopObject",
      "FinderDesktopWindow"
    ]
  },
  {
    "size": 3,
    "rep": "FirebaseAuthServiceType",
    "tokens": [
      "auth",
      "firebase",
      "firestore",
      "service",
      "storage",
      "type"
    ],
    "members": [
      "FirebaseAuthServiceType",
      "FirebaseStorageServiceType",
      "FirestoreServiceType"
    ]
  },
  {
    "size": 3,
    "rep": "FloatingPanelLayout",
    "tokens": [
      "behavior",
      "coordinator",
      "floating",
      "layout",
      "panel"
    ],
    "members": [
      "FloatingPanelBehavior",
      "FloatingPanelCoordinator",
      "FloatingPanelLayout"
    ]
  },
  {
    "size": 3,
    "rep": "FloatingTextFieldDelegate",
    "tokens": [
      "delegate",
      "field",
      "floating",
      "info",
      "location",
      "post",
      "text"
    ],
    "members": [
      "FloatingTextFieldDelegate",
      "LocationTextFieldDelegate",
      "PostInfoTextFieldDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "FontAwesomeTextRepresentable",
    "tokens": [
      "awesome",
      "font",
      "image",
      "representable",
      "requirement",
      "state",
      "text"
    ],
    "members": [
      "FontAwesomeImageRepresentable",
      "FontAwesomeStateRequirement",
      "FontAwesomeTextRepresentable"
    ]
  },
  {
    "size": 3,
    "rep": "HealthAlertOk",
    "tokens": [
      "alert",
      "allow",
      "deny",
      "health",
      "ok"
    ],
    "members": [
      "HealthAlertAllow",
      "HealthAlertDeny",
      "HealthAlertOk"
    ]
  },
  {
    "size": 3,
    "rep": "HomepageViewModelDelegate",
    "tokens": [
      "data",
      "delegate",
      "homepage",
      "model",
      "protocol",
      "view"
    ],
    "members": [
      "HomepageDataModelDelegate",
      "HomepageViewModelDelegate",
      "HomepageViewModelProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "URLConvertible",
    "tokens": [
      "convertible",
      "htmlconvertible",
      "upload",
      "urlconvertible"
    ],
    "members": [
      "HTMLConvertible",
      "URLConvertible",
      "UploadConvertible"
    ]
  },
  {
    "size": 3,
    "rep": "HTMLTupleNode",
    "tokens": [
      "htmlleaf",
      "htmltree",
      "htmltuple",
      "node"
    ],
    "members": [
      "HTMLLeafNode",
      "HTMLTreeNode",
      "HTMLTupleNode"
    ]
  },
  {
    "size": 3,
    "rep": "ImageViewElementCellViewModelOutputs",
    "tokens": [
      "cell",
      "element",
      "image",
      "inputs",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "ImageViewElementCellViewModelInputs",
      "ImageViewElementCellViewModelOutputs",
      "ImageViewElementCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "Interceptor",
    "tokens": [
      "interactor",
      "interceptor",
      "interpreter"
    ],
    "members": [
      "Interactor",
      "Interceptor",
      "Interpreter"
    ]
  },
  {
    "size": 3,
    "rep": "JSONReadable",
    "tokens": [
      "jsondecodable",
      "jsonreadable",
      "jsonwritable"
    ],
    "members": [
      "JSONDecodable",
      "JSONReadable",
      "JSONWritable"
    ]
  },
  {
    "size": 3,
    "rep": "LayoutConstantType",
    "tokens": [
      "anchor",
      "constant",
      "constraint",
      "item",
      "layout",
      "type"
    ],
    "members": [
      "LayoutAnchorType",
      "LayoutConstantType",
      "LayoutConstraintItem"
    ]
  },
  {
    "size": 3,
    "rep": "LoadingBarButtonItemViewModelOutputs",
    "tokens": [
      "bar",
      "button",
      "inputs",
      "item",
      "loading",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "LoadingBarButtonItemViewModelInputs",
      "LoadingBarButtonItemViewModelOutputs",
      "LoadingBarButtonItemViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "LoadingButtonViewModelOutputs",
    "tokens": [
      "button",
      "inputs",
      "loading",
      "model",
      "outputs",
      "type",
      "view"
    ],
    "members": [
      "LoadingButtonViewModelInputs",
      "LoadingButtonViewModelOutputs",
      "LoadingButtonViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "LocaleConvertible",
    "tokens": [
      "convertible",
      "interface",
      "locale",
      "log",
      "value"
    ],
    "members": [
      "LocaleConvertible",
      "LocaleInterface",
      "LogValueConvertible"
    ]
  },
  {
    "size": 3,
    "rep": "Lock",
    "tokens": [
      "key",
      "lock",
      "locking"
    ],
    "members": [
      "Lock",
      "LockKey",
      "Locking"
    ]
  },
  {
    "size": 3,
    "rep": "LoginSignupUseCaseUIOutputs",
    "tokens": [
      "case",
      "data",
      "login",
      "outputs",
      "signup",
      "uiinputs",
      "uioutputs",
      "use"
    ],
    "members": [
      "LoginSignupUseCaseDataOutputs",
      "LoginSignupUseCaseUIInputs",
      "LoginSignupUseCaseUIOutputs"
    ]
  },
  {
    "size": 3,
    "rep": "ManagePledgePaymentMethodViewModelType",
    "tokens": [
      "delegate",
      "inputs",
      "manage",
      "method",
      "model",
      "payment",
      "pledge",
      "type",
      "view"
    ],
    "members": [
      "ManagePledgePaymentMethodViewDelegate",
      "ManagePledgePaymentMethodViewModelInputs",
      "ManagePledgePaymentMethodViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ManagePledgeSummaryViewModelOutputs",
    "tokens": [
      "inputs",
      "manage",
      "model",
      "outputs",
      "pledge",
      "summary",
      "type",
      "view"
    ],
    "members": [
      "ManagePledgeSummaryViewModelInputs",
      "ManagePledgeSummaryViewModelOutputs",
      "ManagePledgeSummaryViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "MenuHelperURLBarInterface",
    "tokens": [
      "helper",
      "interface",
      "login",
      "menu",
      "urlbar",
      "view",
      "web"
    ],
    "members": [
      "MenuHelperLoginInterface",
      "MenuHelperURLBarInterface",
      "MenuHelperWebViewInterface"
    ]
  },
  {
    "size": 3,
    "rep": "MessageBannerViewControllerDelegate",
    "tokens": [
      "banner",
      "controller",
      "delegate",
      "dialog",
      "message",
      "presenting",
      "view"
    ],
    "members": [
      "MessageBannerViewControllerDelegate",
      "MessageBannerViewControllerPresenting",
      "MessageDialogViewControllerDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "MessageContentPresenterProtocol",
    "tokens": [
      "content",
      "delegate",
      "factory",
      "message",
      "presenter",
      "protocol"
    ],
    "members": [
      "MessageContentFactoryProtocol",
      "MessageContentPresenterDelegate",
      "MessageContentPresenterProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "MetadataCore",
    "tokens": [
      "core",
      "info",
      "metadata",
      "type"
    ],
    "members": [
      "MetadataCore",
      "MetadataInfo",
      "MetadataType"
    ]
  },
  {
    "size": 3,
    "rep": "ProgressUIProtocol",
    "tokens": [
      "controller",
      "mmprogress",
      "progress",
      "progression",
      "protocol",
      "uiprotocol"
    ],
    "members": [
      "MMProgressProtocol",
      "ProgressUIProtocol",
      "ProgressionController"
    ]
  },
  {
    "size": 3,
    "rep": "MockHttpRequest",
    "tokens": [
      "http",
      "mock",
      "request",
      "router",
      "server"
    ],
    "members": [
      "MockHttpRequest",
      "MockHttpRouter",
      "MockHttpServer"
    ]
  },
  {
    "size": 3,
    "rep": "MoviesQueriesStorage",
    "tokens": [
      "movies",
      "queries",
      "repository",
      "response",
      "storage"
    ],
    "members": [
      "MoviesQueriesRepository",
      "MoviesQueriesStorage",
      "MoviesResponseStorage"
    ]
  },
  {
    "size": 3,
    "rep": "NetworkService",
    "tokens": [
      "event",
      "network",
      "service",
      "session",
      "task"
    ],
    "members": [
      "NetworkService",
      "NetworkSession",
      "NetworkTaskEvent"
    ]
  },
  {
    "size": 3,
    "rep": "NotesVCProtocol",
    "tokens": [
      "notes",
      "notice",
      "nsobject",
      "protocol",
      "vcprotocol"
    ],
    "members": [
      "NSObjectProtocol",
      "NotesVCProtocol",
      "NoticeProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "OCKAnyContact",
    "tokens": [
      "contact",
      "ockany",
      "patient",
      "task"
    ],
    "members": [
      "OCKAnyContact",
      "OCKAnyPatient",
      "OCKAnyTask"
    ]
  },
  {
    "size": 3,
    "rep": "PapyrusRequest",
    "tokens": [
      "papyrus",
      "request",
      "response",
      "router"
    ],
    "members": [
      "PapyrusRequest",
      "PapyrusResponse",
      "PapyrusRouter"
    ]
  },
  {
    "size": 3,
    "rep": "ParentProtocol",
    "tokens": [
      "parent",
      "parser",
      "pattern",
      "protocol"
    ],
    "members": [
      "ParentProtocol",
      "ParserProtocol",
      "PatternProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "ParseHookParametable",
    "tokens": [
      "hook",
      "parametable",
      "parse",
      "requestable",
      "triggerable"
    ],
    "members": [
      "ParseHookParametable",
      "ParseHookRequestable",
      "ParseHookTriggerable"
    ]
  },
  {
    "size": 3,
    "rep": "PaymentMethodsUseCaseUIOutputs",
    "tokens": [
      "case",
      "data",
      "methods",
      "outputs",
      "payment",
      "uiinputs",
      "uioutputs",
      "use"
    ],
    "members": [
      "PaymentMethodsUseCaseDataOutputs",
      "PaymentMethodsUseCaseUIInputs",
      "PaymentMethodsUseCaseUIOutputs"
    ]
  },
  {
    "size": 3,
    "rep": "PersonalizationCellViewModelOutputs",
    "tokens": [
      "cell",
      "inputs",
      "model",
      "outputs",
      "personalization",
      "type",
      "view"
    ],
    "members": [
      "PersonalizationCellViewModelInputs",
      "PersonalizationCellViewModelOutputs",
      "PersonalizationCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "PillCellViewModelOutputs",
    "tokens": [
      "cell",
      "inputs",
      "model",
      "outputs",
      "pill",
      "type",
      "view"
    ],
    "members": [
      "PillCellViewModelInputs",
      "PillCellViewModelOutputs",
      "PillCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "PledgeLocalPickupViewModelOutputs",
    "tokens": [
      "inputs",
      "local",
      "model",
      "outputs",
      "pickup",
      "pledge",
      "type",
      "view"
    ],
    "members": [
      "PledgeLocalPickupViewModelInputs",
      "PledgeLocalPickupViewModelOutputs",
      "PledgeLocalPickupViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "PledgeOverTimeUseCaseOutputs",
    "tokens": [
      "case",
      "inputs",
      "outputs",
      "over",
      "pledge",
      "time",
      "type",
      "use"
    ],
    "members": [
      "PledgeOverTimeUseCaseInputs",
      "PledgeOverTimeUseCaseOutputs",
      "PledgeOverTimeUseCaseType"
    ]
  },
  {
    "size": 3,
    "rep": "PledgeViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "pledge",
      "type",
      "view"
    ],
    "members": [
      "PledgeViewModelInputs",
      "PledgeViewModelOutputs",
      "PledgeViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "PropertyDelegate",
    "tokens": [
      "delegate",
      "event",
      "pocket",
      "property",
      "type"
    ],
    "members": [
      "PocketDelegate",
      "PropertyDelegate",
      "PropertyEventType"
    ]
  },
  {
    "size": 3,
    "rep": "PostCampaignCheckoutViewModelOutputs",
    "tokens": [
      "campaign",
      "checkout",
      "inputs",
      "model",
      "outputs",
      "post",
      "type",
      "view"
    ],
    "members": [
      "PostCampaignCheckoutViewModelInputs",
      "PostCampaignCheckoutViewModelOutputs",
      "PostCampaignCheckoutViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ProjectTabDisclaimerCellDelegate",
    "tokens": [
      "cell",
      "delegate",
      "disclaimer",
      "main",
      "pamphlet",
      "project",
      "risks",
      "tab"
    ],
    "members": [
      "ProjectPamphletMainCellDelegate",
      "ProjectRisksDisclaimerCellDelegate",
      "ProjectTabDisclaimerCellDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "Reader",
    "tokens": [
      "p",
      "readable",
      "reader"
    ],
    "members": [
      "Readable",
      "Reader",
      "Reader_p"
    ]
  },
  {
    "size": 3,
    "rep": "Renderer",
    "tokens": [
      "node",
      "render",
      "renderable",
      "renderer"
    ],
    "members": [
      "RenderNode",
      "Renderable",
      "Renderer"
    ]
  },
  {
    "size": 3,
    "rep": "ReportProjectFormViewModelOutputs",
    "tokens": [
      "form",
      "inputs",
      "model",
      "outputs",
      "project",
      "report",
      "type",
      "view"
    ],
    "members": [
      "ReportProjectFormViewModelInputs",
      "ReportProjectFormViewModelOutputs",
      "ReportProjectFormViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "RequestProtocol",
    "tokens": [
      "options",
      "protocol",
      "request",
      "requester"
    ],
    "members": [
      "RequestOptions",
      "RequestProtocol",
      "RequesterProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "Resolver",
    "tokens": [
      "resolvable",
      "resolver",
      "resolving"
    ],
    "members": [
      "Resolvable",
      "Resolver",
      "Resolving"
    ]
  },
  {
    "size": 3,
    "rep": "RootViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "root",
      "type",
      "view"
    ],
    "members": [
      "RootViewModelInputs",
      "RootViewModelOutputs",
      "RootViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "SocketProtocol",
    "tokens": [
      "addr",
      "protocol",
      "sbobject",
      "sock",
      "socket"
    ],
    "members": [
      "SBObjectProtocol",
      "SockAddrProtocol",
      "SocketProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "SchemaLoader",
    "tokens": [
      "handler",
      "loader",
      "scheduler",
      "schema",
      "scheme"
    ],
    "members": [
      "Scheduler",
      "SchemaLoader",
      "SchemeHandler"
    ]
  },
  {
    "size": 3,
    "rep": "ServerDelegate",
    "tokens": [
      "delegate",
      "screen",
      "server",
      "v2"
    ],
    "members": [
      "ScreenDelegate",
      "ServerDelegate",
      "ServerDelegateV2"
    ]
  },
  {
    "size": 3,
    "rep": "Shareable",
    "tokens": [
      "searchable",
      "share",
      "shareable",
      "tab"
    ],
    "members": [
      "Searchable",
      "ShareTab",
      "Shareable"
    ]
  },
  {
    "size": 3,
    "rep": "SearchEmptyStateCellViewModelOutputs",
    "tokens": [
      "cell",
      "empty",
      "inputs",
      "model",
      "outputs",
      "search",
      "state",
      "type",
      "view"
    ],
    "members": [
      "SearchEmptyStateCellViewModelInputs",
      "SearchEmptyStateCellViewModelOutputs",
      "SearchEmptyStateCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "SidebarViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "outline",
      "search",
      "sidebar",
      "view"
    ],
    "members": [
      "SearchViewControllerDelegate",
      "SidebarOutlineViewDelegate",
      "SidebarViewControllerDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "SelectCurrencyViewModelOutputs",
    "tokens": [
      "currency",
      "inputs",
      "model",
      "outputs",
      "select",
      "type",
      "view"
    ],
    "members": [
      "SelectCurrencyViewModelInputs",
      "SelectCurrencyViewModelOutputs",
      "SelectCurrencyViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "Serializable",
    "tokens": [
      "serializable",
      "serializer",
      "specializable"
    ],
    "members": [
      "Serializable",
      "Serializer",
      "Specializable"
    ]
  },
  {
    "size": 3,
    "rep": "SettingsFollowCellViewModelOutputs",
    "tokens": [
      "cell",
      "follow",
      "inputs",
      "model",
      "outputs",
      "settings",
      "type",
      "view"
    ],
    "members": [
      "SettingsFollowCellViewModelInputs",
      "SettingsFollowCellViewModelOutputs",
      "SettingsFollowCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ShortcutsEvents",
    "tokens": [
      "events",
      "persister",
      "shortcut",
      "shortcuts",
      "type"
    ],
    "members": [
      "ShortcutType",
      "ShortcutsEvents",
      "ShortcutsPersister"
    ]
  },
  {
    "size": 3,
    "rep": "SimilarProjectsUseCaseOutputs",
    "tokens": [
      "case",
      "inputs",
      "outputs",
      "projects",
      "similar",
      "type",
      "use"
    ],
    "members": [
      "SimilarProjectsUseCaseInputs",
      "SimilarProjectsUseCaseOutputs",
      "SimilarProjectsUseCaseType"
    ]
  },
  {
    "size": 3,
    "rep": "SolarCore",
    "tokens": [
      "core",
      "router",
      "service",
      "solana",
      "solar"
    ],
    "members": [
      "SolanaRouter",
      "SolarCore",
      "SolarService"
    ]
  },
  {
    "size": 3,
    "rep": "SortPagerViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "pager",
      "sort",
      "type",
      "view"
    ],
    "members": [
      "SortPagerViewModelInputs",
      "SortPagerViewModelOutputs",
      "SortPagerViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "SurveyResponseViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "response",
      "survey",
      "type",
      "view"
    ],
    "members": [
      "SurveyResponseViewModelInputs",
      "SurveyResponseViewModelOutputs",
      "SurveyResponseViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "TabsControlTheme",
    "tokens": [
      "control",
      "data",
      "delegate",
      "source",
      "tabs",
      "theme"
    ],
    "members": [
      "TabsControlDataSource",
      "TabsControlDelegate",
      "TabsControlTheme"
    ]
  },
  {
    "size": 3,
    "rep": "TextViewElementCellViewModelOutputs",
    "tokens": [
      "cell",
      "element",
      "inputs",
      "model",
      "outputs",
      "text",
      "type",
      "view"
    ],
    "members": [
      "TextViewElementCellViewModelInputs",
      "TextViewElementCellViewModelOutputs",
      "TextViewElementCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ThanksCategoryCellViewModelOutputs",
    "tokens": [
      "category",
      "cell",
      "inputs",
      "model",
      "outputs",
      "thanks",
      "type",
      "view"
    ],
    "members": [
      "ThanksCategoryCellViewModelInputs",
      "ThanksCategoryCellViewModelOutputs",
      "ThanksCategoryCellViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ThanksViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "thanks",
      "type",
      "view"
    ],
    "members": [
      "ThanksViewModelInputs",
      "ThanksViewModelOutputs",
      "ThanksViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ThemeStyle",
    "tokens": [
      "style",
      "theme",
      "themeable",
      "themed"
    ],
    "members": [
      "ThemeStyle",
      "Themeable",
      "ThemedStyle"
    ]
  },
  {
    "size": 3,
    "rep": "TypeDescriptor",
    "tokens": [
      "cursor",
      "descriptor",
      "toggle",
      "type",
      "typed"
    ],
    "members": [
      "ToggleDescriptor",
      "TypeDescriptor",
      "TypedCursor"
    ]
  },
  {
    "size": 3,
    "rep": "TweakableType",
    "tokens": [
      "cluster",
      "library",
      "tweak",
      "tweakable",
      "type"
    ],
    "members": [
      "TweakClusterType",
      "TweakLibraryType",
      "TweakableType"
    ]
  },
  {
    "size": 3,
    "rep": "TwoFactorViewModelOutputs",
    "tokens": [
      "factor",
      "inputs",
      "model",
      "outputs",
      "two",
      "type",
      "view"
    ],
    "members": [
      "TwoFactorViewModelInputs",
      "TwoFactorViewModelOutputs",
      "TwoFactorViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "UINavigationItemProtocol",
    "tokens": [
      "bar",
      "controller",
      "item",
      "protocol",
      "type",
      "uinavigation"
    ],
    "members": [
      "UINavigationBarProtocol",
      "UINavigationControllerType",
      "UINavigationItemProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "UpdateDraftViewModelOutputs",
    "tokens": [
      "draft",
      "inputs",
      "model",
      "outputs",
      "type",
      "update",
      "view"
    ],
    "members": [
      "UpdateDraftViewModelInputs",
      "UpdateDraftViewModelOutputs",
      "UpdateDraftViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "UpdateViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "type",
      "update",
      "view"
    ],
    "members": [
      "UpdateViewModelInputs",
      "UpdateViewModelOutputs",
      "UpdateViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "URLQueryEncoder",
    "tokens": [
      "container",
      "decoder",
      "encoder",
      "urlquery"
    ],
    "members": [
      "URLQueryContainer",
      "URLQueryDecoder",
      "URLQueryEncoder"
    ]
  },
  {
    "size": 3,
    "rep": "VideoUploaderDelegate",
    "tokens": [
      "creating",
      "delegate",
      "loader",
      "uploader",
      "video"
    ],
    "members": [
      "VideoLoaderDelegate",
      "VideoUploaderCreating",
      "VideoUploaderDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "VideoViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "type",
      "video",
      "view"
    ],
    "members": [
      "VideoViewModelInputs",
      "VideoViewModelOutputs",
      "VideoViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "ViewDataType",
    "tokens": [
      "data",
      "state",
      "type",
      "view"
    ],
    "members": [
      "ViewDataType",
      "ViewState",
      "ViewType"
    ]
  },
  {
    "size": 3,
    "rep": "ViewHierarchyActionableProtocol",
    "tokens": [
      "actionable",
      "controller",
      "hierarchy",
      "layer",
      "manager",
      "protocol",
      "view"
    ],
    "members": [
      "ViewHierarchyActionableProtocol",
      "ViewHierarchyControllerProtocol",
      "ViewHierarchyLayerManagerProtocol"
    ]
  },
  {
    "size": 3,
    "rep": "ViewPledgeUseCaseOutputs",
    "tokens": [
      "case",
      "inputs",
      "outputs",
      "pledge",
      "type",
      "use",
      "view"
    ],
    "members": [
      "ViewPledgeUseCaseInputs",
      "ViewPledgeUseCaseOutputs",
      "ViewPledgeUseCaseType"
    ]
  },
  {
    "size": 3,
    "rep": "WatchProjectViewModelOutputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "project",
      "type",
      "view",
      "watch"
    ],
    "members": [
      "WatchProjectViewModelInputs",
      "WatchProjectViewModelOutputs",
      "WatchProjectViewModelType"
    ]
  },
  {
    "size": 3,
    "rep": "WelcomeViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "root",
      "view",
      "welcome",
      "window"
    ],
    "members": [
      "WelcomeRootViewControllerDelegate",
      "WelcomeViewControllerDelegate",
      "WelcomeWindowControllerDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "WorkspaceDelegate",
    "tokens": [
      "bar",
      "delegate",
      "tool",
      "workspace"
    ],
    "members": [
      "WorkspaceBarDelegate",
      "WorkspaceDelegate",
      "WorkspaceToolDelegate"
    ]
  },
  {
    "size": 3,
    "rep": "Writable",
    "tokens": [
      "writable",
      "writeable",
      "writer"
    ],
    "members": [
      "Writable",
      "Writeable",
      "Writer"
    ]
  },
  {
    "size": 2,
    "rep": "ActivityIndicatorAnimatable",
    "tokens": [
      "activity",
      "animatable",
      "animating",
      "indicator"
    ],
    "members": [
      "ActivityIndicatorAnimatable",
      "ActivityIndicatorAnimating"
    ]
  },
  {
    "size": 2,
    "rep": "ADBProtocol",
    "tokens": [
      "adbprotocol",
      "apiprotocol"
    ],
    "members": [
      "ADBProtocol",
      "APIProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "AddModuleDelegate",
    "tokens": [
      "add",
      "delegate",
      "interface",
      "module"
    ],
    "members": [
      "AddModuleDelegate",
      "AddModuleInterface"
    ]
  },
  {
    "size": 2,
    "rep": "AEMAdvertiserRuleMatching",
    "tokens": [
      "aemadvertiser",
      "matching",
      "providing",
      "rule"
    ],
    "members": [
      "AEMAdvertiserRuleMatching",
      "AEMAdvertiserRuleProviding"
    ]
  },
  {
    "size": 2,
    "rep": "AnchorList",
    "tokens": [
      "anchor",
      "list",
      "view"
    ],
    "members": [
      "AnchorList",
      "AnchorView"
    ]
  },
  {
    "size": 2,
    "rep": "AnyMiddleware",
    "tokens": [
      "any",
      "async",
      "middleware"
    ],
    "members": [
      "AnyMiddleware",
      "AsyncMiddleware"
    ]
  },
  {
    "size": 2,
    "rep": "AnyStateSource",
    "tokens": [
      "any",
      "scope",
      "source",
      "state",
      "store"
    ],
    "members": [
      "AnyStateSource",
      "AnyStoreScope"
    ]
  },
  {
    "size": 2,
    "rep": "AnyValueProvider",
    "tokens": [
      "any",
      "provider",
      "value",
      "weak"
    ],
    "members": [
      "AnyValueProvider",
      "AnyWeakProvider"
    ]
  },
  {
    "size": 2,
    "rep": "ApiClientProtocol",
    "tokens": [
      "api",
      "client",
      "date",
      "protocol"
    ],
    "members": [
      "ApiClientProtocol",
      "ApiDateProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "ApplicationObserverType",
    "tokens": [
      "application",
      "observer",
      "provider",
      "state",
      "type"
    ],
    "members": [
      "ApplicationObserverType",
      "ApplicationStateProvider"
    ]
  },
  {
    "size": 2,
    "rep": "AssetCatalogContent",
    "tokens": [
      "asset",
      "assets",
      "catalog",
      "content",
      "entry"
    ],
    "members": [
      "AssetCatalogContent",
      "AssetsCatalogEntry"
    ]
  },
  {
    "size": 2,
    "rep": "AsyncAtomNode",
    "tokens": [
      "async",
      "atom",
      "node",
      "sync"
    ],
    "members": [
      "AsyncAtomNode",
      "SyncAtomNode"
    ]
  },
  {
    "size": 2,
    "rep": "AsyncRequestDecodable",
    "tokens": [
      "async",
      "decodable",
      "encodable",
      "request",
      "response"
    ],
    "members": [
      "AsyncRequestDecodable",
      "AsyncResponseEncodable"
    ]
  },
  {
    "size": 2,
    "rep": "AsyncSelectorNode",
    "tokens": [
      "async",
      "node",
      "selector",
      "sync"
    ],
    "members": [
      "AsyncSelectorNode",
      "SyncSelectorNode"
    ]
  },
  {
    "size": 2,
    "rep": "ATTextAnimatable",
    "tokens": [
      "animatable",
      "animate",
      "attext",
      "effect"
    ],
    "members": [
      "ATTextAnimatable",
      "ATTextAnimateEffect"
    ]
  },
  {
    "size": 2,
    "rep": "Attributedestring",
    "tokens": [
      "attributedestring",
      "attributes",
      "provider"
    ],
    "members": [
      "Attributedestring",
      "AttributesProvider"
    ]
  },
  {
    "size": 2,
    "rep": "AttributeProtocol",
    "tokens": [
      "attribute",
      "attributed",
      "compatible",
      "protocol"
    ],
    "members": [
      "AttributeProtocol",
      "AttributedCompatible"
    ]
  },
  {
    "size": 2,
    "rep": "AudioVideoViewElementCellViewModelInputs",
    "tokens": [
      "audio",
      "cell",
      "element",
      "inputs",
      "model",
      "type",
      "video",
      "view"
    ],
    "members": [
      "AudioVideoViewElementCellViewModelInputs",
      "AudioVideoViewElementCellViewModelType"
    ]
  },
  {
    "size": 2,
    "rep": "Authenticatable",
    "tokens": [
      "authenticatable",
      "authenticator"
    ],
    "members": [
      "Authenticatable",
      "Authenticator"
    ]
  },
  {
    "size": 2,
    "rep": "AuthenticationCredential",
    "tokens": [
      "authentication",
      "creating",
      "credential",
      "token"
    ],
    "members": [
      "AuthenticationCredential",
      "AuthenticationTokenCreating"
    ]
  },
  {
    "size": 2,
    "rep": "Autocompletable",
    "tokens": [
      "autocompletable",
      "autocomplete",
      "source"
    ],
    "members": [
      "Autocompletable",
      "AutocompleteSource"
    ]
  },
  {
    "size": 2,
    "rep": "BaseLoadable",
    "tokens": [
      "base",
      "loadable",
      "mappable"
    ],
    "members": [
      "BaseLoadable",
      "BaseMappable"
    ]
  },
  {
    "size": 2,
    "rep": "BinaryGraphable",
    "tokens": [
      "binary",
      "graphable",
      "linear"
    ],
    "members": [
      "BinaryGraphable",
      "LinearGraphable"
    ]
  },
  {
    "size": 2,
    "rep": "BKAvailabilityObservable",
    "tokens": [
      "bkavailability",
      "observable",
      "observer"
    ],
    "members": [
      "BKAvailabilityObservable",
      "BKAvailabilityObserver"
    ]
  },
  {
    "size": 2,
    "rep": "BKCBCentralManagerConnectionDelegate",
    "tokens": [
      "bkcbcentral",
      "connection",
      "delegate",
      "discovery",
      "manager"
    ],
    "members": [
      "BKCBCentralManagerConnectionDelegate",
      "BKCBCentralManagerDiscoveryDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "BKCBPeripheralDelegate",
    "tokens": [
      "bkcbperipheral",
      "bkperipheral",
      "delegate"
    ],
    "members": [
      "BKCBPeripheralDelegate",
      "BKPeripheralDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "BMPlayerControlViewDelegate",
    "tokens": [
      "bmplayer",
      "control",
      "delegate",
      "layer",
      "view"
    ],
    "members": [
      "BMPlayerControlViewDelegate",
      "BMPlayerLayerViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "BorderDesignable",
    "tokens": [
      "border",
      "corner",
      "designable"
    ],
    "members": [
      "BorderDesignable",
      "CornerDesignable"
    ]
  },
  {
    "size": 2,
    "rep": "BrowserDelegate",
    "tokens": [
      "browser",
      "delegate",
      "router"
    ],
    "members": [
      "BrowserDelegate",
      "RouterDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "CanBeTriggeredByImageViewTap",
    "tokens": [
      "be",
      "by",
      "can",
      "image",
      "overlay",
      "tap",
      "triggered",
      "view"
    ],
    "members": [
      "CanBeTriggeredByImageViewTap",
      "CanBeTriggeredByOverlayTap"
    ]
  },
  {
    "size": 2,
    "rep": "Cancelable",
    "tokens": [
      "cancelable",
      "cancellable"
    ],
    "members": [
      "Cancelable",
      "Cancellable"
    ]
  },
  {
    "size": 2,
    "rep": "CancellableError",
    "tokens": [
      "cancellable",
      "error",
      "task"
    ],
    "members": [
      "CancellableError",
      "CancellableTask"
    ]
  },
  {
    "size": 2,
    "rep": "CaseIterable",
    "tokens": [
      "case",
      "iterable",
      "key"
    ],
    "members": [
      "CaseIterable",
      "CaseIterableKey"
    ]
  },
  {
    "size": 2,
    "rep": "CDMarkdownElement",
    "tokens": [
      "cdmarkdown",
      "element",
      "style"
    ],
    "members": [
      "CDMarkdownElement",
      "CDMarkdownStyle"
    ]
  },
  {
    "size": 2,
    "rep": "CharacterStyling",
    "tokens": [
      "character",
      "characteristic",
      "styling"
    ],
    "members": [
      "CharacterStyling",
      "Characteristic"
    ]
  },
  {
    "size": 2,
    "rep": "ChatInputBarDelegate",
    "tokens": [
      "bar",
      "chat",
      "delegate",
      "input",
      "presenter"
    ],
    "members": [
      "ChatInputBarDelegate",
      "ChatInputBarPresenter"
    ]
  },
  {
    "size": 2,
    "rep": "ClientDelegate",
    "tokens": [
      "client",
      "delegate",
      "v2"
    ],
    "members": [
      "ClientDelegate",
      "ClientDelegateV2"
    ]
  },
  {
    "size": 2,
    "rep": "CodableBridge",
    "tokens": [
      "bridge",
      "codable",
      "file"
    ],
    "members": [
      "CodableBridge",
      "CodableFile"
    ]
  },
  {
    "size": 2,
    "rep": "CollectionUpdateProviderProtocol",
    "tokens": [
      "collection",
      "property",
      "protocol",
      "provider",
      "update",
      "view"
    ],
    "members": [
      "CollectionUpdateProviderProtocol",
      "CollectionViewPropertyProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "ColorPickerDelegate",
    "tokens": [
      "color",
      "delegate",
      "picker",
      "slider"
    ],
    "members": [
      "ColorPickerDelegate",
      "ColorSliderDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "CommentDialogDelegate",
    "tokens": [
      "comment",
      "context",
      "delegate",
      "dialog"
    ],
    "members": [
      "CommentDialogDelegate",
      "ContextDialogDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "ConditionedOneWayTransformer",
    "tokens": [
      "conditioned",
      "one",
      "transformer",
      "two",
      "way"
    ],
    "members": [
      "ConditionedOneWayTransformer",
      "ConditionedTwoWayTransformer"
    ]
  },
  {
    "size": 2,
    "rep": "ConditionNumberOperandConvertible",
    "tokens": [
      "condition",
      "convertible",
      "number",
      "operand",
      "text"
    ],
    "members": [
      "ConditionNumberOperandConvertible",
      "ConditionTextOperandConvertible"
    ]
  },
  {
    "size": 2,
    "rep": "Configurable",
    "tokens": [
      "configurable",
      "configuration"
    ],
    "members": [
      "Configurable",
      "Configuration"
    ]
  },
  {
    "size": 2,
    "rep": "ConfigurableCell",
    "tokens": [
      "cell",
      "configurable",
      "view"
    ],
    "members": [
      "ConfigurableCell",
      "ConfigurableView"
    ]
  },
  {
    "size": 2,
    "rep": "Constrainable",
    "tokens": [
      "constrainable",
      "constraint",
      "dsl"
    ],
    "members": [
      "Constrainable",
      "ConstraintDSL"
    ]
  },
  {
    "size": 2,
    "rep": "ContainerManagement",
    "tokens": [
      "container",
      "logger",
      "management",
      "manager"
    ],
    "members": [
      "ContainerManagement",
      "ContainerManagerLogger"
    ]
  },
  {
    "size": 2,
    "rep": "ContainerOptions",
    "tokens": [
      "container",
      "options",
      "tab"
    ],
    "members": [
      "ContainerOptions",
      "ContainerTabOptions"
    ]
  },
  {
    "size": 2,
    "rep": "ContainerTypeConfigurationProtocol",
    "tokens": [
      "configuration",
      "container",
      "protocol",
      "type",
      "view"
    ],
    "members": [
      "ContainerTypeConfigurationProtocol",
      "ContainerViewConfigurationProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "ContainerViewManagementForEnvironment",
    "tokens": [
      "container",
      "environment",
      "for",
      "management",
      "modifier",
      "view"
    ],
    "members": [
      "ContainerViewManagementForEnvironment",
      "ContainerViewManagementForViewModifier"
    ]
  },
  {
    "size": 2,
    "rep": "ContentBlockerParser",
    "tokens": [
      "blocker",
      "content",
      "parser",
      "tab"
    ],
    "members": [
      "ContentBlockerParser",
      "ContentBlockerTab"
    ]
  },
  {
    "size": 2,
    "rep": "Convertible",
    "tokens": [
      "convertible",
      "convertor"
    ],
    "members": [
      "Convertible",
      "Convertor"
    ]
  },
  {
    "size": 2,
    "rep": "CountriesDBRepository",
    "tokens": [
      "countries",
      "dbrepository",
      "repository",
      "web"
    ],
    "members": [
      "CountriesDBRepository",
      "CountriesWebRepository"
    ]
  },
  {
    "size": 2,
    "rep": "CountryPickerViewDataSource",
    "tokens": [
      "country",
      "data",
      "delegate",
      "picker",
      "source",
      "view"
    ],
    "members": [
      "CountryPickerViewDataSource",
      "CountryPickerViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "CPCCalendarUnitBackingType",
    "tokens": [
      "backing",
      "cpccalendar",
      "impl",
      "symbol",
      "type",
      "unit"
    ],
    "members": [
      "CPCCalendarUnitBackingType",
      "CPCCalendarUnitSymbolImpl"
    ]
  },
  {
    "size": 2,
    "rep": "CPCCalendarUnitBase",
    "tokens": [
      "base",
      "cpccalendar",
      "symbol",
      "unit"
    ],
    "members": [
      "CPCCalendarUnitBase",
      "CPCCalendarUnitSymbol"
    ]
  },
  {
    "size": 2,
    "rep": "CPCCalendarViewLayoutDelegate",
    "tokens": [
      "cpccalendar",
      "delegate",
      "layout",
      "selection",
      "view"
    ],
    "members": [
      "CPCCalendarViewLayoutDelegate",
      "CPCCalendarViewSelectionDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "CrashParser",
    "tokens": [
      "crash",
      "parser",
      "tracker"
    ],
    "members": [
      "CrashParser",
      "CrashTracker"
    ]
  },
  {
    "size": 2,
    "rep": "CreateImagesRequestProtocol",
    "tokens": [
      "create",
      "images",
      "protocol",
      "request",
      "speech"
    ],
    "members": [
      "CreateImagesRequestProtocol",
      "CreateSpeechRequestProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "CreateTranscriptionRequestProtocol",
    "tokens": [
      "create",
      "protocol",
      "request",
      "transcription",
      "translation"
    ],
    "members": [
      "CreateTranscriptionRequestProtocol",
      "CreateTranslationRequestProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "Cryptor",
    "tokens": [
      "cryptor",
      "cryptors"
    ],
    "members": [
      "Cryptor",
      "Cryptors"
    ]
  },
  {
    "size": 2,
    "rep": "CXWrapper",
    "tokens": [
      "cxwrapper",
      "cxwrapping"
    ],
    "members": [
      "CXWrapper",
      "CXWrapping"
    ]
  },
  {
    "size": 2,
    "rep": "DataTransferErrorLogger",
    "tokens": [
      "data",
      "error",
      "logger",
      "resolver",
      "transfer"
    ],
    "members": [
      "DataTransferErrorLogger",
      "DataTransferErrorResolver"
    ]
  },
  {
    "size": 2,
    "rep": "DataValueCodableStrategy",
    "tokens": [
      "codable",
      "data",
      "date",
      "strategy",
      "value"
    ],
    "members": [
      "DataValueCodableStrategy",
      "DateValueCodableStrategy"
    ]
  },
  {
    "size": 2,
    "rep": "DateProtocol",
    "tokens": [
      "date",
      "item",
      "protocol"
    ],
    "members": [
      "DateProtocol",
      "ItemProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "DateToStringTrasformable",
    "tokens": [
      "date",
      "string",
      "to",
      "transformable",
      "trasformable"
    ],
    "members": [
      "DateToStringTrasformable",
      "StringToDateTransformable"
    ]
  },
  {
    "size": 2,
    "rep": "Deletable",
    "tokens": [
      "clause",
      "deletable",
      "delete"
    ],
    "members": [
      "Deletable",
      "DeleteClause"
    ]
  },
  {
    "size": 2,
    "rep": "DevicePickerViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "device",
      "picker",
      "sidebar",
      "view"
    ],
    "members": [
      "DevicePickerViewControllerDelegate",
      "DeviceSidebarViewControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "DiagnosticsReportFilter",
    "tokens": [
      "diagnostics",
      "filter",
      "report",
      "reporting"
    ],
    "members": [
      "DiagnosticsReportFilter",
      "DiagnosticsReporting"
    ]
  },
  {
    "size": 2,
    "rep": "DiffableConvertible",
    "tokens": [
      "convertible",
      "diffable",
      "writable"
    ],
    "members": [
      "DiffableConvertible",
      "WritableConvertible"
    ]
  },
  {
    "size": 2,
    "rep": "DirectedGraphMapper",
    "tokens": [
      "directed",
      "graph",
      "mapper",
      "writer"
    ],
    "members": [
      "DirectedGraphMapper",
      "DirectedGraphWriter"
    ]
  },
  {
    "size": 2,
    "rep": "DiscoveryFiltersViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "discovery",
      "filters",
      "page",
      "view"
    ],
    "members": [
      "DiscoveryFiltersViewControllerDelegate",
      "DiscoveryPageViewControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "DispatchStore",
    "tokens": [
      "dispatch",
      "dispatcher",
      "store"
    ],
    "members": [
      "DispatchStore",
      "Dispatcher"
    ]
  },
  {
    "size": 2,
    "rep": "DistributedFuzzingChildNodeTransport",
    "tokens": [
      "child",
      "distributed",
      "fuzzing",
      "node",
      "parent",
      "transport"
    ],
    "members": [
      "DistributedFuzzingChildNodeTransport",
      "DistributedFuzzingParentNodeTransport"
    ]
  },
  {
    "size": 2,
    "rep": "Documentable",
    "tokens": [
      "documentable",
      "documented"
    ],
    "members": [
      "Documentable",
      "Documented"
    ]
  },
  {
    "size": 2,
    "rep": "DownloadProgressDelegate",
    "tokens": [
      "delegate",
      "download",
      "progress",
      "queue"
    ],
    "members": [
      "DownloadProgressDelegate",
      "DownloadQueueDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "DynamicNodeDecoding",
    "tokens": [
      "decoding",
      "dynamic",
      "encoding",
      "node"
    ],
    "members": [
      "DynamicNodeDecoding",
      "DynamicNodeEncoding"
    ]
  },
  {
    "size": 2,
    "rep": "Environment",
    "tokens": [
      "environment",
      "key"
    ],
    "members": [
      "Environment",
      "EnvironmentKey"
    ]
  },
  {
    "size": 2,
    "rep": "Execution",
    "tokens": [
      "execution",
      "expectation"
    ],
    "members": [
      "Execution",
      "Expectation"
    ]
  },
  {
    "size": 2,
    "rep": "Failable",
    "tokens": [
      "failable",
      "finalizable"
    ],
    "members": [
      "Failable",
      "Finalizable"
    ]
  },
  {
    "size": 2,
    "rep": "FetchChainableBuilderType",
    "tokens": [
      "builder",
      "chainable",
      "fetch",
      "query",
      "type"
    ],
    "members": [
      "FetchChainableBuilderType",
      "QueryChainableBuilderType"
    ]
  },
  {
    "size": 2,
    "rep": "FetchLocationsUseCaseInputs",
    "tokens": [
      "case",
      "fetch",
      "inputs",
      "locations",
      "type",
      "use"
    ],
    "members": [
      "FetchLocationsUseCaseInputs",
      "FetchLocationsUseCaseType"
    ]
  },
  {
    "size": 2,
    "rep": "FieldCoderType",
    "tokens": [
      "coder",
      "field",
      "storable",
      "type"
    ],
    "members": [
      "FieldCoderType",
      "FieldStorableType"
    ]
  },
  {
    "size": 2,
    "rep": "FieldRelationshipToManyOrderedType",
    "tokens": [
      "field",
      "many",
      "ordered",
      "relationship",
      "to",
      "type",
      "unordered"
    ],
    "members": [
      "FieldRelationshipToManyOrderedType",
      "FieldRelationshipToManyUnorderedType"
    ]
  },
  {
    "size": 2,
    "rep": "FileGeneratorManager",
    "tokens": [
      "file",
      "generator",
      "interface",
      "manager"
    ],
    "members": [
      "FileGeneratorManager",
      "FileManagerInterface"
    ]
  },
  {
    "size": 2,
    "rep": "FileHandleProtocol",
    "tokens": [
      "file",
      "handle",
      "manager",
      "protocol"
    ],
    "members": [
      "FileHandleProtocol",
      "FileManagerProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "FinalizingDecryptModeWorker",
    "tokens": [
      "decrypt",
      "encrypt",
      "finalizing",
      "mode",
      "worker"
    ],
    "members": [
      "FinalizingDecryptModeWorker",
      "FinalizingEncryptModeWorker"
    ]
  },
  {
    "size": 2,
    "rep": "FinderApplicationFile",
    "tokens": [
      "application",
      "file",
      "finder",
      "process"
    ],
    "members": [
      "FinderApplicationFile",
      "FinderApplicationProcess"
    ]
  },
  {
    "size": 2,
    "rep": "FindInPageBarDelegate",
    "tokens": [
      "bar",
      "delegate",
      "find",
      "helper",
      "in",
      "page"
    ],
    "members": [
      "FindInPageBarDelegate",
      "FindInPageHelperDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "FlatBuffersDecodable",
    "tokens": [
      "buffers",
      "decodable",
      "encodable",
      "flat"
    ],
    "members": [
      "FlatBuffersDecodable",
      "FlatBuffersEncodable"
    ]
  },
  {
    "size": 2,
    "rep": "FontConvertible",
    "tokens": [
      "convertible",
      "font",
      "jsonconvertible"
    ],
    "members": [
      "FontConvertible",
      "JSONConvertible"
    ]
  },
  {
    "size": 2,
    "rep": "FormViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "form",
      "provider",
      "view"
    ],
    "members": [
      "FormViewControllerDelegate",
      "FormViewControllerProvider"
    ]
  },
  {
    "size": 2,
    "rep": "FRadioPlayerDelegate",
    "tokens": [
      "delegate",
      "displayer",
      "fradio",
      "player",
      "tab"
    ],
    "members": [
      "FRadioPlayerDelegate",
      "TabDisplayerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "FunctionOverrider",
    "tokens": [
      "function",
      "overrider",
      "resolver"
    ],
    "members": [
      "FunctionOverrider",
      "FunctionResolver"
    ]
  },
  {
    "size": 2,
    "rep": "GalleryItemsDataSource",
    "tokens": [
      "data",
      "delegate",
      "gallery",
      "items",
      "source"
    ],
    "members": [
      "GalleryItemsDataSource",
      "GalleryItemsDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "GamingServiceControllerCreating",
    "tokens": [
      "controller",
      "creating",
      "gaming",
      "protocol",
      "service"
    ],
    "members": [
      "GamingServiceControllerCreating",
      "GamingServiceControllerProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "GetSource",
    "tokens": [
      "get",
      "resource",
      "source"
    ],
    "members": [
      "GetSource",
      "Resource"
    ]
  },
  {
    "size": 2,
    "rep": "Getters",
    "tokens": [
      "getters",
      "setters"
    ],
    "members": [
      "Getters",
      "Setters"
    ]
  },
  {
    "size": 2,
    "rep": "GleanPlumbMessageManagerProtocol",
    "tokens": [
      "glean",
      "manager",
      "message",
      "plumb",
      "protocol",
      "store"
    ],
    "members": [
      "GleanPlumbMessageManagerProtocol",
      "GleanPlumbMessageStoreProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "GTOEHour",
    "tokens": [
      "gtoehour",
      "ltoehour"
    ],
    "members": [
      "GTOEHour",
      "LTOEHour"
    ]
  },
  {
    "size": 2,
    "rep": "GTOENanosecond",
    "tokens": [
      "gtoenanosecond",
      "ltoenanosecond"
    ],
    "members": [
      "GTOENanosecond",
      "LTOENanosecond"
    ]
  },
  {
    "size": 2,
    "rep": "GTOESecond",
    "tokens": [
      "gtoesecond",
      "ltoesecond"
    ],
    "members": [
      "GTOESecond",
      "LTOESecond"
    ]
  },
  {
    "size": 2,
    "rep": "HasProjectAnalyticsProperties",
    "tokens": [
      "analytics",
      "creator",
      "has",
      "project",
      "properties"
    ],
    "members": [
      "HasProjectAnalyticsProperties",
      "HasProjectCreatorProperties"
    ]
  },
  {
    "size": 2,
    "rep": "HealthAlertTurnOffAll",
    "tokens": [
      "alert",
      "all",
      "health",
      "off",
      "on",
      "turn"
    ],
    "members": [
      "HealthAlertTurnOffAll",
      "HealthAlertTurnOnAll"
    ]
  },
  {
    "size": 2,
    "rep": "HelperProtocol",
    "tokens": [
      "helper",
      "protocol",
      "xpcprotocol"
    ],
    "members": [
      "HelperProtocol",
      "HelperXPCProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "HeroProgressRunnerDelegate",
    "tokens": [
      "delegate",
      "hero",
      "observer",
      "progress",
      "runner",
      "update"
    ],
    "members": [
      "HeroProgressRunnerDelegate",
      "HeroProgressUpdateObserver"
    ]
  },
  {
    "size": 2,
    "rep": "HexagonalViewDataSource",
    "tokens": [
      "data",
      "delegate",
      "hexagonal",
      "source",
      "view"
    ],
    "members": [
      "HexagonalViewDataSource",
      "HexagonalViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "HierarchyInspectorViewCodeDelegate",
    "tokens": [
      "code",
      "delegate",
      "hierarchy",
      "inspector",
      "model",
      "protocol",
      "view"
    ],
    "members": [
      "HierarchyInspectorViewCodeDelegate",
      "HierarchyInspectorViewModelProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "HTTP1OperationDelegate",
    "tokens": [
      "delegate",
      "http1operation",
      "httpconnection"
    ],
    "members": [
      "HTTP1OperationDelegate",
      "HTTPConnectionDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "HTTP1OperationTraceContext",
    "tokens": [
      "context",
      "http1operation",
      "http1request",
      "invocation",
      "trace"
    ],
    "members": [
      "HTTP1OperationTraceContext",
      "HTTP1RequestInvocationContext"
    ]
  },
  {
    "size": 2,
    "rep": "HTTPBodyDecoder",
    "tokens": [
      "decoder",
      "encoder",
      "httpbody"
    ],
    "members": [
      "HTTPBodyDecoder",
      "HTTPBodyEncoder"
    ]
  },
  {
    "size": 2,
    "rep": "HTTPServer",
    "tokens": [
      "httpserver",
      "httpservice"
    ],
    "members": [
      "HTTPServer",
      "HTTPService"
    ]
  },
  {
    "size": 2,
    "rep": "I2CInterface",
    "tokens": [
      "i2c",
      "interface",
      "spiinterface"
    ],
    "members": [
      "I2CInterface",
      "SPIInterface"
    ]
  },
  {
    "size": 2,
    "rep": "ICAllDayCornerView",
    "tokens": [
      "corner",
      "day",
      "header",
      "icall",
      "view"
    ],
    "members": [
      "ICAllDayCornerView",
      "ICAllDayHeaderView"
    ]
  },
  {
    "size": 2,
    "rep": "ICAllDayHeaderBackgroundView",
    "tokens": [
      "background",
      "day",
      "header",
      "icall",
      "icdate",
      "view"
    ],
    "members": [
      "ICAllDayHeaderBackgroundView",
      "ICDateHeaderBackgroundView"
    ]
  },
  {
    "size": 2,
    "rep": "ICComponent",
    "tokens": [
      "component",
      "iccomponent",
      "ui"
    ],
    "members": [
      "ICComponent",
      "UiComponent"
    ]
  },
  {
    "size": 2,
    "rep": "ICDateHeaderView",
    "tokens": [
      "header",
      "icdate",
      "ictime",
      "view"
    ],
    "members": [
      "ICDateHeaderView",
      "ICTimeHeaderView"
    ]
  },
  {
    "size": 2,
    "rep": "ICEventable",
    "tokens": [
      "iceventable",
      "injectable"
    ],
    "members": [
      "ICEventable",
      "Injectable"
    ]
  },
  {
    "size": 2,
    "rep": "IdentityEquatable",
    "tokens": [
      "equatable",
      "hashable",
      "identity"
    ],
    "members": [
      "IdentityEquatable",
      "IdentityHashable"
    ]
  },
  {
    "size": 2,
    "rep": "ImageDataProvider",
    "tokens": [
      "data",
      "image",
      "item",
      "provider"
    ],
    "members": [
      "ImageDataProvider",
      "ItemDataProvider"
    ]
  },
  {
    "size": 2,
    "rep": "ImageZoomControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "image",
      "state",
      "zoom"
    ],
    "members": [
      "ImageZoomControllerDelegate",
      "ImageZoomControllerState"
    ]
  },
  {
    "size": 2,
    "rep": "InitializableClass",
    "tokens": [
      "class",
      "initializable",
      "struct"
    ],
    "members": [
      "InitializableClass",
      "InitializableStruct"
    ]
  },
  {
    "size": 2,
    "rep": "InspectorViewControllerDelegate",
    "tokens": [
      "controller",
      "coordinator",
      "delegate",
      "inspector",
      "view"
    ],
    "members": [
      "InspectorViewControllerDelegate",
      "InspectorViewCoordinatorDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "InstanceStorage",
    "tokens": [
      "instance",
      "storage",
      "wrapper"
    ],
    "members": [
      "InstanceStorage",
      "InstanceWrapper"
    ]
  },
  {
    "size": 2,
    "rep": "InvocationReporting",
    "tokens": [
      "invocation",
      "reporting",
      "strategy"
    ],
    "members": [
      "InvocationReporting",
      "InvocationStrategy"
    ]
  },
  {
    "size": 2,
    "rep": "ItemControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "item",
      "swipe"
    ],
    "members": [
      "ItemControllerDelegate",
      "SwipeControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "JSFileRenderer",
    "tokens": [
      "file",
      "java",
      "jsfile",
      "renderer"
    ],
    "members": [
      "JSFileRenderer",
      "JavaFileRenderer"
    ]
  },
  {
    "size": 2,
    "rep": "JSONContainerConvertible",
    "tokens": [
      "convertible",
      "jsoncontainer",
      "jsonliteral"
    ],
    "members": [
      "JSONContainerConvertible",
      "JSONLiteralConvertible"
    ]
  },
  {
    "size": 2,
    "rep": "JSONDeserializable",
    "tokens": [
      "jsondeserializable",
      "jsonserializable"
    ],
    "members": [
      "JSONDeserializable",
      "JSONSerializable"
    ]
  },
  {
    "size": 2,
    "rep": "JXBannerDataSource",
    "tokens": [
      "data",
      "jxbanner",
      "source",
      "transformable"
    ],
    "members": [
      "JXBannerDataSource",
      "JXBannerTransformable"
    ]
  },
  {
    "size": 2,
    "rep": "KeyboardUpdatesHandlerDelegate",
    "tokens": [
      "delegate",
      "handler",
      "keyboard",
      "protocol",
      "updates"
    ],
    "members": [
      "KeyboardUpdatesHandlerDelegate",
      "KeyboardUpdatesHandlerProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "LaunchEnvironmentProtocol",
    "tokens": [
      "environment",
      "launch",
      "protocol",
      "value"
    ],
    "members": [
      "LaunchEnvironmentProtocol",
      "LaunchEnvironmentValue"
    ]
  },
  {
    "size": 2,
    "rep": "LaunchEnvironmentTableDataSourceDelegate",
    "tokens": [
      "data",
      "delegate",
      "environment",
      "launch",
      "protocol",
      "source",
      "table"
    ],
    "members": [
      "LaunchEnvironmentTableDataSourceDelegate",
      "LaunchEnvironmentTableDataSourceProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "ListInteractorInput",
    "tokens": [
      "input",
      "interactor",
      "list",
      "output"
    ],
    "members": [
      "ListInteractorInput",
      "ListInteractorOutput"
    ]
  },
  {
    "size": 2,
    "rep": "ListObjectObserver",
    "tokens": [
      "list",
      "object",
      "observer",
      "section"
    ],
    "members": [
      "ListObjectObserver",
      "ListSectionObserver"
    ]
  },
  {
    "size": 2,
    "rep": "LiveCameraCaptureSessionProtocol",
    "tokens": [
      "camera",
      "capture",
      "cell",
      "live",
      "presenter",
      "protocol",
      "session"
    ],
    "members": [
      "LiveCameraCaptureSessionProtocol",
      "LiveCameraCellPresenterProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "Location",
    "tokens": [
      "location",
      "locator"
    ],
    "members": [
      "Location",
      "Locator"
    ]
  },
  {
    "size": 2,
    "rep": "LocationServiceDelegate",
    "tokens": [
      "delegate",
      "location",
      "service",
      "view"
    ],
    "members": [
      "LocationServiceDelegate",
      "LocationViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "Loggable",
    "tokens": [
      "loggable",
      "logger"
    ],
    "members": [
      "Loggable",
      "Logger"
    ]
  },
  {
    "size": 2,
    "rep": "LoginProvider",
    "tokens": [
      "login",
      "provider",
      "providing"
    ],
    "members": [
      "LoginProvider",
      "LoginProviding"
    ]
  },
  {
    "size": 2,
    "rep": "MailProvider",
    "tokens": [
      "mail",
      "mask",
      "provider"
    ],
    "members": [
      "MailProvider",
      "MaskProvider"
    ]
  },
  {
    "size": 2,
    "rep": "MaterialShowcaseControllerDataSource",
    "tokens": [
      "controller",
      "data",
      "delegate",
      "material",
      "showcase",
      "source"
    ],
    "members": [
      "MaterialShowcaseControllerDataSource",
      "MaterialShowcaseControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "MessageCardDelegate",
    "tokens": [
      "card",
      "cell",
      "delegate",
      "message"
    ],
    "members": [
      "MessageCardDelegate",
      "MessageCellDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "MessageDataProtocol",
    "tokens": [
      "data",
      "message",
      "model",
      "protocol"
    ],
    "members": [
      "MessageDataProtocol",
      "MessageModelProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "MessageHandler",
    "tokens": [
      "handler",
      "message",
      "sender"
    ],
    "members": [
      "MessageHandler",
      "MessageSender"
    ]
  },
  {
    "size": 2,
    "rep": "MessagesSelectorDelegate",
    "tokens": [
      "delegate",
      "messages",
      "protocol",
      "selector"
    ],
    "members": [
      "MessagesSelectorDelegate",
      "MessagesSelectorProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "MetadataFetcherDelegate",
    "tokens": [
      "delegate",
      "fetcher",
      "helper",
      "metadata"
    ],
    "members": [
      "MetadataFetcherDelegate",
      "MetadataFetcherHelper"
    ]
  },
  {
    "size": 2,
    "rep": "MiddlewareContext",
    "tokens": [
      "context",
      "middleware",
      "type"
    ],
    "members": [
      "MiddlewareContext",
      "MiddlewareType"
    ]
  },
  {
    "size": 2,
    "rep": "MiddlewareRequestContext",
    "tokens": [
      "context",
      "middleware",
      "request",
      "response"
    ],
    "members": [
      "MiddlewareRequestContext",
      "MiddlewareResponseContext"
    ]
  },
  {
    "size": 2,
    "rep": "MIDIBeatObserver",
    "tokens": [
      "midibeat",
      "miditempo",
      "observer"
    ],
    "members": [
      "MIDIBeatObserver",
      "MIDITempoObserver"
    ]
  },
  {
    "size": 2,
    "rep": "MMPlayerConfig",
    "tokens": [
      "config",
      "mmplayer",
      "nav"
    ],
    "members": [
      "MMPlayerConfig",
      "MMPlayerNavConfig"
    ]
  },
  {
    "size": 2,
    "rep": "MovieDetailsViewModel",
    "tokens": [
      "details",
      "list",
      "model",
      "movie",
      "movies",
      "query",
      "view"
    ],
    "members": [
      "MovieDetailsViewModel",
      "MoviesQueryListViewModel"
    ]
  },
  {
    "size": 2,
    "rep": "MultipliableToCGFloat",
    "tokens": [
      "cgfloat",
      "multipliable",
      "self",
      "to"
    ],
    "members": [
      "MultipliableToCGFloat",
      "MultipliableToSelf"
    ]
  },
  {
    "size": 2,
    "rep": "Named",
    "tokens": [
      "name",
      "named"
    ],
    "members": [
      "Named",
      "name"
    ]
  },
  {
    "size": 2,
    "rep": "NetworkClient",
    "tokens": [
      "client",
      "layer",
      "network"
    ],
    "members": [
      "NetworkClient",
      "NetworkLayer"
    ]
  },
  {
    "size": 2,
    "rep": "NimbleInstantProtocol",
    "tokens": [
      "instant",
      "interval",
      "nimble",
      "protocol"
    ],
    "members": [
      "NimbleInstantProtocol",
      "NimbleIntervalProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "NIOInboundByteBufferingChannelHandler",
    "tokens": [
      "buffering",
      "byte",
      "channel",
      "handler",
      "nioinbound",
      "niooutbound"
    ],
    "members": [
      "NIOInboundByteBufferingChannelHandler",
      "NIOOutboundByteBufferingChannelHandler"
    ]
  },
  {
    "size": 2,
    "rep": "NIOTypedHTTPClientProtocolUpgrader",
    "tokens": [
      "httpclient",
      "httpserver",
      "niotyped",
      "protocol",
      "upgrader"
    ],
    "members": [
      "NIOTypedHTTPClientProtocolUpgrader",
      "NIOTypedHTTPServerProtocolUpgrader"
    ]
  },
  {
    "size": 2,
    "rep": "NodeInstant",
    "tokens": [
      "instant",
      "list",
      "node"
    ],
    "members": [
      "NodeInstant",
      "NodeList"
    ]
  },
  {
    "size": 2,
    "rep": "NodeParameterType",
    "tokens": [
      "map",
      "node",
      "parameter",
      "property",
      "type"
    ],
    "members": [
      "NodeParameterType",
      "NodePropertyMap"
    ]
  },
  {
    "size": 2,
    "rep": "Notifiable",
    "tokens": [
      "notifiable",
      "notifier"
    ],
    "members": [
      "Notifiable",
      "Notifier"
    ]
  },
  {
    "size": 2,
    "rep": "NotificationCenterProtocol",
    "tokens": [
      "center",
      "manager",
      "notification",
      "protocol"
    ],
    "members": [
      "NotificationCenterProtocol",
      "NotificationManagerProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "NSCoding",
    "tokens": [
      "nscoding",
      "nscopying"
    ],
    "members": [
      "NSCoding",
      "NSCopying"
    ]
  },
  {
    "size": 2,
    "rep": "NSScreenType",
    "tokens": [
      "nsscreen",
      "type",
      "uiscreen"
    ],
    "members": [
      "NSScreenType",
      "UIScreenType"
    ]
  },
  {
    "size": 2,
    "rep": "NumericalEquality",
    "tokens": [
      "equality",
      "inequality",
      "numerical"
    ],
    "members": [
      "NumericalEquality",
      "NumericalInequality"
    ]
  },
  {
    "size": 2,
    "rep": "NVActivityIndicatorAnimationDelegate",
    "tokens": [
      "animation",
      "delegate",
      "indicator",
      "nvactivity",
      "presenter",
      "state"
    ],
    "members": [
      "NVActivityIndicatorAnimationDelegate",
      "NVActivityIndicatorPresenterState"
    ]
  },
  {
    "size": 2,
    "rep": "OAuthAccessTokenParser",
    "tokens": [
      "access",
      "oauth",
      "parser",
      "store",
      "token"
    ],
    "members": [
      "OAuthAccessTokenParser",
      "OAuthAccessTokenStore"
    ]
  },
  {
    "size": 2,
    "rep": "OAuthSwiftRequestHandle",
    "tokens": [
      "handle",
      "oauth",
      "request",
      "swift",
      "type",
      "urlhandler"
    ],
    "members": [
      "OAuthSwiftRequestHandle",
      "OAuthSwiftURLHandlerType"
    ]
  },
  {
    "size": 2,
    "rep": "Observable",
    "tokens": [
      "observable",
      "observer"
    ],
    "members": [
      "Observable",
      "Observer"
    ]
  },
  {
    "size": 2,
    "rep": "OCKAnimationStyler",
    "tokens": [
      "ockanimation",
      "ockdimension",
      "styler"
    ],
    "members": [
      "OCKAnimationStyler",
      "OCKDimensionStyler"
    ]
  },
  {
    "size": 2,
    "rep": "OCKAnyOutcomeStore",
    "tokens": [
      "ockany",
      "ockoutcome",
      "outcome",
      "store"
    ],
    "members": [
      "OCKAnyOutcomeStore",
      "OCKOutcomeStore"
    ]
  },
  {
    "size": 2,
    "rep": "OCKChartViewDelegate",
    "tokens": [
      "delegate",
      "ockchart",
      "ocktask",
      "view"
    ],
    "members": [
      "OCKChartViewDelegate",
      "OCKTaskViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "OCKContactStoreDelegate",
    "tokens": [
      "delegate",
      "ockcontact",
      "store",
      "view"
    ],
    "members": [
      "OCKContactStoreDelegate",
      "OCKContactViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "OCKDailyPageViewControllerDataSource",
    "tokens": [
      "controller",
      "data",
      "delegate",
      "ockdaily",
      "page",
      "source",
      "view"
    ],
    "members": [
      "OCKDailyPageViewControllerDataSource",
      "OCKDailyPageViewControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "OCKFHIRRelease",
    "tokens": [
      "ockfhirrelease",
      "ockfhirresource"
    ],
    "members": [
      "OCKFHIRRelease",
      "OCKFHIRResource"
    ]
  },
  {
    "size": 2,
    "rep": "OCKStylable",
    "tokens": [
      "ockstylable",
      "ockstyler"
    ],
    "members": [
      "OCKStylable",
      "OCKStyler"
    ]
  },
  {
    "size": 2,
    "rep": "OnboardingCardDelegate",
    "tokens": [
      "card",
      "delegate",
      "onboarding",
      "service"
    ],
    "members": [
      "OnboardingCardDelegate",
      "OnboardingServiceDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "OnboardingTelemetryProtocol",
    "tokens": [
      "model",
      "onboarding",
      "protocol",
      "telemetry",
      "view"
    ],
    "members": [
      "OnboardingTelemetryProtocol",
      "OnboardingViewModelProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "OperationDelegate",
    "tokens": [
      "delegate",
      "identity",
      "operation"
    ],
    "members": [
      "OperationDelegate",
      "OperationIdentity"
    ]
  },
  {
    "size": 2,
    "rep": "OperationHTTP1InputProtocol",
    "tokens": [
      "http1input",
      "http1output",
      "operation",
      "protocol"
    ],
    "members": [
      "OperationHTTP1InputProtocol",
      "OperationHTTP1OutputProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "OptionalType",
    "tokens": [
      "optional",
      "type",
      "view"
    ],
    "members": [
      "OptionalType",
      "OptionalView"
    ]
  },
  {
    "size": 2,
    "rep": "OverlayModeManager",
    "tokens": [
      "manager",
      "mode",
      "overlay",
      "style"
    ],
    "members": [
      "OverlayModeManager",
      "OverlayStyleManager"
    ]
  },
  {
    "size": 2,
    "rep": "PageboyAutoScrollerDelegate",
    "tokens": [
      "auto",
      "delegate",
      "handler",
      "pageboy",
      "scroller"
    ],
    "members": [
      "PageboyAutoScrollerDelegate",
      "PageboyAutoScrollerHandler"
    ]
  },
  {
    "size": 2,
    "rep": "PageboyViewControllerDataSource",
    "tokens": [
      "controller",
      "data",
      "delegate",
      "pageboy",
      "source",
      "view"
    ],
    "members": [
      "PageboyViewControllerDataSource",
      "PageboyViewControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "PagedContainerViewModelInputs",
    "tokens": [
      "container",
      "inputs",
      "model",
      "outputs",
      "paged",
      "view"
    ],
    "members": [
      "PagedContainerViewModelInputs",
      "PagedContainerViewModelOutputs"
    ]
  },
  {
    "size": 2,
    "rep": "PageViewDelegate",
    "tokens": [
      "delegate",
      "page",
      "style",
      "view"
    ],
    "members": [
      "PageViewDelegate",
      "PageViewStyle"
    ]
  },
  {
    "size": 2,
    "rep": "PanModalPresentable",
    "tokens": [
      "modal",
      "pan",
      "presentable",
      "presenter"
    ],
    "members": [
      "PanModalPresentable",
      "PanModalPresenter"
    ]
  },
  {
    "size": 2,
    "rep": "ParameterEncoder",
    "tokens": [
      "encoder",
      "encoding",
      "parameter"
    ],
    "members": [
      "ParameterEncoder",
      "ParameterEncoding"
    ]
  },
  {
    "size": 2,
    "rep": "PaymentMethodSettingsViewModelInputs",
    "tokens": [
      "inputs",
      "method",
      "model",
      "outputs",
      "payment",
      "settings",
      "view"
    ],
    "members": [
      "PaymentMethodSettingsViewModelInputs",
      "PaymentMethodSettingsViewModelOutputs"
    ]
  },
  {
    "size": 2,
    "rep": "PaymentMethodsUseCaseType",
    "tokens": [
      "case",
      "methods",
      "model",
      "payment",
      "type",
      "use",
      "view"
    ],
    "members": [
      "PaymentMethodsUseCaseType",
      "PaymentMethodsViewModelType"
    ]
  },
  {
    "size": 2,
    "rep": "PhotonActionSheetDelegate",
    "tokens": [
      "action",
      "delegate",
      "photon",
      "protocol",
      "sheet"
    ],
    "members": [
      "PhotonActionSheetDelegate",
      "PhotonActionSheetProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "PhotosInputPermissionsRequesterDelegate",
    "tokens": [
      "delegate",
      "input",
      "permissions",
      "photos",
      "protocol",
      "requester"
    ],
    "members": [
      "PhotosInputPermissionsRequesterDelegate",
      "PhotosInputPermissionsRequesterProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "PhotosInputViewDelegate",
    "tokens": [
      "delegate",
      "input",
      "photos",
      "protocol",
      "view"
    ],
    "members": [
      "PhotosInputViewDelegate",
      "PhotosInputViewProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "PPOViewModelInputs",
    "tokens": [
      "inputs",
      "model",
      "outputs",
      "ppoview"
    ],
    "members": [
      "PPOViewModelInputs",
      "PPOViewModelOutputs"
    ]
  },
  {
    "size": 2,
    "rep": "Presentable",
    "tokens": [
      "presentable",
      "presenter"
    ],
    "members": [
      "Presentable",
      "Presenter"
    ]
  },
  {
    "size": 2,
    "rep": "Process_p",
    "tokens": [
      "p",
      "process",
      "processor"
    ],
    "members": [
      "Process_p",
      "Processor"
    ]
  },
  {
    "size": 2,
    "rep": "ProfileCreating",
    "tokens": [
      "creating",
      "profile",
      "providing"
    ],
    "members": [
      "ProfileCreating",
      "ProfileProviding"
    ]
  },
  {
    "size": 2,
    "rep": "PropertyListReadable",
    "tokens": [
      "list",
      "property",
      "readable",
      "writable"
    ],
    "members": [
      "PropertyListReadable",
      "PropertyListWritable"
    ]
  },
  {
    "size": 2,
    "rep": "PushNotificationDialogType",
    "tokens": [
      "dialog",
      "handler",
      "notification",
      "notifications",
      "push",
      "type"
    ],
    "members": [
      "PushNotificationDialogType",
      "PushNotificationsHandler"
    ]
  },
  {
    "size": 2,
    "rep": "QueryClause",
    "tokens": [
      "clause",
      "query",
      "queryable"
    ],
    "members": [
      "QueryClause",
      "Queryable"
    ]
  },
  {
    "size": 2,
    "rep": "QueryObservable",
    "tokens": [
      "observable",
      "query",
      "queryable",
      "source"
    ],
    "members": [
      "QueryObservable",
      "QueryableSource"
    ]
  },
  {
    "size": 2,
    "rep": "ReaderModeBarViewDelegate",
    "tokens": [
      "bar",
      "delegate",
      "mode",
      "navigation",
      "reader",
      "view"
    ],
    "members": [
      "ReaderModeBarViewDelegate",
      "ReaderModeNavigationDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "ReaderModeDelegate",
    "tokens": [
      "delegate",
      "mode",
      "reader",
      "setter",
      "style"
    ],
    "members": [
      "ReaderModeDelegate",
      "ReaderModeStyleSetter"
    ]
  },
  {
    "size": 2,
    "rep": "RelativeCompoundEquality",
    "tokens": [
      "compound",
      "equality",
      "inequality",
      "relative"
    ],
    "members": [
      "RelativeCompoundEquality",
      "RelativeCompoundInequality"
    ]
  },
  {
    "size": 2,
    "rep": "RelativeEquality",
    "tokens": [
      "equality",
      "inequality",
      "relative"
    ],
    "members": [
      "RelativeEquality",
      "RelativeInequality"
    ]
  },
  {
    "size": 2,
    "rep": "RemoteTabsEmptyViewDelegate",
    "tokens": [
      "delegate",
      "empty",
      "protocol",
      "remote",
      "tabs",
      "view"
    ],
    "members": [
      "RemoteTabsEmptyViewDelegate",
      "RemoteTabsEmptyViewProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "Responder",
    "tokens": [
      "responder",
      "response"
    ],
    "members": [
      "Responder",
      "Response"
    ]
  },
  {
    "size": 2,
    "rep": "ResponseDecoder",
    "tokens": [
      "decoder",
      "encodable",
      "response"
    ],
    "members": [
      "ResponseDecoder",
      "ResponseEncodable"
    ]
  },
  {
    "size": 2,
    "rep": "ReusableCell",
    "tokens": [
      "cell",
      "reusable",
      "view"
    ],
    "members": [
      "ReusableCell",
      "ReusableView"
    ]
  },
  {
    "size": 2,
    "rep": "ReuseIdentifiable",
    "tokens": [
      "identifiable",
      "identifier",
      "reuse",
      "type"
    ],
    "members": [
      "ReuseIdentifiable",
      "ReuseIdentifierType"
    ]
  },
  {
    "size": 2,
    "rep": "ReuseIdentifierContainer",
    "tokens": [
      "container",
      "identifier",
      "provider",
      "reuse"
    ],
    "members": [
      "ReuseIdentifierContainer",
      "ReuseIdentifierProvider"
    ]
  },
  {
    "size": 2,
    "rep": "RewardsUseCaseOutputs",
    "tokens": [
      "case",
      "outputs",
      "rewards",
      "type",
      "use"
    ],
    "members": [
      "RewardsUseCaseOutputs",
      "RewardsUseCaseType"
    ]
  },
  {
    "size": 2,
    "rep": "RootWindowDesignable",
    "tokens": [
      "designable",
      "root",
      "rotation",
      "window"
    ],
    "members": [
      "RootWindowDesignable",
      "RotationDesignable"
    ]
  },
  {
    "size": 2,
    "rep": "Route",
    "tokens": [
      "route",
      "router"
    ],
    "members": [
      "Route",
      "Router"
    ]
  },
  {
    "size": 2,
    "rep": "RxAlamofireRequest",
    "tokens": [
      "alamofire",
      "request",
      "response",
      "rx"
    ],
    "members": [
      "RxAlamofireRequest",
      "RxAlamofireResponse"
    ]
  },
  {
    "size": 2,
    "rep": "ScaleTransformView",
    "tokens": [
      "scale",
      "stack",
      "transform",
      "view"
    ],
    "members": [
      "ScaleTransformView",
      "StackTransformView"
    ]
  },
  {
    "size": 2,
    "rep": "ScreenState",
    "tokens": [
      "screen",
      "screenshotable",
      "state"
    ],
    "members": [
      "ScreenState",
      "Screenshotable"
    ]
  },
  {
    "size": 2,
    "rep": "ScrollStackContainableController",
    "tokens": [
      "containable",
      "controller",
      "delegate",
      "scroll",
      "stack"
    ],
    "members": [
      "ScrollStackContainableController",
      "ScrollStackControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "ScrollStackRowAnimatable",
    "tokens": [
      "animatable",
      "highlightable",
      "row",
      "scroll",
      "stack"
    ],
    "members": [
      "ScrollStackRowAnimatable",
      "ScrollStackRowHighlightable"
    ]
  },
  {
    "size": 2,
    "rep": "SearchEnginePreferencesMigrator",
    "tokens": [
      "engine",
      "engines",
      "manager",
      "migrator",
      "preferences",
      "provider",
      "search"
    ],
    "members": [
      "SearchEnginePreferencesMigrator",
      "SearchEnginesManagerProvider"
    ]
  },
  {
    "size": 2,
    "rep": "SecureStorable",
    "tokens": [
      "secure",
      "storable",
      "storage"
    ],
    "members": [
      "SecureStorable",
      "SecureStorage"
    ]
  },
  {
    "size": 2,
    "rep": "SelectableChannel",
    "tokens": [
      "channel",
      "collection",
      "selectable"
    ],
    "members": [
      "SelectableChannel",
      "SelectableCollection"
    ]
  },
  {
    "size": 2,
    "rep": "SelectClause",
    "tokens": [
      "clause",
      "select",
      "selectable"
    ],
    "members": [
      "SelectClause",
      "Selectable"
    ]
  },
  {
    "size": 2,
    "rep": "ServerTrustEvaluating",
    "tokens": [
      "evaluating",
      "evaluator",
      "server",
      "trust"
    ],
    "members": [
      "ServerTrustEvaluating",
      "ServerTrustEvaluator"
    ]
  },
  {
    "size": 2,
    "rep": "SessionAdapter",
    "tokens": [
      "adapter",
      "handler",
      "session"
    ],
    "members": [
      "SessionAdapter",
      "SessionHandler"
    ]
  },
  {
    "size": 2,
    "rep": "SessionAuthenticatable",
    "tokens": [
      "authenticatable",
      "authenticator",
      "session"
    ],
    "members": [
      "SessionAuthenticatable",
      "SessionAuthenticator"
    ]
  },
  {
    "size": 2,
    "rep": "SettingsCellTypeProtocol",
    "tokens": [
      "cell",
      "controller",
      "protocol",
      "settings",
      "style",
      "type"
    ],
    "members": [
      "SettingsCellTypeProtocol",
      "SettingsStyleController"
    ]
  },
  {
    "size": 2,
    "rep": "ShareUtilityProtocol",
    "tokens": [
      "protocol",
      "share",
      "sharing",
      "strategy",
      "utility"
    ],
    "members": [
      "ShareUtilityProtocol",
      "SharingStrategyProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "SharingButton",
    "tokens": [
      "button",
      "content",
      "sharing"
    ],
    "members": [
      "SharingButton",
      "SharingContent"
    ]
  },
  {
    "size": 2,
    "rep": "ShellProtocol",
    "tokens": [
      "protocol",
      "shell",
      "style"
    ],
    "members": [
      "ShellProtocol",
      "StyleProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "SJSegmentedViewControllerDelegate",
    "tokens": [
      "controller",
      "delegate",
      "sjsegmented",
      "source",
      "view"
    ],
    "members": [
      "SJSegmentedViewControllerDelegate",
      "SJSegmentedViewControllerViewSource"
    ]
  },
  {
    "size": 2,
    "rep": "SkeletonCollectionViewDataSource",
    "tokens": [
      "collection",
      "data",
      "delegate",
      "skeleton",
      "source",
      "view"
    ],
    "members": [
      "SkeletonCollectionViewDataSource",
      "SkeletonCollectionViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SkeletonTableViewDataSource",
    "tokens": [
      "data",
      "delegate",
      "skeleton",
      "source",
      "table",
      "view"
    ],
    "members": [
      "SkeletonTableViewDataSource",
      "SkeletonTableViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SmartInsightProviding",
    "tokens": [
      "insight",
      "insights",
      "providing",
      "smart"
    ],
    "members": [
      "SmartInsightProviding",
      "SmartInsightsProviding"
    ]
  },
  {
    "size": 2,
    "rep": "SourceCodeTheme",
    "tokens": [
      "code",
      "source",
      "theme",
      "token"
    ],
    "members": [
      "SourceCodeTheme",
      "SourceCodeToken"
    ]
  },
  {
    "size": 2,
    "rep": "StateGetter",
    "tokens": [
      "getter",
      "setter",
      "state"
    ],
    "members": [
      "StateGetter",
      "StateSetter"
    ]
  },
  {
    "size": 2,
    "rep": "StateSource",
    "tokens": [
      "checker",
      "source",
      "state",
      "status"
    ],
    "members": [
      "StateSource",
      "StatusChecker"
    ]
  },
  {
    "size": 2,
    "rep": "StateValue",
    "tokens": [
      "state",
      "stateful",
      "value",
      "view"
    ],
    "members": [
      "StateValue",
      "StatefulView"
    ]
  },
  {
    "size": 2,
    "rep": "Step",
    "tokens": [
      "step",
      "stepper"
    ],
    "members": [
      "Step",
      "Stepper"
    ]
  },
  {
    "size": 2,
    "rep": "StoreState",
    "tokens": [
      "state",
      "store",
      "type"
    ],
    "members": [
      "StoreState",
      "StoreType"
    ]
  },
  {
    "size": 2,
    "rep": "StoryboardInstantiable",
    "tokens": [
      "instantiable",
      "instantiatable",
      "storyboard"
    ],
    "members": [
      "StoryboardInstantiable",
      "StoryboardInstantiatable"
    ]
  },
  {
    "size": 2,
    "rep": "StoryboardReference",
    "tokens": [
      "based",
      "reference",
      "scene",
      "storyboard"
    ],
    "members": [
      "StoryboardReference",
      "StoryboardSceneBased"
    ]
  },
  {
    "size": 2,
    "rep": "StringConvertible",
    "tokens": [
      "convertible",
      "generator",
      "string"
    ],
    "members": [
      "StringConvertible",
      "StringGenerator"
    ]
  },
  {
    "size": 2,
    "rep": "SummableToCGFloat",
    "tokens": [
      "cgfloat",
      "self",
      "summable",
      "to"
    ],
    "members": [
      "SummableToCGFloat",
      "SummableToSelf"
    ]
  },
  {
    "size": 2,
    "rep": "SupportedSIMD",
    "tokens": [
      "scalar",
      "simd",
      "supported"
    ],
    "members": [
      "SupportedSIMD",
      "SupportedScalar"
    ]
  },
  {
    "size": 2,
    "rep": "SwiftNotifyDelegate",
    "tokens": [
      "delegate",
      "gif",
      "notify",
      "swift",
      "swifty"
    ],
    "members": [
      "SwiftNotifyDelegate",
      "SwiftyGifDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SwiftyBeaverBuilder",
    "tokens": [
      "beaver",
      "builder",
      "swifty",
      "wrapper"
    ],
    "members": [
      "SwiftyBeaverBuilder",
      "SwiftyBeaverWrapper"
    ]
  },
  {
    "size": 2,
    "rep": "SwipeAnimationTypeProtocol",
    "tokens": [
      "animation",
      "protocol",
      "swipe",
      "transitioning",
      "type"
    ],
    "members": [
      "SwipeAnimationTypeProtocol",
      "SwipeTransitioningProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "SwitchContextDialogMaking",
    "tokens": [
      "context",
      "dialog",
      "making",
      "protocol",
      "switch"
    ],
    "members": [
      "SwitchContextDialogMaking",
      "SwitchContextDialogProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "SyncAutofillProvider",
    "tokens": [
      "autofill",
      "login",
      "provider",
      "sync"
    ],
    "members": [
      "SyncAutofillProvider",
      "SyncLoginProvider"
    ]
  },
  {
    "size": 2,
    "rep": "SystemNotificationsCenter",
    "tokens": [
      "center",
      "notifications",
      "settings",
      "system"
    ],
    "members": [
      "SystemNotificationsCenter",
      "SystemNotificationsSettings"
    ]
  },
  {
    "size": 2,
    "rep": "SystemScreenDelegate",
    "tokens": [
      "delegate",
      "screen",
      "system",
      "theme"
    ],
    "members": [
      "SystemScreenDelegate",
      "SystemThemeDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SZAVPlayerAssetLoaderDelegate",
    "tokens": [
      "asset",
      "data",
      "delegate",
      "loader",
      "szavplayer"
    ],
    "members": [
      "SZAVPlayerAssetLoaderDelegate",
      "SZAVPlayerDataLoaderDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SZAVPlayerDataLoaderOperationDelegate",
    "tokens": [
      "data",
      "delegate",
      "loader",
      "operation",
      "request",
      "szavplayer"
    ],
    "members": [
      "SZAVPlayerDataLoaderOperationDelegate",
      "SZAVPlayerRequestOperationDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "SZAVPlayerDelegate",
    "tokens": [
      "delegate",
      "request",
      "szavplayer"
    ],
    "members": [
      "SZAVPlayerDelegate",
      "SZAVPlayerRequest"
    ]
  },
  {
    "size": 2,
    "rep": "TableHeaderFooterConfigType",
    "tokens": [
      "config",
      "footer",
      "header",
      "state",
      "table",
      "type"
    ],
    "members": [
      "TableHeaderFooterConfigType",
      "TableHeaderFooterStateType"
    ]
  },
  {
    "size": 2,
    "rep": "TableItemConfigType",
    "tokens": [
      "config",
      "item",
      "section",
      "table",
      "type"
    ],
    "members": [
      "TableItemConfigType",
      "TableSectionType"
    ]
  },
  {
    "size": 2,
    "rep": "TableViewCellDesignable",
    "tokens": [
      "cell",
      "designable",
      "model",
      "table",
      "view"
    ],
    "members": [
      "TableViewCellDesignable",
      "TableViewCellViewModel"
    ]
  },
  {
    "size": 2,
    "rep": "TableViewDraggerDataSource",
    "tokens": [
      "data",
      "delegate",
      "dragger",
      "source",
      "table",
      "view"
    ],
    "members": [
      "TableViewDraggerDataSource",
      "TableViewDraggerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "TableViewFixedRowAnimationProviding",
    "tokens": [
      "animation",
      "fixed",
      "providing",
      "row",
      "section",
      "table",
      "view"
    ],
    "members": [
      "TableViewFixedRowAnimationProviding",
      "TableViewSectionAnimationProviding"
    ]
  },
  {
    "size": 2,
    "rep": "TableViewRowAnimationProviding",
    "tokens": [
      "animation",
      "providing",
      "row",
      "section",
      "single",
      "table",
      "view"
    ],
    "members": [
      "TableViewRowAnimationProviding",
      "TableViewSingleSectionProviding"
    ]
  },
  {
    "size": 2,
    "rep": "TagListViewDelegate",
    "tokens": [
      "delegate",
      "list",
      "tag",
      "tooltip",
      "view"
    ],
    "members": [
      "TagListViewDelegate",
      "TooltipViewDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "TerminalApp",
    "tokens": [
      "app",
      "tab",
      "terminal"
    ],
    "members": [
      "TerminalApp",
      "TerminalTab"
    ]
  },
  {
    "size": 2,
    "rep": "TextItem",
    "tokens": [
      "item",
      "style",
      "text"
    ],
    "members": [
      "TextItem",
      "TextStyle"
    ]
  },
  {
    "size": 2,
    "rep": "ThreadLock",
    "tokens": [
      "lock",
      "ops",
      "thread"
    ],
    "members": [
      "ThreadLock",
      "ThreadOps"
    ]
  },
  {
    "size": 2,
    "rep": "TKRadarChartDataSource",
    "tokens": [
      "chart",
      "data",
      "delegate",
      "source",
      "tkradar"
    ],
    "members": [
      "TKRadarChartDataSource",
      "TKRadarChartDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "TMBarDelegate",
    "tokens": [
      "delegate",
      "tmbar",
      "tron"
    ],
    "members": [
      "TMBarDelegate",
      "TronDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "ToggleControlDelegate",
    "tokens": [
      "control",
      "delegate",
      "model",
      "toggle"
    ],
    "members": [
      "ToggleControlDelegate",
      "ToggleModelDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "TopLevelDecoder",
    "tokens": [
      "decoder",
      "encoder",
      "level",
      "top"
    ],
    "members": [
      "TopLevelDecoder",
      "TopLevelEncoder"
    ]
  },
  {
    "size": 2,
    "rep": "TopSitesManagerDelegate",
    "tokens": [
      "delegate",
      "interface",
      "manager",
      "sites",
      "top"
    ],
    "members": [
      "TopSitesManagerDelegate",
      "TopSitesManagerInterface"
    ]
  },
  {
    "size": 2,
    "rep": "TopSitesProvider",
    "tokens": [
      "provider",
      "sites",
      "top",
      "widget"
    ],
    "members": [
      "TopSitesProvider",
      "TopSitesWidget"
    ]
  },
  {
    "size": 2,
    "rep": "TransitionAnimatorDelegate",
    "tokens": [
      "animator",
      "delegate",
      "operation",
      "transition"
    ],
    "members": [
      "TransitionAnimatorDelegate",
      "TransitionOperationDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "TweakCollectionViewControllerDelegate",
    "tokens": [
      "collection",
      "color",
      "controller",
      "delegate",
      "edit",
      "tweak",
      "view"
    ],
    "members": [
      "TweakCollectionViewControllerDelegate",
      "TweakColorEditViewControllerDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "UniqueIdentificable",
    "tokens": [
      "identifiable",
      "identificable",
      "unique",
      "uniquely"
    ],
    "members": [
      "UniqueIdentificable",
      "UniquelyIdentifiable"
    ]
  },
  {
    "size": 2,
    "rep": "Updatable",
    "tokens": [
      "updatable",
      "updateable"
    ],
    "members": [
      "Updatable",
      "Updateable"
    ]
  },
  {
    "size": 2,
    "rep": "UserInterfaceElementProviding",
    "tokens": [
      "element",
      "interface",
      "providing",
      "string",
      "user"
    ],
    "members": [
      "UserInterfaceElementProviding",
      "UserInterfaceStringProviding"
    ]
  },
  {
    "size": 2,
    "rep": "Value",
    "tokens": [
      "box",
      "value"
    ],
    "members": [
      "Value",
      "ValueBox"
    ]
  },
  {
    "size": 2,
    "rep": "ViewAction",
    "tokens": [
      "action",
      "animator",
      "view"
    ],
    "members": [
      "ViewAction",
      "ViewAnimator"
    ]
  },
  {
    "size": 2,
    "rep": "ViewHierarchyCoordinatorFactoryProtocol",
    "tokens": [
      "constructor",
      "coordinator",
      "factory",
      "hierarchy",
      "layer",
      "protocol",
      "view"
    ],
    "members": [
      "ViewHierarchyCoordinatorFactoryProtocol",
      "ViewHierarchyLayerConstructorProtocol"
    ]
  },
  {
    "size": 2,
    "rep": "ViewHierarchyElementReference",
    "tokens": [
      "element",
      "hierarchy",
      "reference",
      "representable",
      "view"
    ],
    "members": [
      "ViewHierarchyElementReference",
      "ViewHierarchyRepresentable"
    ]
  },
  {
    "size": 2,
    "rep": "ViewModelBased",
    "tokens": [
      "based",
      "binding",
      "model",
      "view"
    ],
    "members": [
      "ViewModelBased",
      "ViewModelBinding"
    ]
  },
  {
    "size": 2,
    "rep": "ViewModelContext",
    "tokens": [
      "context",
      "factory",
      "model",
      "view"
    ],
    "members": [
      "ViewModelContext",
      "ViewModelFactory"
    ]
  },
  {
    "size": 2,
    "rep": "WallpaperService",
    "tokens": [
      "error",
      "service",
      "wallpaper",
      "wallpapper"
    ],
    "members": [
      "WallpaperService",
      "WallpapperError"
    ]
  },
  {
    "size": 2,
    "rep": "WebSocketClient",
    "tokens": [
      "client",
      "delegate",
      "socket",
      "web"
    ],
    "members": [
      "WebSocketClient",
      "WebSocketDelegate"
    ]
  },
  {
    "size": 2,
    "rep": "WKWebViewProtocol",
    "tokens": [
      "protocol",
      "provider",
      "view",
      "wkweb"
    ],
    "members": [
      "WKWebViewProtocol",
      "WKWebViewProvider"
    ]
  },
  {
    "size": 2,
    "rep": "XMLElementAndAttributeProtocol",
    "tokens": [
      "and",
      "attribute",
      "protocol",
      "xmlelement",
      "xmloptional"
    ],
    "members": [
      "XMLElementAndAttributeProtocol",
      "XMLOptionalAttributeProtocol"
    ]
  }
]