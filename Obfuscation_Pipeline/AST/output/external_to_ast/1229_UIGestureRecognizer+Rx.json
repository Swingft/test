[
  {
    "A_name" : "GestureTarget",
    "B_kind" : "class",
    "C_accessLevel" : "final",
    "D_attributes" : [
      "final"
    ],
    "E_adoptedClassProtocols" : [
      "RxTarget"
    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 15, Column: 1",
    "G_members" : [
      {
        "A_name" : "selector",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 18, Column: 5",
        "H_initialValue" : "#selector(ControlTarget.eventHandler(_:))"
      },
      {
        "A_name" : "gestureRecognizer",
        "B_kind" : "variable",
        "C_accessLevel" : "weak",
        "D_attributes" : [
          "weak"
        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 20, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "callback",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 21, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "init",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 23, Column: 5",
        "G_members" : [
          {
            "A_name" : "method",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UIGestureRecognizer+Rx.swift - Line: 31, Column: 9",
            "H_initialValue" : "self.method(for: selector)"
          }
        ],
        "I_parameterType" : [
          "Recognizer",
          "@escaping Callback"
        ],
        "I_parameters" : [
          "_",
          "callback"
        ]
      },
      {
        "A_name" : "eventHandler",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [
          "objc"
        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 37, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UIGestureRecognizer"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "dispose",
        "B_kind" : "function",
        "C_accessLevel" : "override",
        "D_attributes" : [
          "override"
        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 43, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "selector",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 18, Column: 5",
    "H_initialValue" : "#selector(ControlTarget.eventHandler(_:))"
  },
  {
    "A_name" : "gestureRecognizer",
    "B_kind" : "variable",
    "C_accessLevel" : "weak",
    "D_attributes" : [
      "weak"
    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 20, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "callback",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 21, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 23, Column: 5",
    "G_members" : [
      {
        "A_name" : "method",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 31, Column: 9",
        "H_initialValue" : "self.method(for: selector)"
      }
    ],
    "I_parameterType" : [
      "Recognizer",
      "@escaping Callback"
    ],
    "I_parameters" : [
      "_",
      "callback"
    ]
  },
  {
    "A_name" : "method",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 31, Column: 9",
    "H_initialValue" : "self.method(for: selector)"
  },
  {
    "A_name" : "eventHandler",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "objc"
    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 37, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UIGestureRecognizer"
    ],
    "I_parameters" : [
      "_"
    ]
  },
  {
    "A_name" : "dispose",
    "B_kind" : "function",
    "C_accessLevel" : "override",
    "D_attributes" : [
      "override"
    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 43, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 51, Column: 1",
    "G_members" : [
      {
        "A_name" : "event",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UIGestureRecognizer+Rx.swift - Line: 54, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "event",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 54, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 55, Column: 9",
    "H_initialValue" : "Observable.create { [weak control = self.base] observer in\n            MainScheduler.ensureRunningOnMainThread()\n\n            guard let control = control else {\n                observer.on(.completed)\n                return Disposables.create()\n            }\n            \n            let observer = GestureTarget(control) { control in\n                observer.on(.next(control))\n            }\n            \n            return observer\n        }.take(until: deallocated)"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UIGestureRecognizer+Rx.swift - Line: 63, Column: 13",
    "H_initialValue" : "GestureTarget(control) { control in\n                observer.on(.next(control))\n            }"
  }
]