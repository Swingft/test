[
  {
    "A_name" : "AnomaliesTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Anomalies.swift - Line: 20, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "AnomaliesTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Anomalies.swift - Line: 23, Column: 1",
    "G_members" : [
      {
        "A_name" : "test936",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 24, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test1323",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 70, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test1344",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 102, Column: 5",
        "G_members" : [
          {
            "A_name" : "disposeBag",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Anomalies.swift - Line: 103, Column: 9",
            "H_initialValue" : "DisposeBag()"
          },
          {
            "A_name" : "foo",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Anomalies.swift - Line: 104, Column: 9",
            "H_initialValue" : "Observable<Int>.create({ observer in\n                observer.on(.next(1))\n                Thread.sleep(forTimeInterval: 0.1)\n                observer.on(.completed)\n                return Disposables.create()\n            })\n            .flatMap { int -> Observable<[Int]> in\n                return Observable.create { observer -> Disposable in\n                    DispatchQueue.global().async {\n                        observer.onNext([int])\n                    }\n                    self.sleep(0.1)\n                    return Disposables.create()\n                }\n            }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testSeparationBetweenOnAndSubscriptionLocks",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 125, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "test936",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 24, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "performSharingOperatorsTest",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 25, Column: 9",
    "G_members" : [
      {
        "A_name" : "queue",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 26, Column: 13",
        "H_initialValue" : "DispatchQueue(\n                label: \"Test\",\n                attributes: .concurrent \/\/ commenting this to use a serial queue remove the issue\n            )"
      }
    ],
    "I_parameterType" : [
      "@escaping (Observable<Int>) -> Observable<Int>"
    ],
    "I_parameters" : [
      "share"
    ]
  },
  {
    "A_name" : "queue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 26, Column: 13",
    "H_initialValue" : "DispatchQueue(\n                label: \"Test\",\n                attributes: .concurrent \/\/ commenting this to use a serial queue remove the issue\n            )"
  },
  {
    "A_name" : "expectation",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 32, Column: 17",
    "H_initialValue" : "self.expectation(description: \"wait until sequence completes\")"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 35, Column: 21",
    "H_initialValue" : "ConcurrentDispatchQueueScheduler(queue: queue, leeway: .milliseconds(5))"
  },
  {
    "A_name" : "makeSequence",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 37, Column: 21",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String",
      "RxTimeInterval"
    ],
    "I_parameters" : [
      "label",
      "period"
    ],
    "J_returnType" : "-> Observable<Int>"
  },
  {
    "A_name" : "test1323",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 70, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "performSharingOperatorsTest",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 71, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Observable<Int>) -> Observable<Int>"
    ],
    "I_parameters" : [
      "share"
    ]
  },
  {
    "A_name" : "test1344",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 102, Column: 5",
    "G_members" : [
      {
        "A_name" : "disposeBag",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 103, Column: 9",
        "H_initialValue" : "DisposeBag()"
      },
      {
        "A_name" : "foo",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 104, Column: 9",
        "H_initialValue" : "Observable<Int>.create({ observer in\n                observer.on(.next(1))\n                Thread.sleep(forTimeInterval: 0.1)\n                observer.on(.completed)\n                return Disposables.create()\n            })\n            .flatMap { int -> Observable<[Int]> in\n                return Observable.create { observer -> Disposable in\n                    DispatchQueue.global().async {\n                        observer.onNext([int])\n                    }\n                    self.sleep(0.1)\n                    return Disposables.create()\n                }\n            }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "disposeBag",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 103, Column: 9",
    "H_initialValue" : "DisposeBag()"
  },
  {
    "A_name" : "foo",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 104, Column: 9",
    "H_initialValue" : "Observable<Int>.create({ observer in\n                observer.on(.next(1))\n                Thread.sleep(forTimeInterval: 0.1)\n                observer.on(.completed)\n                return Disposables.create()\n            })\n            .flatMap { int -> Observable<[Int]> in\n                return Observable.create { observer -> Disposable in\n                    DispatchQueue.global().async {\n                        observer.onNext([int])\n                    }\n                    self.sleep(0.1)\n                    return Disposables.create()\n                }\n            }"
  },
  {
    "A_name" : "testSeparationBetweenOnAndSubscriptionLocks",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 125, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "performSharingOperatorsTest",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 126, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Observable<Int>) -> Observable<Int>"
    ],
    "I_parameters" : [
      "share"
    ]
  },
  {
    "A_name" : "expectation",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 128, Column: 17",
    "H_initialValue" : "self.expectation(description: \"wait until sequence completes\")"
  },
  {
    "A_name" : "queue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 130, Column: 17",
    "H_initialValue" : "DispatchQueue(\n                            label: \"off main thread\",\n                            attributes: .concurrent\n                        )"
  },
  {
    "A_name" : "makeSequence",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 136, Column: 21",
    "G_members" : [
      {
        "A_name" : "schedulerQueue",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 137, Column: 25",
        "H_initialValue" : "DispatchQueue(\n                            label: \"Test\",\n                            attributes: .concurrent\n                        )"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Anomalies.swift - Line: 142, Column: 25",
        "H_initialValue" : "ConcurrentDispatchQueueScheduler(queue: schedulerQueue, leeway: .milliseconds(0))"
      }
    ],
    "I_parameterType" : [
      "String",
      "RxTimeInterval"
    ],
    "I_parameters" : [
      "label",
      "period"
    ],
    "J_returnType" : "-> Observable<Int>"
  },
  {
    "A_name" : "schedulerQueue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 137, Column: 25",
    "H_initialValue" : "DispatchQueue(\n                            label: \"Test\",\n                            attributes: .concurrent\n                        )"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Anomalies.swift - Line: 142, Column: 25",
    "H_initialValue" : "ConcurrentDispatchQueueScheduler(queue: schedulerQueue, leeway: .milliseconds(0))"
  }
]