[
  {
    "A_name" : "TokenQueueTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "XCTestCase"
    ],
    "F_location" : "TokenQueueTest.swift - Line: 12, Column: 1",
    "G_members" : [
      {
        "A_name" : "testLinuxTestSuiteIncludesAllTests",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 14, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testChompBalanced",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 23, Column: 5",
        "G_members" : [
          {
            "A_name" : "tq",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 24, Column: 9",
            "H_initialValue" : "TokenQueue(\":contains(one (two) three) four\")"
          },
          {
            "A_name" : "pre",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 25, Column: 9",
            "H_initialValue" : "tq.consumeTo(\"(\")"
          },
          {
            "A_name" : "guts",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 26, Column: 9",
            "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
          },
          {
            "A_name" : "remainder",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 27, Column: 9",
            "H_initialValue" : "tq.remainder()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testChompEscapedBalanced",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 34, Column: 5",
        "G_members" : [
          {
            "A_name" : "tq",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 35, Column: 9",
            "H_initialValue" : "TokenQueue(\":contains(one (two) \\\\( \\\\) \\\\) three) four\")"
          },
          {
            "A_name" : "pre",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 36, Column: 9",
            "H_initialValue" : "tq.consumeTo(\"(\")"
          },
          {
            "A_name" : "guts",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 37, Column: 9",
            "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
          },
          {
            "A_name" : "remainder",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 38, Column: 9",
            "H_initialValue" : "tq.remainder()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testChompBalancedMatchesAsMuchAsPossible",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 46, Column: 5",
        "G_members" : [
          {
            "A_name" : "tq",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 47, Column: 9",
            "H_initialValue" : "TokenQueue(\"unbalanced(something(or another\")"
          },
          {
            "A_name" : "match",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 49, Column: 9",
            "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testUnescape",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 53, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testChompToIgnoreCase",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 57, Column: 5",
        "G_members" : [
          {
            "A_name" : "t",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 58, Column: 9",
            "H_initialValue" : "\"<textarea>one < two <\/TEXTarea>\""
          },
          {
            "A_name" : "tq",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 59, Column: 9",
            "H_initialValue" : "TokenQueue(t)"
          },
          {
            "A_name" : "data",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 60, Column: 9",
            "H_initialValue" : "tq.chompToIgnoreCase(\"<\/textarea\")"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAddFirst",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 68, Column: 5",
        "G_members" : [
          {
            "A_name" : "tq",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TokenQueueTest.swift - Line: 69, Column: 9",
            "H_initialValue" : "TokenQueue(\"One Two\")"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "allTests",
        "B_kind" : "variable",
        "C_accessLevel" : "static",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "TokenQueueTest.swift - Line: 75, Column: 2",
        "H_initialValue" : "{\n\t\treturn [\n            (\"testLinuxTestSuiteIncludesAllTests\", testLinuxTestSuiteIncludesAllTests),\n            (\"testChompBalanced\", testChompBalanced),\n\t\t\t(\"testChompEscapedBalanced\", testChompEscapedBalanced),\n\t\t\t(\"testChompBalancedMatchesAsMuchAsPossible\", testChompBalancedMatchesAsMuchAsPossible),\n\t\t\t(\"testUnescape\", testUnescape),\n\t\t\t(\"testChompToIgnoreCase\", testChompToIgnoreCase),\n\t\t\t(\"testAddFirst\", testAddFirst)\n\t\t\t]\n\t}()"
      }
    ]
  },
  {
    "A_name" : "testLinuxTestSuiteIncludesAllTests",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 14, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "thisClass",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 16, Column: 13",
    "H_initialValue" : "type(of: self)"
  },
  {
    "A_name" : "linuxCount",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 17, Column: 13",
    "H_initialValue" : "thisClass.allTests.count"
  },
  {
    "A_name" : "darwinCount",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 18, Column: 13",
    "H_initialValue" : "Int(thisClass.defaultTestSuite.testCaseCount)"
  },
  {
    "A_name" : "testChompBalanced",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 23, Column: 5",
    "G_members" : [
      {
        "A_name" : "tq",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 24, Column: 9",
        "H_initialValue" : "TokenQueue(\":contains(one (two) three) four\")"
      },
      {
        "A_name" : "pre",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 25, Column: 9",
        "H_initialValue" : "tq.consumeTo(\"(\")"
      },
      {
        "A_name" : "guts",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 26, Column: 9",
        "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
      },
      {
        "A_name" : "remainder",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 27, Column: 9",
        "H_initialValue" : "tq.remainder()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "tq",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 24, Column: 9",
    "H_initialValue" : "TokenQueue(\":contains(one (two) three) four\")"
  },
  {
    "A_name" : "pre",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 25, Column: 9",
    "H_initialValue" : "tq.consumeTo(\"(\")"
  },
  {
    "A_name" : "guts",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 26, Column: 9",
    "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
  },
  {
    "A_name" : "remainder",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 27, Column: 9",
    "H_initialValue" : "tq.remainder()"
  },
  {
    "A_name" : "testChompEscapedBalanced",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 34, Column: 5",
    "G_members" : [
      {
        "A_name" : "tq",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 35, Column: 9",
        "H_initialValue" : "TokenQueue(\":contains(one (two) \\\\( \\\\) \\\\) three) four\")"
      },
      {
        "A_name" : "pre",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 36, Column: 9",
        "H_initialValue" : "tq.consumeTo(\"(\")"
      },
      {
        "A_name" : "guts",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 37, Column: 9",
        "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
      },
      {
        "A_name" : "remainder",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 38, Column: 9",
        "H_initialValue" : "tq.remainder()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "tq",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 35, Column: 9",
    "H_initialValue" : "TokenQueue(\":contains(one (two) \\\\( \\\\) \\\\) three) four\")"
  },
  {
    "A_name" : "pre",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 36, Column: 9",
    "H_initialValue" : "tq.consumeTo(\"(\")"
  },
  {
    "A_name" : "guts",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 37, Column: 9",
    "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
  },
  {
    "A_name" : "remainder",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 38, Column: 9",
    "H_initialValue" : "tq.remainder()"
  },
  {
    "A_name" : "testChompBalancedMatchesAsMuchAsPossible",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 46, Column: 5",
    "G_members" : [
      {
        "A_name" : "tq",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 47, Column: 9",
        "H_initialValue" : "TokenQueue(\"unbalanced(something(or another\")"
      },
      {
        "A_name" : "match",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 49, Column: 9",
        "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "tq",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 47, Column: 9",
    "H_initialValue" : "TokenQueue(\"unbalanced(something(or another\")"
  },
  {
    "A_name" : "match",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 49, Column: 9",
    "H_initialValue" : "tq.chompBalanced(\"(\", \")\")"
  },
  {
    "A_name" : "testUnescape",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 53, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testChompToIgnoreCase",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 57, Column: 5",
    "G_members" : [
      {
        "A_name" : "t",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 58, Column: 9",
        "H_initialValue" : "\"<textarea>one < two <\/TEXTarea>\""
      },
      {
        "A_name" : "tq",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 59, Column: 9",
        "H_initialValue" : "TokenQueue(t)"
      },
      {
        "A_name" : "data",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 60, Column: 9",
        "H_initialValue" : "tq.chompToIgnoreCase(\"<\/textarea\")"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "t",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 58, Column: 9",
    "H_initialValue" : "\"<textarea>one < two <\/TEXTarea>\""
  },
  {
    "A_name" : "tq",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 59, Column: 9",
    "H_initialValue" : "TokenQueue(t)"
  },
  {
    "A_name" : "data",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 60, Column: 9",
    "H_initialValue" : "tq.chompToIgnoreCase(\"<\/textarea\")"
  },
  {
    "A_name" : "testAddFirst",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 68, Column: 5",
    "G_members" : [
      {
        "A_name" : "tq",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TokenQueueTest.swift - Line: 69, Column: 9",
        "H_initialValue" : "TokenQueue(\"One Two\")"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "tq",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TokenQueueTest.swift - Line: 69, Column: 9",
    "H_initialValue" : "TokenQueue(\"One Two\")"
  },
  {
    "A_name" : "allTests",
    "B_kind" : "variable",
    "C_accessLevel" : "static",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "TokenQueueTest.swift - Line: 75, Column: 2",
    "H_initialValue" : "{\n\t\treturn [\n            (\"testLinuxTestSuiteIncludesAllTests\", testLinuxTestSuiteIncludesAllTests),\n            (\"testChompBalanced\", testChompBalanced),\n\t\t\t(\"testChompEscapedBalanced\", testChompEscapedBalanced),\n\t\t\t(\"testChompBalancedMatchesAsMuchAsPossible\", testChompBalancedMatchesAsMuchAsPossible),\n\t\t\t(\"testUnescape\", testUnescape),\n\t\t\t(\"testChompToIgnoreCase\", testChompToIgnoreCase),\n\t\t\t(\"testAddFirst\", testAddFirst)\n\t\t\t]\n\t}()"
  }
]