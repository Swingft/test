[
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 12, Column: 1",
    "G_members" : [
      {
        "A_name" : "map",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 20, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 21, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .map(selector)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> Result"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
      }
    ]
  },
  {
    "A_name" : "map",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 20, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 21, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .map(selector)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> Result"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 21, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .map(selector)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 29, Column: 1",
    "G_members" : [
      {
        "A_name" : "compactMap",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 38, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 39, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .compactMap(selector)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> Result?"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
      }
    ]
  },
  {
    "A_name" : "compactMap",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 38, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 39, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .compactMap(selector)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> Result?"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 39, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .compactMap(selector)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 47, Column: 1",
    "G_members" : [
      {
        "A_name" : "filter",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 54, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 55, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .filter(predicate)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> Bool"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "filter",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 54, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 55, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .filter(predicate)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> Bool"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 55, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .filter(predicate)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 63, Column: 1",
    "G_members" : [
      {
        "A_name" : "switchLatest",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 74, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 75, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .map { $0.asSharedSequence() }\n            .switchLatest()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
      }
    ]
  },
  {
    "A_name" : "switchLatest",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 74, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 75, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .map { $0.asSharedSequence() }\n            .switchLatest()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 75, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .map { $0.asSharedSequence() }\n            .switchLatest()"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 84, Column: 1",
    "G_members" : [
      {
        "A_name" : "flatMapLatest",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 95, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 97, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .flatMapLatest(selector)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> SharedSequence<Sharing, Result>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<Sharing, Result>"
      }
    ]
  },
  {
    "A_name" : "flatMapLatest",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 95, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 97, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .flatMapLatest(selector)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> SharedSequence<Sharing, Result>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<Sharing, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 97, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .flatMapLatest(selector)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 105, Column: 1",
    "G_members" : [
      {
        "A_name" : "flatMapFirst",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 114, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 116, Column: 9",
            "H_initialValue" : "self\n            .asObservable()\n            .flatMapFirst(selector)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> SharedSequence<Sharing, Result>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<Sharing, Result>"
      }
    ]
  },
  {
    "A_name" : "flatMapFirst",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 114, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 116, Column: 9",
        "H_initialValue" : "self\n            .asObservable()\n            .flatMapFirst(selector)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> SharedSequence<Sharing, Result>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<Sharing, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 116, Column: 9",
    "H_initialValue" : "self\n            .asObservable()\n            .flatMapFirst(selector)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 124, Column: 1",
    "G_members" : [
      {
        "A_name" : "`do`",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 137, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 139, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .do(onNext: onNext, afterNext: afterNext, onCompleted: onCompleted, afterCompleted: afterCompleted, onSubscribe: onSubscribe, onSubscribed: onSubscribed, onDispose: onDispose)"
          }
        ],
        "I_parameterType" : [
          "((Element) -> Void)?",
          "((Element) -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?"
        ],
        "I_parameters" : [
          "onNext",
          "afterNext",
          "onCompleted",
          "afterCompleted",
          "onSubscribe",
          "onSubscribed",
          "onDispose"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "`do`",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 137, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 139, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .do(onNext: onNext, afterNext: afterNext, onCompleted: onCompleted, afterCompleted: afterCompleted, onSubscribe: onSubscribe, onSubscribed: onSubscribed, onDispose: onDispose)"
      }
    ],
    "I_parameterType" : [
      "((Element) -> Void)?",
      "((Element) -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?"
    ],
    "I_parameters" : [
      "onNext",
      "afterNext",
      "onCompleted",
      "afterCompleted",
      "onSubscribe",
      "onSubscribed",
      "onDispose"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 139, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .do(onNext: onNext, afterNext: afterNext, onCompleted: onCompleted, afterCompleted: afterCompleted, onSubscribe: onSubscribe, onSubscribed: onSubscribed, onDispose: onDispose)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 147, Column: 1",
    "G_members" : [
      {
        "A_name" : "debug",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 155, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 156, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .debug(identifier, trimOutput: trimOutput, file: file, line: line, function: function)"
          }
        ],
        "I_parameterType" : [
          "String?",
          "Bool",
          "String",
          "UInt",
          "String"
        ],
        "I_parameters" : [
          "_",
          "trimOutput",
          "file",
          "line",
          "function"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "debug",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 155, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 156, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .debug(identifier, trimOutput: trimOutput, file: file, line: line, function: function)"
      }
    ],
    "I_parameterType" : [
      "String?",
      "Bool",
      "String",
      "UInt",
      "String"
    ],
    "I_parameters" : [
      "_",
      "trimOutput",
      "file",
      "line",
      "function"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 156, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .debug(identifier, trimOutput: trimOutput, file: file, line: line, function: function)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 163, Column: 1",
    "G_members" : [
      {
        "A_name" : "distinctUntilChanged",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 170, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 172, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: { ($0 == $1) })"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "distinctUntilChanged",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 170, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 172, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: { ($0 == $1) })"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 172, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: { ($0 == $1) })"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 179, Column: 1",
    "G_members" : [
      {
        "A_name" : "distinctUntilChanged",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 187, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 188, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: { $0 == $1 })"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> Key"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "distinctUntilChanged",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 199, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 200, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: comparer)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element, Element) -> Bool"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "distinctUntilChanged",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 212, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 213, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: comparer)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> K",
          "@escaping (K, K) -> Bool"
        ],
        "I_parameters" : [
          "_",
          "comparer"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "distinctUntilChanged",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 187, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 188, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: { $0 == $1 })"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> Key"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 188, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: { $0 == $1 })"
  },
  {
    "A_name" : "distinctUntilChanged",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 199, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 200, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: comparer)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element, Element) -> Bool"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 200, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged({ $0 }, comparer: comparer)"
  },
  {
    "A_name" : "distinctUntilChanged",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 212, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 213, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: comparer)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> K",
      "@escaping (K, K) -> Bool"
    ],
    "I_parameters" : [
      "_",
      "comparer"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 213, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .distinctUntilChanged(keySelector, comparer: comparer)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 221, Column: 1",
    "G_members" : [
      {
        "A_name" : "flatMap",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 229, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 230, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .flatMap(selector)"
          }
        ],
        "I_parameterType" : [
          "@escaping (Element) -> SharedSequence<Sharing, Result>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<Sharing, Result>"
      }
    ]
  },
  {
    "A_name" : "flatMap",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 229, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 230, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .flatMap(selector)"
      }
    ],
    "I_parameterType" : [
      "@escaping (Element) -> SharedSequence<Sharing, Result>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<Sharing, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 230, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .flatMap(selector)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 238, Column: 1",
    "G_members" : [
      {
        "A_name" : "merge",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 247, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 249, Column: 9",
            "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Collection"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "merge",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 261, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 262, Column: 9",
            "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "[SharedSequence<SharingStrategy, Element>]"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "merge",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 274, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 275, Column: 9",
            "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "SharedSequence<SharingStrategy, Element>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "merge",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 247, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 249, Column: 9",
        "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Collection"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 249, Column: 9",
    "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
  },
  {
    "A_name" : "merge",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 261, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 262, Column: 9",
        "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "[SharedSequence<SharingStrategy, Element>]"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 262, Column: 9",
    "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
  },
  {
    "A_name" : "merge",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 274, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 275, Column: 9",
        "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "SharedSequence<SharingStrategy, Element>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 275, Column: 9",
    "H_initialValue" : "Observable.merge(sources.map { $0.asObservable() })"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 282, Column: 1",
    "G_members" : [
      {
        "A_name" : "merge",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 288, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 289, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
      },
      {
        "A_name" : "merge",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 301, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 303, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge(maxConcurrent: maxConcurrent)"
          }
        ],
        "I_parameterType" : [
          "Int"
        ],
        "I_parameters" : [
          "maxConcurrent"
        ],
        "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
      }
    ]
  },
  {
    "A_name" : "merge",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 288, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 289, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 289, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge()"
  },
  {
    "A_name" : "merge",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 301, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 303, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge(maxConcurrent: maxConcurrent)"
      }
    ],
    "I_parameterType" : [
      "Int"
    ],
    "I_parameters" : [
      "maxConcurrent"
    ],
    "J_returnType" : "-> SharedSequence<Element.SharingStrategy, Element.Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 303, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .map { $0.asSharedSequence() }\n            .merge(maxConcurrent: maxConcurrent)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 311, Column: 1",
    "G_members" : [
      {
        "A_name" : "throttle",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 324, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 326, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .throttle(dueTime, latest: latest, scheduler: SharingStrategy.scheduler)"
          }
        ],
        "I_parameterType" : [
          "RxTimeInterval",
          "Bool"
        ],
        "I_parameters" : [
          "_",
          "latest"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "debounce",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 338, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 340, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .debounce(dueTime, scheduler: SharingStrategy.scheduler)"
          }
        ],
        "I_parameterType" : [
          "RxTimeInterval"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "throttle",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 324, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 326, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .throttle(dueTime, latest: latest, scheduler: SharingStrategy.scheduler)"
      }
    ],
    "I_parameterType" : [
      "RxTimeInterval",
      "Bool"
    ],
    "I_parameters" : [
      "_",
      "latest"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 326, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .throttle(dueTime, latest: latest, scheduler: SharingStrategy.scheduler)"
  },
  {
    "A_name" : "debounce",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 338, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 340, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .debounce(dueTime, scheduler: SharingStrategy.scheduler)"
      }
    ],
    "I_parameterType" : [
      "RxTimeInterval"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 340, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .debounce(dueTime, scheduler: SharingStrategy.scheduler)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 348, Column: 1",
    "G_members" : [
      {
        "A_name" : "scan",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 358, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 360, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .scan(seed, accumulator: accumulator)"
          }
        ],
        "I_parameterType" : [
          "A",
          "@escaping (A, Element) -> A"
        ],
        "I_parameters" : [
          "_",
          "accumulator"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, A>"
      }
    ]
  },
  {
    "A_name" : "scan",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 358, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 360, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .scan(seed, accumulator: accumulator)"
      }
    ],
    "I_parameterType" : [
      "A",
      "@escaping (A, Element) -> A"
    ],
    "I_parameters" : [
      "_",
      "accumulator"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, A>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 360, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .scan(seed, accumulator: accumulator)"
  },
  {
    "A_name" : "SharedSequence",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 368, Column: 1",
    "G_members" : [
      {
        "A_name" : "concat",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 374, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 376, Column: 13",
            "H_initialValue" : "Observable.concat(sequence.lazy.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Sequence"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      },
      {
        "A_name" : "concat",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 385, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 387, Column: 9",
            "H_initialValue" : "Observable.concat(collection.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Collection"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "concat",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 374, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 376, Column: 13",
        "H_initialValue" : "Observable.concat(sequence.lazy.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Sequence"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 376, Column: 13",
    "H_initialValue" : "Observable.concat(sequence.lazy.map { $0.asObservable() })"
  },
  {
    "A_name" : "concat",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 385, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 387, Column: 9",
        "H_initialValue" : "Observable.concat(collection.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Collection"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 387, Column: 9",
    "H_initialValue" : "Observable.concat(collection.map { $0.asObservable() })"
  },
  {
    "A_name" : "SharedSequence",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 394, Column: 1",
    "G_members" : [
      {
        "A_name" : "zip",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 401, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 403, Column: 9",
            "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() }, resultSelector: resultSelector)"
          }
        ],
        "I_parameterType" : [
          "Collection",
          "@escaping ([Element]) throws -> Result"
        ],
        "I_parameters" : [
          "_",
          "resultSelector"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
      },
      {
        "A_name" : "zip",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 412, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 414, Column: 13",
            "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Collection"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, [Element]>"
      }
    ]
  },
  {
    "A_name" : "zip",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 401, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 403, Column: 9",
        "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() }, resultSelector: resultSelector)"
      }
    ],
    "I_parameterType" : [
      "Collection",
      "@escaping ([Element]) throws -> Result"
    ],
    "I_parameters" : [
      "_",
      "resultSelector"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 403, Column: 9",
    "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() }, resultSelector: resultSelector)"
  },
  {
    "A_name" : "zip",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 412, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 414, Column: 13",
        "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Collection"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, [Element]>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 414, Column: 13",
    "H_initialValue" : "Observable.zip(collection.map { $0.asSharedSequence().asObservable() })"
  },
  {
    "A_name" : "SharedSequence",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 421, Column: 1",
    "G_members" : [
      {
        "A_name" : "combineLatest",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 428, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 430, Column: 9",
            "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
          }
        ],
        "I_parameterType" : [
          "Collection",
          "@escaping ([Element]) throws -> Result"
        ],
        "I_parameters" : [
          "_",
          "resultSelector"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
      },
      {
        "A_name" : "combineLatest",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 439, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 441, Column: 9",
            "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Collection"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, [Element]>"
      }
    ]
  },
  {
    "A_name" : "combineLatest",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 428, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 430, Column: 9",
        "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
      }
    ],
    "I_parameterType" : [
      "Collection",
      "@escaping ([Element]) throws -> Result"
    ],
    "I_parameters" : [
      "_",
      "resultSelector"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Result>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 430, Column: 9",
    "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
  },
  {
    "A_name" : "combineLatest",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 439, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 441, Column: 9",
        "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Collection"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, [Element]>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 441, Column: 9",
    "H_initialValue" : "Observable.combineLatest(collection.map { $0.asObservable() })"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 447, Column: 1",
    "G_members" : [
      {
        "A_name" : "withUnretained",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 457, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Object",
          "@escaping (Object, Element) -> Out"
        ],
        "I_parameters" : [
          "_",
          "resultSelector"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Out>"
      },
      {
        "A_name" : "withUnretained",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 472, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Object"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, (Object, Element)>"
      }
    ]
  },
  {
    "A_name" : "withUnretained",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 457, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Object",
      "@escaping (Object, Element) -> Out"
    ],
    "I_parameters" : [
      "_",
      "resultSelector"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Out>"
  },
  {
    "A_name" : "withUnretained",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 472, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Object"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, (Object, Element)>"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 478, Column: 1",
    "G_members" : [
      {
        "A_name" : "withLatestFrom",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 487, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 488, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence(), resultSelector: resultSelector)"
          }
        ],
        "I_parameterType" : [
          "SecondO",
          "@escaping (Element, SecondO.Element) -> ResultType"
        ],
        "I_parameters" : [
          "_",
          "resultSelector"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, ResultType>"
      },
      {
        "A_name" : "withLatestFrom",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 500, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 501, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence())"
          }
        ],
        "I_parameterType" : [
          "SecondO"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, SecondO.Element>"
      }
    ]
  },
  {
    "A_name" : "withLatestFrom",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 487, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 488, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence(), resultSelector: resultSelector)"
      }
    ],
    "I_parameterType" : [
      "SecondO",
      "@escaping (Element, SecondO.Element) -> ResultType"
    ],
    "I_parameters" : [
      "_",
      "resultSelector"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, ResultType>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 488, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence(), resultSelector: resultSelector)"
  },
  {
    "A_name" : "withLatestFrom",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 500, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 501, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence())"
      }
    ],
    "I_parameterType" : [
      "SecondO"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, SecondO.Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 501, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .withLatestFrom(second.asSharedSequence())"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 509, Column: 1",
    "G_members" : [
      {
        "A_name" : "skip",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 519, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 521, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .skip(count)"
          }
        ],
        "I_parameterType" : [
          "Int"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "skip",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 519, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 521, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .skip(count)"
      }
    ],
    "I_parameterType" : [
      "Int"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 521, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .skip(count)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 528, Column: 1",
    "G_members" : [
      {
        "A_name" : "startWith",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 538, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 540, Column: 9",
            "H_initialValue" : "self.asObservable()\n                .startWith(element)"
          }
        ],
        "I_parameterType" : [
          "Element"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "startWith",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 538, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 540, Column: 9",
        "H_initialValue" : "self.asObservable()\n                .startWith(element)"
      }
    ],
    "I_parameterType" : [
      "Element"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 540, Column: 9",
    "H_initialValue" : "self.asObservable()\n                .startWith(element)"
  },
  {
    "A_name" : "SharedSequenceConvertibleType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 548, Column: 1",
    "G_members" : [
      {
        "A_name" : "delay",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 559, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "SharedSequence+Operators.swift - Line: 561, Column: 9",
            "H_initialValue" : "self.asObservable()\n            .delay(dueTime, scheduler: SharingStrategy.scheduler)"
          }
        ],
        "I_parameterType" : [
          "RxTimeInterval"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
      }
    ]
  },
  {
    "A_name" : "delay",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 559, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "SharedSequence+Operators.swift - Line: 561, Column: 9",
        "H_initialValue" : "self.asObservable()\n            .delay(dueTime, scheduler: SharingStrategy.scheduler)"
      }
    ],
    "I_parameterType" : [
      "RxTimeInterval"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> SharedSequence<SharingStrategy, Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "SharedSequence+Operators.swift - Line: 561, Column: 9",
    "H_initialValue" : "self.asObservable()\n            .delay(dueTime, scheduler: SharingStrategy.scheduler)"
  }
]