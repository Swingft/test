[
  {
    "A_name" : "ObservablePrimitiveSequenceTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 13, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservablePrimitiveSequenceTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 17, Column: 1",
    "G_members" : [
      {
        "A_name" : "testAsSingle_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 18, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 19, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 21, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 27, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_One",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 40, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 41, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 43, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 50, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_Many",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 64, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 65, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 67, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 75, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 88, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 89, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 91, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 96, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_Error2",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 109, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 110, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 112, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 118, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_subscribeOnSuccess",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 131, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 132, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsSingle_subscribeOnError",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 143, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 144, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testAsSingle_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 18, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 19, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 21, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 27, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 19, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 21, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 27, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
  },
  {
    "A_name" : "testAsSingle_One",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 40, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 41, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 43, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 50, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 41, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 43, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 50, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
  },
  {
    "A_name" : "testAsSingle_Many",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 64, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 65, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 67, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 75, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 65, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 67, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 75, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
  },
  {
    "A_name" : "testAsSingle_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 88, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 89, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 91, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 96, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 89, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 91, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 96, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
  },
  {
    "A_name" : "testAsSingle_Error2",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 109, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 110, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 112, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 118, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 110, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 112, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 118, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asSingle()\n        }"
  },
  {
    "A_name" : "testAsSingle_subscribeOnSuccess",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 131, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 132, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 132, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsSingle_subscribeOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 143, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 144, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 144, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsSingleReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 156, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsSingleReleasesResourcesOnError1",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 160, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsSingleReleasesResourcesOnError2",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 164, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "ObservablePrimitiveSequenceTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 170, Column: 1",
    "G_members" : [
      {
        "A_name" : "testFirst_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 171, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 172, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 174, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 180, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testFirst_One",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 194, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 195, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 197, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 204, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testFirst_Many",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 218, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 219, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 221, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 229, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testFirst_ManyWithoutCompletion",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 243, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 244, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 246, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(160, 2),\n            .next(280, 3),\n            .next(250, 4),\n            .next(300, 5)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 254, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testFirst_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 268, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 269, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 271, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 276, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testFirst_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 171, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 172, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 174, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 180, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 172, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 174, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 180, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
  },
  {
    "A_name" : "testFirst_One",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 194, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 195, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 197, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 204, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 195, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 197, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 204, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
  },
  {
    "A_name" : "testFirst_Many",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 218, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 219, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 221, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 229, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 219, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 221, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 229, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
  },
  {
    "A_name" : "testFirst_ManyWithoutCompletion",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 243, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 244, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 246, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(160, 2),\n            .next(280, 3),\n            .next(250, 4),\n            .next(300, 5)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 254, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 244, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 246, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(160, 2),\n            .next(280, 3),\n            .next(250, 4),\n            .next(300, 5)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 254, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
  },
  {
    "A_name" : "testFirst_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 268, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 269, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 271, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 276, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 269, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 271, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 276, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.first().map { $0 ?? -1 }\n        }"
  },
  {
    "A_name" : "testFirstReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 290, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testFirstReleasesResourcesOnError1",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 294, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "ObservablePrimitiveSequenceTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 300, Column: 1",
    "G_members" : [
      {
        "A_name" : "testAsMaybe_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 301, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 302, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 304, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 310, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_One",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 323, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 324, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 326, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 333, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_Many",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 347, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 348, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 350, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 358, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 371, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 372, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 374, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 379, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_Error2",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 392, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 393, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 395, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 401, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_subscribeOnSuccess",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 414, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 415, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_subscribeOnError",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 428, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 429, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsMaybe_subscribeOnCompleted",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 442, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 443, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testAsMaybe_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 301, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 302, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 304, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 310, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 302, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 304, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 310, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
  },
  {
    "A_name" : "testAsMaybe_One",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 323, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 324, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 326, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 333, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 324, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 326, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 333, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
  },
  {
    "A_name" : "testAsMaybe_Many",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 347, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 348, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 350, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 358, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 348, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 350, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .completed(250),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 358, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
  },
  {
    "A_name" : "testAsMaybe_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 371, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 372, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 374, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 379, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 372, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 374, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .error(210, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 379, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
  },
  {
    "A_name" : "testAsMaybe_Error2",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 392, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 393, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 395, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 401, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 393, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 395, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(205, 2),\n            .error(210, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 401, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.asMaybe()\n        }"
  },
  {
    "A_name" : "testAsMaybe_subscribeOnSuccess",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 414, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 415, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 415, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsMaybe_subscribeOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 428, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 429, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 429, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsMaybe_subscribeOnCompleted",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 442, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 443, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 443, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsMaybeReleasesResourcesOnComplete1",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 457, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsMaybeReleasesResourcesOnComplete2",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 461, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsMaybeReleasesResourcesOnError1",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 465, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsMaybeReleasesResourcesOnError2",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 469, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "ObservablePrimitiveSequenceTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 475, Column: 1",
    "G_members" : [
      {
        "A_name" : "testAsCompletable_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 476, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 477, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 479, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .completed(250, Never.self),\n            .error(260, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 484, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsCompletable_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 497, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 498, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 500, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .error(210, testError, Never.self)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 504, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsCompletable_subscribeOnCompleted",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 517, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 518, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testAsCompletable_subscribeOnError",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 529, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 530, Column: 9",
            "H_initialValue" : "[]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testCompletable_merge",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 551, Column: 5",
        "G_members" : [
          {
            "A_name" : "factories",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 552, Column: 9",
            "H_initialValue" : "[\n                { ys1, ys2 in Completable.zip(ys1, ys2) },\n                { ys1, ys2 in Completable.zip([ys1, ys2]) },\n                { ys1, ys2 in Completable.zip(AnyCollection([ys1, ys2])) },\n            ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testCompletable_concat",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 589, Column: 5",
        "G_members" : [
          {
            "A_name" : "factories",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 590, Column: 9",
            "H_initialValue" : "[\n                { ys1, ys2 in Completable.concat(ys1, ys2) },\n                { ys1, ys2 in Completable.concat([ys1, ys2]) },\n                { ys1, ys2 in Completable.concat(AnyCollection([ys1, ys2])) },\n                { ys1, ys2 in ys1.concat(ys2) }\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testAsCompletable_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 476, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 477, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 479, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .completed(250, Never.self),\n            .error(260, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 484, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 477, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 479, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .completed(250, Never.self),\n            .error(260, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 484, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
  },
  {
    "A_name" : "testAsCompletable_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 497, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 498, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 500, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .error(210, testError, Never.self)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 504, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 498, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 500, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .error(210, testError, Never.self)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 504, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.asCompletable()\n        }"
  },
  {
    "A_name" : "testAsCompletable_subscribeOnCompleted",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 517, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 518, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 518, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsCompletable_subscribeOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 529, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 530, Column: 9",
        "H_initialValue" : "[]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 530, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "testAsCompletableReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 542, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testAsCompletableReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 546, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testCompletable_merge",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 551, Column: 5",
    "G_members" : [
      {
        "A_name" : "factories",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 552, Column: 9",
        "H_initialValue" : "[\n                { ys1, ys2 in Completable.zip(ys1, ys2) },\n                { ys1, ys2 in Completable.zip([ys1, ys2]) },\n                { ys1, ys2 in Completable.zip(AnyCollection([ys1, ys2])) },\n            ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "factories",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 552, Column: 9",
    "H_initialValue" : "[\n                { ys1, ys2 in Completable.zip(ys1, ys2) },\n                { ys1, ys2 in Completable.zip([ys1, ys2]) },\n                { ys1, ys2 in Completable.zip(AnyCollection([ys1, ys2])) },\n            ]"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 560, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "ys1",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 562, Column: 13",
    "H_initialValue" : "scheduler.createHotObservable([\n                .completed(250, Never.self),\n                .error(260, testError)\n                ])"
  },
  {
    "A_name" : "ys2",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 567, Column: 13",
    "H_initialValue" : "scheduler.createHotObservable([\n                .completed(300, Never.self)\n                ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 571, Column: 13",
    "H_initialValue" : "scheduler.start {\n                factory(ys1.asCompletable(), ys2.asCompletable())\n            }"
  },
  {
    "A_name" : "testCompletable_concat",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 589, Column: 5",
    "G_members" : [
      {
        "A_name" : "factories",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 590, Column: 9",
        "H_initialValue" : "[\n                { ys1, ys2 in Completable.concat(ys1, ys2) },\n                { ys1, ys2 in Completable.concat([ys1, ys2]) },\n                { ys1, ys2 in Completable.concat(AnyCollection([ys1, ys2])) },\n                { ys1, ys2 in ys1.concat(ys2) }\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "factories",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 590, Column: 9",
    "H_initialValue" : "[\n                { ys1, ys2 in Completable.concat(ys1, ys2) },\n                { ys1, ys2 in Completable.concat([ys1, ys2]) },\n                { ys1, ys2 in Completable.concat(AnyCollection([ys1, ys2])) },\n                { ys1, ys2 in ys1.concat(ys2) }\n        ]"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 599, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "ys1",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 601, Column: 13",
    "H_initialValue" : "scheduler.createHotObservable([\n                .completed(250, Never.self),\n                .error(260, testError)\n                ])"
  },
  {
    "A_name" : "ys2",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 606, Column: 13",
    "H_initialValue" : "scheduler.createHotObservable([\n                .completed(300, Never.self)\n                ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+PrimitiveSequenceTest.swift - Line: 610, Column: 13",
    "H_initialValue" : "scheduler.start {\n                factory(ys1.asCompletable(), ys2.asCompletable())\n            }"
  }
]