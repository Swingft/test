[
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 16, Column: 1",
    "G_members" : [
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 42, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Source"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> (_ cellFactory: @escaping (UITableView, Int, Sequence.Element) -> UITableViewCell)\n        -> Disposable"
      },
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 76, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "String",
          "Cell.Type"
        ],
        "I_parameters" : [
          "cellIdentifier",
          "cellType"
        ],
        "J_returnType" : "-> (_ source: Source)\n        -> (_ configureCell: @escaping (Int, Sequence.Element, Cell) -> Void)\n        -> Disposable"
      },
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 107, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "DataSource"
        ],
        "I_parameters" : [
          "dataSource"
        ],
        "J_returnType" : "-> (_ source: Source)\n        -> Disposable"
      }
    ]
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 42, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Source"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> (_ cellFactory: @escaping (UITableView, Int, Sequence.Element) -> UITableViewCell)\n        -> Disposable"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 48, Column: 17",
    "H_initialValue" : "RxTableViewReactiveArrayDataSourceSequenceWrapper<Sequence>(cellFactory: cellFactory)"
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 76, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String",
      "Cell.Type"
    ],
    "I_parameters" : [
      "cellIdentifier",
      "cellType"
    ],
    "J_returnType" : "-> (_ source: Source)\n        -> (_ configureCell: @escaping (Int, Sequence.Element, Cell) -> Void)\n        -> Disposable"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 84, Column: 17",
    "H_initialValue" : "RxTableViewReactiveArrayDataSourceSequenceWrapper<Sequence> { tv, i, item in\n                    let indexPath = IndexPath(item: i, section: 0)\n                    let cell = tv.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! Cell\n                    configureCell(i, item, cell)\n                    return cell\n                }"
  },
  {
    "A_name" : "indexPath",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 85, Column: 21",
    "H_initialValue" : "IndexPath(item: i, section: 0)"
  },
  {
    "A_name" : "cell",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 86, Column: 21",
    "H_initialValue" : "tv.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! Cell"
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 107, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "DataSource"
    ],
    "I_parameters" : [
      "dataSource"
    ],
    "J_returnType" : "-> (_ source: Source)\n        -> Disposable"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 134, Column: 1",
    "G_members" : [
      {
        "A_name" : "dataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 140, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "setDataSource",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 153, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UITableViewDataSource"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "itemSelected",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 163, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemDeselected",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 175, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemHighlighted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 187, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemUnhighlighted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 199, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemAccessoryButtonTapped",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 211, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemInserted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 223, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemDeleted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 238, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemMoved",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 253, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "willDisplayCell",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 265, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "didEndDisplayingCell",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 277, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "modelSelected",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 297, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UITableView+Rx.swift - Line: 298, Column: 9",
            "H_initialValue" : "self.itemSelected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
          }
        ],
        "I_parameterType" : [
          "T.Type"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> ControlEvent<T>"
      },
      {
        "A_name" : "modelDeselected",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 320, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UITableView+Rx.swift - Line: 321, Column: 10",
            "H_initialValue" : "self.itemDeselected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n             guard let view = view else {\n                 return Observable.empty()\n             }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
          }
        ],
        "I_parameterType" : [
          "T.Type"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> ControlEvent<T>"
      },
      {
        "A_name" : "modelDeleted",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 343, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UITableView+Rx.swift - Line: 344, Column: 9",
            "H_initialValue" : "self.itemDeleted.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n            \n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
          }
        ],
        "I_parameterType" : [
          "T.Type"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> ControlEvent<T>"
      },
      {
        "A_name" : "model",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 358, Column: 5",
        "G_members" : [
          {
            "A_name" : "dataSource",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UITableView+Rx.swift - Line: 359, Column: 9",
            "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.items*` methods was used.\")"
          },
          {
            "A_name" : "element",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UITableView+Rx.swift - Line: 361, Column: 9",
            "H_initialValue" : "try dataSource.model(at: indexPath)"
          }
        ],
        "I_parameterType" : [
          "IndexPath"
        ],
        "I_parameters" : [
          "at"
        ],
        "J_returnType" : "-> T"
      }
    ]
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 140, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "setDataSource",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 153, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UITableViewDataSource"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "itemSelected",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 163, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 164, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didSelectRowAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemDeselected",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 175, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 176, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didDeselectRowAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemHighlighted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 187, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 188, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didHighlightRowAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemUnhighlighted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 199, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 200, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didUnhighlightRowAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemAccessoryButtonTapped",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 211, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 212, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:accessoryButtonTappedForRowWith:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemInserted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 223, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 224, Column: 9",
    "H_initialValue" : "self.dataSource.methodInvoked(#selector(UITableViewDataSource.tableView(_:commit:forRowAt:)))\n            .filter { a in\n                return UITableViewCell.EditingStyle(rawValue: (try castOrThrow(NSNumber.self, a[1])).intValue) == .insert\n            }\n            .map { a in\n                return (try castOrThrow(IndexPath.self, a[2]))\n        }"
  },
  {
    "A_name" : "itemDeleted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 238, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 239, Column: 9",
    "H_initialValue" : "self.dataSource.methodInvoked(#selector(UITableViewDataSource.tableView(_:commit:forRowAt:)))\n            .filter { a in\n                return UITableViewCell.EditingStyle(rawValue: (try castOrThrow(NSNumber.self, a[1])).intValue) == .delete\n            }\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[2])\n            }"
  },
  {
    "A_name" : "itemMoved",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 253, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 254, Column: 9",
    "H_initialValue" : "self.dataSource.methodInvoked(#selector(UITableViewDataSource.tableView(_:moveRowAt:to:)))\n            .map { a in\n                return (try castOrThrow(IndexPath.self, a[1]), try castOrThrow(IndexPath.self, a[2]))\n            }"
  },
  {
    "A_name" : "willDisplayCell",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 265, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 266, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:willDisplay:forRowAt:)))\n            .map { a in\n                return (try castOrThrow(UITableViewCell.self, a[1]), try castOrThrow(IndexPath.self, a[2]))\n            }"
  },
  {
    "A_name" : "didEndDisplayingCell",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 277, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 278, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didEndDisplaying:forRowAt:)))\n            .map { a in\n                return (try castOrThrow(UITableViewCell.self, a[1]), try castOrThrow(IndexPath.self, a[2]))\n            }"
  },
  {
    "A_name" : "modelSelected",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 297, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 298, Column: 9",
        "H_initialValue" : "self.itemSelected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
      }
    ],
    "I_parameterType" : [
      "T.Type"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> ControlEvent<T>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 298, Column: 9",
    "H_initialValue" : "self.itemSelected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
  },
  {
    "A_name" : "modelDeselected",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 320, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 321, Column: 10",
        "H_initialValue" : "self.itemDeselected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n             guard let view = view else {\n                 return Observable.empty()\n             }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
      }
    ],
    "I_parameterType" : [
      "T.Type"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> ControlEvent<T>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 321, Column: 10",
    "H_initialValue" : "self.itemDeselected.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n             guard let view = view else {\n                 return Observable.empty()\n             }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
  },
  {
    "A_name" : "modelDeleted",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 343, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 344, Column: 9",
        "H_initialValue" : "self.itemDeleted.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n            \n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
      }
    ],
    "I_parameterType" : [
      "T.Type"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> ControlEvent<T>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 344, Column: 9",
    "H_initialValue" : "self.itemDeleted.flatMap { [weak view = self.base as UITableView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n            \n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
  },
  {
    "A_name" : "model",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 358, Column: 5",
    "G_members" : [
      {
        "A_name" : "dataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 359, Column: 9",
        "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.items*` methods was used.\")"
      },
      {
        "A_name" : "element",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 361, Column: 9",
        "H_initialValue" : "try dataSource.model(at: indexPath)"
      }
    ],
    "I_parameterType" : [
      "IndexPath"
    ],
    "I_parameters" : [
      "at"
    ],
    "J_returnType" : "-> T"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 359, Column: 9",
    "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.items*` methods was used.\")"
  },
  {
    "A_name" : "element",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 361, Column: 9",
    "H_initialValue" : "try dataSource.model(at: indexPath)"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "available"
    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 367, Column: 1",
    "G_members" : [
      {
        "A_name" : "prefetchDataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 373, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "setPrefetchDataSource",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 386, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UITableViewDataSourcePrefetching"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "prefetchRows",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 392, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "cancelPrefetchingForRows",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 398, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "prefetchDataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 373, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "setPrefetchDataSource",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 386, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UITableViewDataSourcePrefetching"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "prefetchRows",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 392, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 393, Column: 9",
    "H_initialValue" : "RxTableViewDataSourcePrefetchingProxy.proxy(for: base).prefetchRowsPublishSubject"
  },
  {
    "A_name" : "cancelPrefetchingForRows",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 398, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 399, Column: 9",
    "H_initialValue" : "prefetchDataSource.methodInvoked(#selector(UITableViewDataSourcePrefetching.tableView(_:cancelPrefetchingForRowsAt:)))\n            .map { a in\n                return try castOrThrow(Array<IndexPath>.self, a[1])\n        }"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 412, Column: 5",
    "G_members" : [
      {
        "A_name" : "didUpdateFocusInContextWithAnimationCoordinator",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITableView+Rx.swift - Line: 417, Column: 9",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "didUpdateFocusInContextWithAnimationCoordinator",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 417, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 419, Column: 13",
    "H_initialValue" : "delegate.methodInvoked(#selector(UITableViewDelegate.tableView(_:didUpdateFocusIn:with:)))\n                .map { a -> (context: UITableViewFocusUpdateContext, animationCoordinator: UIFocusAnimationCoordinator) in\n                    let context = try castOrThrow(UITableViewFocusUpdateContext.self, a[1])\n                    let animationCoordinator = try castOrThrow(UIFocusAnimationCoordinator.self, a[2])\n                    return (context: context, animationCoordinator: animationCoordinator)\n            }"
  },
  {
    "A_name" : "context",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 421, Column: 21",
    "H_initialValue" : "try castOrThrow(UITableViewFocusUpdateContext.self, a[1])"
  },
  {
    "A_name" : "animationCoordinator",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITableView+Rx.swift - Line: 422, Column: 21",
    "H_initialValue" : "try castOrThrow(UIFocusAnimationCoordinator.self, a[2])"
  }
]