[
  {
    "A_name" : "ObservableRetryWhenTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 15, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "CustomErrorType",
    "B_kind" : "struct",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "Error"
    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 18, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "RetryWhenError",
    "B_kind" : "struct",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "Error"
    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 22, Column: 1",
    "G_members" : [
      {
        "A_name" : "init",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 23, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 23, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "retryError",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 28, Column: 1",
    "H_initialValue" : "RetryWhenError()"
  },
  {
    "A_name" : "ObservableRetryWhenTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 31, Column: 1",
    "G_members" : [
      {
        "A_name" : "testRetryWhen_Never",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 33, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 35, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 37, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250)\n            ])"
          },
          {
            "A_name" : "empty",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 42, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(210)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 47, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { _ in\n                return empty\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 53, Column: 9",
            "H_initialValue" : "[\n            Recorded.completed(250, Int.self)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableNever",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 64, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 66, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 68, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .error(250, retryError)\n            ])"
          },
          {
            "A_name" : "never",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 77, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 81, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 87, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableNeverComplete",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 101, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 103, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 105, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n            ])"
          },
          {
            "A_name" : "never",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 114, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 118, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 124, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableEmpty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 139, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 141, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 143, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(100, 1),\n            .next(150, 2),\n            .next(200, 3),\n            .completed(250)\n            ])"
          },
          {
            "A_name" : "empty",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 150, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 0),\n            .completed(0)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 155, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 161, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(300, 1),\n            .next(350, 2),\n            .next(400, 3),\n            .completed(450)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableNextError",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 176, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 178, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 180, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 187, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { _a, _ in\n                    var a = _a\n                    a += 1\n                    if a == 2 {\n                        throw testError1\n                    }\n                    return a\n                }\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 200, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .error(260, testError1)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableComplete",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 217, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 219, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 221, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
          },
          {
            "A_name" : "empty",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 228, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(230)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 233, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty.asObservable()\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 239, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .completed(230)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableNextComplete",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 252, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 254, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 256, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 263, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { a, _ in\n                    return a + 1\n                }.take(while: { (num: Int) -> Bool in\n                    return num < 2\n                })\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 273, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .completed(260)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_ObservableInfinite",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 289, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 291, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 293, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
          },
          {
            "A_name" : "never",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 300, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 304, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 310, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_Incremental_BackOff",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 323, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 325, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 328, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
          },
          {
            "A_name" : "maxAttempts",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 333, Column: 9",
            "H_initialValue" : "4"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 335, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<Swift.Error>) in\n                return errors.enumerated().flatMap { a, e -> Observable<Int64> in\n                    if a >= maxAttempts - 1 {\n                        return Observable.error(e)\n                    }\n\n                    return Observable<Int64>.timer(.seconds((a + 1) * 50), scheduler: scheduler)\n                }\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 347, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .next(265, 1),\n            .next(375, 1),\n            .next(535, 1),\n            .error(540, retryError)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_IgnoresDifferentErrorTypes",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 365, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 367, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 370, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 375, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<CustomErrorType>) in\n                errors\n            }\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 381, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .error(210, retryError)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testRetryWhen_tailRecursiveOptimizationsTest",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 393, Column: 5",
        "G_members" : [
          {
            "A_name" : "count",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 394, Column: 9",
            "H_initialValue" : "1"
          },
          {
            "A_name" : "sequenceSendingImmediateError",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+RetryWhenTests.swift - Line: 395, Column: 9",
            "H_initialValue" : "Observable.create { observer in\n            observer.on(.next(0))\n            observer.on(.next(1))\n            observer.on(.next(2))\n            if count < 2 {\n                observer.on(.error(retryError))\n                count += 1\n            }\n            observer.on(.next(3))\n            observer.on(.next(4))\n            observer.on(.next(5))\n            observer.on(.completed)\n\n            return Disposables.create()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testRetryWhen_Never",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 33, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 35, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 37, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250)\n            ])"
      },
      {
        "A_name" : "empty",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 42, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(210)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 47, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { _ in\n                return empty\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 53, Column: 9",
        "H_initialValue" : "[\n            Recorded.completed(250, Int.self)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 35, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 37, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(250)\n            ])"
  },
  {
    "A_name" : "empty",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 42, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(210)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 47, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { _ in\n                return empty\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 53, Column: 9",
    "H_initialValue" : "[\n            Recorded.completed(250, Int.self)\n        ]"
  },
  {
    "A_name" : "testRetryWhen_ObservableNever",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 64, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 66, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 68, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .error(250, retryError)\n            ])"
      },
      {
        "A_name" : "never",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 77, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 81, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 87, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 66, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 68, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .error(250, retryError)\n            ])"
  },
  {
    "A_name" : "never",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 77, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 81, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 87, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableNeverComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 101, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 103, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 105, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n            ])"
      },
      {
        "A_name" : "never",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 114, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 118, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 124, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 103, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 105, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n            ])"
  },
  {
    "A_name" : "never",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 114, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 118, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 124, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 2),\n            .next(220, 3),\n            .next(230, 4),\n            .next(240, 5),\n            .completed(250)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableEmpty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 139, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 141, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 143, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(100, 1),\n            .next(150, 2),\n            .next(200, 3),\n            .completed(250)\n            ])"
      },
      {
        "A_name" : "empty",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 150, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 0),\n            .completed(0)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 155, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 161, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(300, 1),\n            .next(350, 2),\n            .next(400, 3),\n            .completed(450)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 141, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 143, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(100, 1),\n            .next(150, 2),\n            .next(200, 3),\n            .completed(250)\n            ])"
  },
  {
    "A_name" : "empty",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 150, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 0),\n            .completed(0)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 155, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 161, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(300, 1),\n            .next(350, 2),\n            .next(400, 3),\n            .completed(450)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableNextError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 176, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 178, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 180, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 187, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { _a, _ in\n                    var a = _a\n                    a += 1\n                    if a == 2 {\n                        throw testError1\n                    }\n                    return a\n                }\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 200, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .error(260, testError1)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 178, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 180, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 187, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { _a, _ in\n                    var a = _a\n                    a += 1\n                    if a == 2 {\n                        throw testError1\n                    }\n                    return a\n                }\n            }\n        }"
  },
  {
    "A_name" : "a",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 190, Column: 21",
    "H_initialValue" : "_a"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 200, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .error(260, testError1)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 217, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 219, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 221, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
      },
      {
        "A_name" : "empty",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 228, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(230)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 233, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty.asObservable()\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 239, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .completed(230)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 219, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 221, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
  },
  {
    "A_name" : "empty",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 228, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1),\n            .completed(230)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 233, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return empty.asObservable()\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 239, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .completed(230)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableNextComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 252, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 254, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 256, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 263, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { a, _ in\n                    return a + 1\n                }.take(while: { (num: Int) -> Bool in\n                    return num < 2\n                })\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 273, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .completed(260)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 254, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 256, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 263, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 300) {\n            xs.retry { (errors: Observable<RetryWhenError>) in\n                return errors.scan(0) { a, _ in\n                    return a + 1\n                }.take(while: { (num: Int) -> Bool in\n                    return num < 2\n                })\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 273, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2),\n            .next(240, 1),\n            .next(250, 2),\n            .completed(260)\n        )"
  },
  {
    "A_name" : "testRetryWhen_ObservableInfinite",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 289, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 291, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 293, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
      },
      {
        "A_name" : "never",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 300, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 304, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 310, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 291, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 293, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .error(30, retryError),\n            .completed(40)\n            ])"
  },
  {
    "A_name" : "never",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 300, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 304, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.retry { _ in\n                return never\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 310, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(210, 1),\n            .next(220, 2)\n        )"
  },
  {
    "A_name" : "testRetryWhen_Incremental_BackOff",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 323, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 325, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 328, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
      },
      {
        "A_name" : "maxAttempts",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 333, Column: 9",
        "H_initialValue" : "4"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 335, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<Swift.Error>) in\n                return errors.enumerated().flatMap { a, e -> Observable<Int64> in\n                    if a >= maxAttempts - 1 {\n                        return Observable.error(e)\n                    }\n\n                    return Observable<Int64>.timer(.seconds((a + 1) * 50), scheduler: scheduler)\n                }\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 347, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .next(265, 1),\n            .next(375, 1),\n            .next(535, 1),\n            .error(540, retryError)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 325, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 328, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
  },
  {
    "A_name" : "maxAttempts",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 333, Column: 9",
    "H_initialValue" : "4"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 335, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<Swift.Error>) in\n                return errors.enumerated().flatMap { a, e -> Observable<Int64> in\n                    if a >= maxAttempts - 1 {\n                        return Observable.error(e)\n                    }\n\n                    return Observable<Int64>.timer(.seconds((a + 1) * 50), scheduler: scheduler)\n                }\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 347, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .next(265, 1),\n            .next(375, 1),\n            .next(535, 1),\n            .error(540, retryError)\n        )"
  },
  {
    "A_name" : "testRetryWhen_IgnoresDifferentErrorTypes",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 365, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 367, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 370, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 375, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<CustomErrorType>) in\n                errors\n            }\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 381, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .error(210, retryError)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 367, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 370, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(5, 1),\n            .error(10, retryError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 375, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 800) {\n            xs.retry { (errors: Observable<CustomErrorType>) in\n                errors\n            }\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 381, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(205, 1),\n            .error(210, retryError)\n        )"
  },
  {
    "A_name" : "testRetryWhen_tailRecursiveOptimizationsTest",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 393, Column: 5",
    "G_members" : [
      {
        "A_name" : "count",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 394, Column: 9",
        "H_initialValue" : "1"
      },
      {
        "A_name" : "sequenceSendingImmediateError",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+RetryWhenTests.swift - Line: 395, Column: 9",
        "H_initialValue" : "Observable.create { observer in\n            observer.on(.next(0))\n            observer.on(.next(1))\n            observer.on(.next(2))\n            if count < 2 {\n                observer.on(.error(retryError))\n                count += 1\n            }\n            observer.on(.next(3))\n            observer.on(.next(4))\n            observer.on(.next(5))\n            observer.on(.completed)\n\n            return Disposables.create()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "count",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 394, Column: 9",
    "H_initialValue" : "1"
  },
  {
    "A_name" : "sequenceSendingImmediateError",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 395, Column: 9",
    "H_initialValue" : "Observable.create { observer in\n            observer.on(.next(0))\n            observer.on(.next(1))\n            observer.on(.next(2))\n            if count < 2 {\n                observer.on(.error(retryError))\n                count += 1\n            }\n            observer.on(.next(3))\n            observer.on(.next(4))\n            observer.on(.next(5))\n            observer.on(.completed)\n\n            return Disposables.create()\n        }"
  },
  {
    "A_name" : "testRetryWhen1ReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 420, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testRetryWhen2ReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 424, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testRetryWhen1ReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+RetryWhenTests.swift - Line: 428, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  }
]