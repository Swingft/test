[
  {
    "A_name" : "TestScheduler",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 20, Column: 1",
    "G_members" : [
      {
        "A_name" : "parseEventsAndTimes",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 43, Column: 5",
        "G_members" : [
          {
            "A_name" : "timelines",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 47, Column: 9",
            "H_initialValue" : "timeline.components(separatedBy: \"|\")"
          },
          {
            "A_name" : "allExceptLast",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 49, Column: 9",
            "H_initialValue" : "timelines[0 ..< timelines.count - 1]"
          }
        ],
        "I_parameterType" : [
          "String",
          "[String: T]",
          "[String: Swift.Error]"
        ],
        "I_parameters" : [
          "timeline",
          "values",
          "errors"
        ],
        "J_returnType" : "-> [[Recorded<Event<T>>]]"
      },
      {
        "A_name" : "createDriver",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 98, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "String",
          "[String: T]"
        ],
        "I_parameters" : [
          "timeline",
          "values"
        ],
        "J_returnType" : "-> Driver<T>"
      },
      {
        "A_name" : "createObservable",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 113, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 114, Column: 9",
            "H_initialValue" : "self.parseEventsAndTimes(timeline: timeline, values: values, errors: errors)"
          }
        ],
        "I_parameterType" : [
          "String",
          "[String: T]",
          "[String: Swift.Error]"
        ],
        "I_parameters" : [
          "timeline",
          "values",
          "errors"
        ],
        "J_returnType" : "-> Observable<T>"
      },
      {
        "A_name" : "createObservable",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 125, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "[Recorded<Event<T>>]"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Observable<T>"
      },
      {
        "A_name" : "createObservable",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 139, Column: 5",
        "G_members" : [
          {
            "A_name" : "attemptCount",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 140, Column: 9",
            "H_initialValue" : "0"
          }
        ],
        "I_parameterType" : [
          "[[Recorded<Event<T>>]]"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Observable<T>"
      },
      {
        "A_name" : "mock",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 175, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "[String: Ret]",
          "[String: Swift.Error]",
          "@escaping (Arg) -> String"
        ],
        "I_parameters" : [
          "values",
          "errors",
          "timelineSelector"
        ],
        "J_returnType" : "-> (Arg) -> Observable<Ret>"
      },
      {
        "A_name" : "record",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 189, Column: 5",
        "G_members" : [
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 190, Column: 9",
            "H_initialValue" : "self.createObserver(Source.Element.self)"
          },
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "TestScheduler+MarbleTests.swift - Line: 191, Column: 9",
            "H_initialValue" : "source.asObservable().bind(to: observer)"
          }
        ],
        "I_parameterType" : [
          "Source"
        ],
        "I_parameters" : [
          "source"
        ],
        "J_returnType" : "-> TestableObserver<Source.Element>"
      }
    ]
  },
  {
    "A_name" : "parseEventsAndTimes",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 43, Column: 5",
    "G_members" : [
      {
        "A_name" : "timelines",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 47, Column: 9",
        "H_initialValue" : "timeline.components(separatedBy: \"|\")"
      },
      {
        "A_name" : "allExceptLast",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 49, Column: 9",
        "H_initialValue" : "timelines[0 ..< timelines.count - 1]"
      }
    ],
    "I_parameterType" : [
      "String",
      "[String: T]",
      "[String: Swift.Error]"
    ],
    "I_parameters" : [
      "timeline",
      "values",
      "errors"
    ],
    "J_returnType" : "-> [[Recorded<Event<T>>]]"
  },
  {
    "A_name" : "timelines",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 47, Column: 9",
    "H_initialValue" : "timeline.components(separatedBy: \"|\")"
  },
  {
    "A_name" : "allExceptLast",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 49, Column: 9",
    "H_initialValue" : "timelines[0 ..< timelines.count - 1]"
  },
  {
    "A_name" : "segments",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 54, Column: 17",
    "H_initialValue" : "timeline.components(separatedBy:\"-\")"
  },
  {
    "A_name" : "tickIncrement",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 56, Column: 21",
    "H_initialValue" : "event.count + 1"
  },
  {
    "A_name" : "errorEvent",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 63, Column: 25",
    "H_initialValue" : "RecordedEvent(time: state.time, value: Event<T>.error(NSError(domain: \"Any error domain\", code: -1, userInfo: nil)))"
  },
  {
    "A_name" : "completed",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 68, Column: 25",
    "H_initialValue" : "RecordedEvent(time: state.time, value: Event<T>.completed)"
  },
  {
    "A_name" : "nextEvent",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 77, Column: 25",
    "H_initialValue" : "RecordedEvent(time: state.time, value: Event<T>.error(error))"
  },
  {
    "A_name" : "nextEvent",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 81, Column: 21",
    "H_initialValue" : "RecordedEvent(time: state.time, value: Event<T>.next(next))"
  },
  {
    "A_name" : "createDriver",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 98, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String",
      "[String: T]"
    ],
    "I_parameters" : [
      "timeline",
      "values"
    ],
    "J_returnType" : "-> Driver<T>"
  },
  {
    "A_name" : "createObservable",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 113, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 114, Column: 9",
        "H_initialValue" : "self.parseEventsAndTimes(timeline: timeline, values: values, errors: errors)"
      }
    ],
    "I_parameterType" : [
      "String",
      "[String: T]",
      "[String: Swift.Error]"
    ],
    "I_parameters" : [
      "timeline",
      "values",
      "errors"
    ],
    "J_returnType" : "-> Observable<T>"
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 114, Column: 9",
    "H_initialValue" : "self.parseEventsAndTimes(timeline: timeline, values: values, errors: errors)"
  },
  {
    "A_name" : "createObservable",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 125, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "[Recorded<Event<T>>]"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Observable<T>"
  },
  {
    "A_name" : "createObservable",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 139, Column: 5",
    "G_members" : [
      {
        "A_name" : "attemptCount",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 140, Column: 9",
        "H_initialValue" : "0"
      }
    ],
    "I_parameterType" : [
      "[[Recorded<Event<T>>]]"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Observable<T>"
  },
  {
    "A_name" : "attemptCount",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 140, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "scheduledEvents",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 148, Column: 13",
    "H_initialValue" : "events[attemptCount].map { event in\n                return self.scheduleRelative((), dueTime: resolution * TimeInterval(event.time)) { _ in\n                    observer.on(event.value)\n                    return  Disposables.create()\n                }\n            }"
  },
  {
    "A_name" : "mock",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 175, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "[String: Ret]",
      "[String: Swift.Error]",
      "@escaping (Arg) -> String"
    ],
    "I_parameters" : [
      "values",
      "errors",
      "timelineSelector"
    ],
    "J_returnType" : "-> (Arg) -> Observable<Ret>"
  },
  {
    "A_name" : "timeline",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 177, Column: 13",
    "H_initialValue" : "timelineSelector(parameters)"
  },
  {
    "A_name" : "record",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 189, Column: 5",
    "G_members" : [
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 190, Column: 9",
        "H_initialValue" : "self.createObserver(Source.Element.self)"
      },
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "TestScheduler+MarbleTests.swift - Line: 191, Column: 9",
        "H_initialValue" : "source.asObservable().bind(to: observer)"
      }
    ],
    "I_parameterType" : [
      "Source"
    ],
    "I_parameters" : [
      "source"
    ],
    "J_returnType" : "-> TestableObserver<Source.Element>"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 190, Column: 9",
    "H_initialValue" : "self.createObserver(Source.Element.self)"
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "TestScheduler+MarbleTests.swift - Line: 191, Column: 9",
    "H_initialValue" : "source.asObservable().bind(to: observer)"
  }
]