[
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 16, Column: 1",
    "G_members" : [
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 42, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Source"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> (_ cellFactory: @escaping (UICollectionView, Int, Sequence.Element) -> UICollectionViewCell)\n        -> Disposable"
      },
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 76, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "String",
          "Cell.Type"
        ],
        "I_parameters" : [
          "cellIdentifier",
          "cellType"
        ],
        "J_returnType" : "-> (_ source: Source)\n        -> (_ configureCell: @escaping (Int, Sequence.Element, Cell) -> Void)\n        -> Disposable"
      },
      {
        "A_name" : "items",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 135, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "DataSource"
        ],
        "I_parameters" : [
          "dataSource"
        ],
        "J_returnType" : "-> (_ source: Source)\n        -> Disposable"
      }
    ]
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 42, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Source"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> (_ cellFactory: @escaping (UICollectionView, Int, Sequence.Element) -> UICollectionViewCell)\n        -> Disposable"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 47, Column: 13",
    "H_initialValue" : "RxCollectionViewReactiveArrayDataSourceSequenceWrapper<Sequence>(cellFactory: cellFactory)"
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 76, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String",
      "Cell.Type"
    ],
    "I_parameters" : [
      "cellIdentifier",
      "cellType"
    ],
    "J_returnType" : "-> (_ source: Source)\n        -> (_ configureCell: @escaping (Int, Sequence.Element, Cell) -> Void)\n        -> Disposable"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 83, Column: 17",
    "H_initialValue" : "RxCollectionViewReactiveArrayDataSourceSequenceWrapper<Sequence> { cv, i, item in\n                    let indexPath = IndexPath(item: i, section: 0)\n                    let cell = cv.dequeueReusableCell(withReuseIdentifier: cellIdentifier, for: indexPath) as! Cell\n                    configureCell(i, item, cell)\n                    return cell\n                }"
  },
  {
    "A_name" : "indexPath",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 84, Column: 21",
    "H_initialValue" : "IndexPath(item: i, section: 0)"
  },
  {
    "A_name" : "cell",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 85, Column: 21",
    "H_initialValue" : "cv.dequeueReusableCell(withReuseIdentifier: cellIdentifier, for: indexPath) as! Cell"
  },
  {
    "A_name" : "items",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 135, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "DataSource"
    ],
    "I_parameters" : [
      "dataSource"
    ],
    "J_returnType" : "-> (_ source: Source)\n        -> Disposable"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 161, Column: 1",
    "G_members" : [
      {
        "A_name" : "dataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 168, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "setDataSource",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 179, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UICollectionViewDataSource"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "itemSelected",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 185, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemDeselected",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 195, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemHighlighted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 205, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "itemUnhighlighted",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 215, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "willDisplayCell",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 225, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "willDisplaySupplementaryView",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 235, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "didEndDisplayingCell",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 247, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "didEndDisplayingSupplementaryView",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 257, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "modelSelected",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 277, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UICollectionView+Rx.swift - Line: 278, Column: 9",
            "H_initialValue" : "itemSelected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
          }
        ],
        "I_parameterType" : [
          "T.Type"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> ControlEvent<T>"
      },
      {
        "A_name" : "modelDeselected",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 298, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UICollectionView+Rx.swift - Line: 299, Column: 9",
            "H_initialValue" : "itemDeselected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
          }
        ],
        "I_parameterType" : [
          "T.Type"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> ControlEvent<T>"
      },
      {
        "A_name" : "model",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 311, Column: 5",
        "G_members" : [
          {
            "A_name" : "dataSource",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UICollectionView+Rx.swift - Line: 312, Column: 9",
            "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.itemsWith*` methods was used.\")"
          },
          {
            "A_name" : "element",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "UICollectionView+Rx.swift - Line: 314, Column: 9",
            "H_initialValue" : "try dataSource.model(at: indexPath)"
          }
        ],
        "I_parameterType" : [
          "IndexPath"
        ],
        "I_parameters" : [
          "at"
        ],
        "J_returnType" : "-> T"
      }
    ]
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 168, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "setDataSource",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 179, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UICollectionViewDataSource"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "itemSelected",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 185, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 186, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didSelectItemAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemDeselected",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 195, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 196, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didDeselectItemAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n        }"
  },
  {
    "A_name" : "itemHighlighted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 205, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 206, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didHighlightItemAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "itemUnhighlighted",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 215, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 216, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didUnhighlightItemAt:)))\n            .map { a in\n                return try castOrThrow(IndexPath.self, a[1])\n            }"
  },
  {
    "A_name" : "willDisplayCell",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 225, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 226, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:willDisplay:forItemAt:)))\n            .map { a in\n                return (try castOrThrow(UICollectionViewCell.self, a[1]), try castOrThrow(IndexPath.self, a[2]))\n            }"
  },
  {
    "A_name" : "willDisplaySupplementaryView",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 235, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 236, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)))\n            .map { a in\n                return (try castOrThrow(UICollectionReusableView.self, a[1]),\n                        try castOrThrow(String.self, a[2]),\n                        try castOrThrow(IndexPath.self, a[3]))\n            }"
  },
  {
    "A_name" : "didEndDisplayingCell",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 247, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 248, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didEndDisplaying:forItemAt:)))\n            .map { a in\n                return (try castOrThrow(UICollectionViewCell.self, a[1]), try castOrThrow(IndexPath.self, a[2]))\n            }"
  },
  {
    "A_name" : "didEndDisplayingSupplementaryView",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 257, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 258, Column: 9",
    "H_initialValue" : "self.delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)))\n            .map { a in\n                return (try castOrThrow(UICollectionReusableView.self, a[1]),\n                        try castOrThrow(String.self, a[2]),\n                        try castOrThrow(IndexPath.self, a[3]))\n            }"
  },
  {
    "A_name" : "modelSelected",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 277, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 278, Column: 9",
        "H_initialValue" : "itemSelected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
      }
    ],
    "I_parameterType" : [
      "T.Type"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> ControlEvent<T>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 278, Column: 9",
    "H_initialValue" : "itemSelected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
  },
  {
    "A_name" : "modelDeselected",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 298, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 299, Column: 9",
        "H_initialValue" : "itemDeselected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
      }
    ],
    "I_parameterType" : [
      "T.Type"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> ControlEvent<T>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 299, Column: 9",
    "H_initialValue" : "itemDeselected.flatMap { [weak view = self.base as UICollectionView] indexPath -> Observable<T> in\n            guard let view = view else {\n                return Observable.empty()\n            }\n\n            return Observable.just(try view.rx.model(at: indexPath))\n        }"
  },
  {
    "A_name" : "model",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 311, Column: 5",
    "G_members" : [
      {
        "A_name" : "dataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 312, Column: 9",
        "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.itemsWith*` methods was used.\")"
      },
      {
        "A_name" : "element",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 314, Column: 9",
        "H_initialValue" : "try dataSource.model(at: indexPath)"
      }
    ],
    "I_parameterType" : [
      "IndexPath"
    ],
    "I_parameters" : [
      "at"
    ],
    "J_returnType" : "-> T"
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 312, Column: 9",
    "H_initialValue" : "castOrFatalError(self.dataSource.forwardToDelegate(), message: \"This method only works in case one of the `rx.itemsWith*` methods was used.\")"
  },
  {
    "A_name" : "element",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 314, Column: 9",
    "H_initialValue" : "try dataSource.model(at: indexPath)"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "available"
    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 320, Column: 1",
    "G_members" : [
      {
        "A_name" : "prefetchDataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 326, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "setPrefetchDataSource",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 339, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UICollectionViewDataSourcePrefetching"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "prefetchItems",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 345, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "cancelPrefetchingForItems",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 351, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "prefetchDataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 326, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "setPrefetchDataSource",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 339, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UICollectionViewDataSourcePrefetching"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "prefetchItems",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 345, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 346, Column: 9",
    "H_initialValue" : "RxCollectionViewDataSourcePrefetchingProxy.proxy(for: base).prefetchItemsPublishSubject"
  },
  {
    "A_name" : "cancelPrefetchingForItems",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 351, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 352, Column: 9",
    "H_initialValue" : "prefetchDataSource.methodInvoked(#selector(UICollectionViewDataSourcePrefetching.collectionView(_:cancelPrefetchingForItemsAt:)))\n            .map { a in\n                return try castOrThrow(Array<IndexPath>.self, a[1])\n        }"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 365, Column: 1",
    "G_members" : [
      {
        "A_name" : "didUpdateFocusInContextWithAnimationCoordinator",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UICollectionView+Rx.swift - Line: 368, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "didUpdateFocusInContextWithAnimationCoordinator",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 368, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 370, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UICollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)))\n            .map { a -> (context: UICollectionViewFocusUpdateContext, animationCoordinator: UIFocusAnimationCoordinator) in\n                let context = try castOrThrow(UICollectionViewFocusUpdateContext.self, a[1])\n                let animationCoordinator = try castOrThrow(UIFocusAnimationCoordinator.self, a[2])\n                return (context: context, animationCoordinator: animationCoordinator)\n            }"
  },
  {
    "A_name" : "context",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 372, Column: 17",
    "H_initialValue" : "try castOrThrow(UICollectionViewFocusUpdateContext.self, a[1])"
  },
  {
    "A_name" : "animationCoordinator",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UICollectionView+Rx.swift - Line: 373, Column: 17",
    "H_initialValue" : "try castOrThrow(UIFocusAnimationCoordinator.self, a[2])"
  }
]