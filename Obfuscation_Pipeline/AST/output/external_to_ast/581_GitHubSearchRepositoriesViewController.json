[
  {
    "A_name" : "UIScrollView",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 13, Column: 1",
    "G_members" : [
      {
        "A_name" : "isNearBottomEdge",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 14, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "CGFloat"
        ],
        "I_parameters" : [
          "edgeOffset"
        ],
        "J_returnType" : "-> Bool"
      }
    ]
  },
  {
    "A_name" : "isNearBottomEdge",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 14, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "CGFloat"
    ],
    "I_parameters" : [
      "edgeOffset"
    ],
    "J_returnType" : "-> Bool"
  },
  {
    "A_name" : "GitHubSearchRepositoriesViewController",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ViewController",
      "UITableViewDelegate"
    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 19, Column: 1",
    "G_members" : [
      {
        "A_name" : "startLoadingOffset",
        "B_kind" : "variable",
        "C_accessLevel" : "static",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 20, Column: 5",
        "H_initialValue" : "20.0"
      },
      {
        "A_name" : "tableView",
        "B_kind" : "variable",
        "C_accessLevel" : "weak",
        "D_attributes" : [
          "IBOutlet",
          "weak"
        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 22, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "searchBar",
        "B_kind" : "variable",
        "C_accessLevel" : "weak",
        "D_attributes" : [
          "IBOutlet",
          "weak"
        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 23, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "dataSource",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 25, Column: 5",
        "H_initialValue" : "RxTableViewSectionedReloadDataSource<SectionModel<String, Repository>>(\n        configureCell: { (_, tv, ip, repository: Repository) in\n            let cell = tv.dequeueReusableCell(withIdentifier: \"Cell\")!\n            cell.textLabel?.text = repository.name\n            cell.detailTextLabel?.text = repository.url.absoluteString\n            return cell\n        },\n        titleForHeaderInSection: { dataSource, sectionIndex in\n            let section = dataSource[sectionIndex]\n            return section.items.count > 0 ? \"Repositories (\\(section.items.count))\" : \"No repositories found\"\n        }\n    )"
      },
      {
        "A_name" : "viewDidLoad",
        "B_kind" : "function",
        "C_accessLevel" : "override",
        "D_attributes" : [
          "override"
        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 38, Column: 5",
        "G_members" : [
          {
            "A_name" : "tableView",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 41, Column: 9",
            "H_initialValue" : "self.tableView"
          },
          {
            "A_name" : "loadNextPageTrigger",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 42, Column: 9",
            "H_initialValue" : "{ state in\n            tableView.rx.contentOffset.asDriver()\n                .withLatestFrom(state)\n                .flatMap { state in\n                    return tableView.isNearBottomEdge(edgeOffset: 20.0) && !state.shouldLoadNextPage\n                        ? Signal.just(())\n                        : Signal.empty()\n                }\n        }"
          },
          {
            "A_name" : "activityIndicator",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 52, Column: 9",
            "H_initialValue" : "ActivityIndicator()"
          },
          {
            "A_name" : "searchBar",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 54, Column: 9",
            "H_initialValue" : "self.searchBar"
          },
          {
            "A_name" : "state",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 56, Column: 9",
            "H_initialValue" : "githubSearchRepositories(\n            searchText: searchBar.rx.text.orEmpty.changed.asSignal().throttle(.milliseconds(300)),\n            loadNextPageTrigger: loadNextPageTrigger,\n            performSearch: { URL in\n                GitHubSearchRepositoriesAPI.sharedAPI.loadSearchURL(URL)\n                    .trackActivity(activityIndicator)\n            })"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "tableView",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 123, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "UITableView",
          "Int"
        ],
        "I_parameters" : [
          "_",
          "heightForHeaderInSection"
        ],
        "J_returnType" : "-> CGFloat"
      }
    ]
  },
  {
    "A_name" : "startLoadingOffset",
    "B_kind" : "variable",
    "C_accessLevel" : "static",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 20, Column: 5",
    "H_initialValue" : "20.0"
  },
  {
    "A_name" : "tableView",
    "B_kind" : "variable",
    "C_accessLevel" : "weak",
    "D_attributes" : [
      "IBOutlet",
      "weak"
    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 22, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "searchBar",
    "B_kind" : "variable",
    "C_accessLevel" : "weak",
    "D_attributes" : [
      "IBOutlet",
      "weak"
    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 23, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "dataSource",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 25, Column: 5",
    "H_initialValue" : "RxTableViewSectionedReloadDataSource<SectionModel<String, Repository>>(\n        configureCell: { (_, tv, ip, repository: Repository) in\n            let cell = tv.dequeueReusableCell(withIdentifier: \"Cell\")!\n            cell.textLabel?.text = repository.name\n            cell.detailTextLabel?.text = repository.url.absoluteString\n            return cell\n        },\n        titleForHeaderInSection: { dataSource, sectionIndex in\n            let section = dataSource[sectionIndex]\n            return section.items.count > 0 ? \"Repositories (\\(section.items.count))\" : \"No repositories found\"\n        }\n    )"
  },
  {
    "A_name" : "cell",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 27, Column: 13",
    "H_initialValue" : "tv.dequeueReusableCell(withIdentifier: \"Cell\")!"
  },
  {
    "A_name" : "section",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 33, Column: 13",
    "H_initialValue" : "dataSource[sectionIndex]"
  },
  {
    "A_name" : "viewDidLoad",
    "B_kind" : "function",
    "C_accessLevel" : "override",
    "D_attributes" : [
      "override"
    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 38, Column: 5",
    "G_members" : [
      {
        "A_name" : "tableView",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 41, Column: 9",
        "H_initialValue" : "self.tableView"
      },
      {
        "A_name" : "loadNextPageTrigger",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 42, Column: 9",
        "H_initialValue" : "{ state in\n            tableView.rx.contentOffset.asDriver()\n                .withLatestFrom(state)\n                .flatMap { state in\n                    return tableView.isNearBottomEdge(edgeOffset: 20.0) && !state.shouldLoadNextPage\n                        ? Signal.just(())\n                        : Signal.empty()\n                }\n        }"
      },
      {
        "A_name" : "activityIndicator",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 52, Column: 9",
        "H_initialValue" : "ActivityIndicator()"
      },
      {
        "A_name" : "searchBar",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 54, Column: 9",
        "H_initialValue" : "self.searchBar"
      },
      {
        "A_name" : "state",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 56, Column: 9",
        "H_initialValue" : "githubSearchRepositories(\n            searchText: searchBar.rx.text.orEmpty.changed.asSignal().throttle(.milliseconds(300)),\n            loadNextPageTrigger: loadNextPageTrigger,\n            performSearch: { URL in\n                GitHubSearchRepositoriesAPI.sharedAPI.loadSearchURL(URL)\n                    .trackActivity(activityIndicator)\n            })"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "tableView",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 41, Column: 9",
    "H_initialValue" : "self.tableView"
  },
  {
    "A_name" : "loadNextPageTrigger",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 42, Column: 9",
    "H_initialValue" : "{ state in\n            tableView.rx.contentOffset.asDriver()\n                .withLatestFrom(state)\n                .flatMap { state in\n                    return tableView.isNearBottomEdge(edgeOffset: 20.0) && !state.shouldLoadNextPage\n                        ? Signal.just(())\n                        : Signal.empty()\n                }\n        }"
  },
  {
    "A_name" : "activityIndicator",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 52, Column: 9",
    "H_initialValue" : "ActivityIndicator()"
  },
  {
    "A_name" : "searchBar",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 54, Column: 9",
    "H_initialValue" : "self.searchBar"
  },
  {
    "A_name" : "state",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 56, Column: 9",
    "H_initialValue" : "githubSearchRepositories(\n            searchText: searchBar.rx.text.orEmpty.changed.asSignal().throttle(.milliseconds(300)),\n            loadNextPageTrigger: loadNextPageTrigger,\n            performSearch: { URL in\n                GitHubSearchRepositoriesAPI.sharedAPI.loadSearchURL(URL)\n                    .trackActivity(activityIndicator)\n            })"
  },
  {
    "A_name" : "message",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 89, Column: 17",
    "H_initialValue" : "\"Exceeded limit of 10 non authenticated requests per minute for GitHub API. Please wait a minute. :(\\nhttps:\/\/developer.github.com\/v3\/#rate-limiting\""
  },
  {
    "A_name" : "alert",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 94, Column: 17",
    "H_initialValue" : "NSAlert()"
  },
  {
    "A_name" : "tableView",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "GitHubSearchRepositoriesViewController.swift - Line: 123, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "UITableView",
      "Int"
    ],
    "I_parameters" : [
      "_",
      "heightForHeaderInSection"
    ],
    "J_returnType" : "-> CGFloat"
  }
]