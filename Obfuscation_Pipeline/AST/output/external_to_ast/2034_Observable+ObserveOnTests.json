[
  {
    "A_name" : "ObservableObserveOnTestBase",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 15, Column: 1",
    "G_members" : [
      {
        "A_name" : "lock",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 16, Column: 5",
        "H_initialValue" : "NSLock()"
      },
      {
        "A_name" : "performLocked",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 18, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "() -> Void"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "tearDown",
        "B_kind" : "function",
        "C_accessLevel" : "override",
        "D_attributes" : [
          "override"
        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 24, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "lock",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 16, Column: 5",
    "H_initialValue" : "NSLock()"
  },
  {
    "A_name" : "performLocked",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 18, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "() -> Void"
    ],
    "I_parameters" : [
      "_"
    ]
  },
  {
    "A_name" : "tearDown",
    "B_kind" : "function",
    "C_accessLevel" : "override",
    "D_attributes" : [
      "override"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 24, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "ObservableObserveOnTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ObservableObserveOnTestBase"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 29, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservableObserveOnTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 33, Column: 1",
    "G_members" : [
      {
        "A_name" : "runDispatchQueueSchedulerTests",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 35, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 36, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
          }
        ],
        "I_parameterType" : [
          "(SerialDispatchQueueScheduler) -> Disposable"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "runDispatchQueueSchedulerTests",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 40, Column: 5",
        "G_members" : [
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 42, Column: 9",
            "H_initialValue" : "tests(scheduler)"
          },
          {
            "A_name" : "expectation",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 43, Column: 9",
            "H_initialValue" : "self.expectation(description: \"Wait for all tests to complete\")"
          }
        ],
        "I_parameterType" : [
          "SerialDispatchQueueScheduler",
          "(SerialDispatchQueueScheduler) -> Disposable"
        ],
        "I_parameters" : [
          "_",
          "tests"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "runDispatchQueueSchedulerMultiplexedTests",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 57, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 58, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
          },
          {
            "A_name" : "compositeDisposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 60, Column: 9",
            "H_initialValue" : "CompositeDisposable()"
          }
        ],
        "I_parameterType" : [
          "[(SerialDispatchQueueScheduler) -> Disposable]"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_DoesPerformWorkOnQueue",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 71, Column: 5",
        "G_members" : [
          {
            "A_name" : "unitTestsThread",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 72, Column: 9",
            "H_initialValue" : "Thread.current"
          },
          {
            "A_name" : "didExecute",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 74, Column: 9",
            "H_initialValue" : "false"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_DeadlockErrorImmediately",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 124, Column: 5",
        "G_members" : [
          {
            "A_name" : "nEvents",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 125, Column: 9",
            "H_initialValue" : "0"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_DeadlockEmpty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 137, Column: 5",
        "G_members" : [
          {
            "A_name" : "nEvents",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 138, Column: 9",
            "H_initialValue" : "0"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_Never",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 151, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_Simple",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 162, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 163, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 164, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 205, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 206, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 207, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 226, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 227, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 228, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOnDispatchQueue_Dispose",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 269, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 270, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 271, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 272, Column: 9",
            "H_initialValue" : ""
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "runDispatchQueueSchedulerTests",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 35, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 36, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
      }
    ],
    "I_parameterType" : [
      "(SerialDispatchQueueScheduler) -> Disposable"
    ],
    "I_parameters" : [
      "_"
    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 36, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
  },
  {
    "A_name" : "runDispatchQueueSchedulerTests",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 40, Column: 5",
    "G_members" : [
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 42, Column: 9",
        "H_initialValue" : "tests(scheduler)"
      },
      {
        "A_name" : "expectation",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 43, Column: 9",
        "H_initialValue" : "self.expectation(description: \"Wait for all tests to complete\")"
      }
    ],
    "I_parameterType" : [
      "SerialDispatchQueueScheduler",
      "(SerialDispatchQueueScheduler) -> Disposable"
    ],
    "I_parameters" : [
      "_",
      "tests"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 42, Column: 9",
    "H_initialValue" : "tests(scheduler)"
  },
  {
    "A_name" : "expectation",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 43, Column: 9",
    "H_initialValue" : "self.expectation(description: \"Wait for all tests to complete\")"
  },
  {
    "A_name" : "runDispatchQueueSchedulerMultiplexedTests",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 57, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 58, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
      },
      {
        "A_name" : "compositeDisposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 60, Column: 9",
        "H_initialValue" : "CompositeDisposable()"
      }
    ],
    "I_parameterType" : [
      "[(SerialDispatchQueueScheduler) -> Disposable]"
    ],
    "I_parameters" : [
      "_"
    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 58, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(internalSerialQueueName: \"testQueue1\")"
  },
  {
    "A_name" : "compositeDisposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 60, Column: 9",
    "H_initialValue" : "CompositeDisposable()"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_DoesPerformWorkOnQueue",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 71, Column: 5",
    "G_members" : [
      {
        "A_name" : "unitTestsThread",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 72, Column: 9",
        "H_initialValue" : "Thread.current"
      },
      {
        "A_name" : "didExecute",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 74, Column: 9",
        "H_initialValue" : "false"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "unitTestsThread",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 72, Column: 9",
    "H_initialValue" : "Thread.current"
  },
  {
    "A_name" : "didExecute",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 74, Column: 9",
    "H_initialValue" : "false"
  },
  {
    "A_name" : "observable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 77, Column: 13",
    "H_initialValue" : "Observable.just(0)\n                .observe(on:scheduler)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_EnsureCorrectImplementationIsChosen",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 89, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "a",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 92, Column: 17",
    "H_initialValue" : "Observable.just(0)\n                .observe(on:scheduler)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_DispatchQueueSchedulerIsSerial",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 102, Column: 9",
    "G_members" : [
      {
        "A_name" : "numberOfConcurrentEvents",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 103, Column: 13",
        "H_initialValue" : "AtomicInt(0)"
      },
      {
        "A_name" : "numberOfExecutions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 104, Column: 13",
        "H_initialValue" : "AtomicInt(0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "numberOfConcurrentEvents",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 103, Column: 13",
    "H_initialValue" : "AtomicInt(0)"
  },
  {
    "A_name" : "numberOfExecutions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 104, Column: 13",
    "H_initialValue" : "AtomicInt(0)"
  },
  {
    "A_name" : "action",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 107, Column: 17",
    "H_initialValue" : "{ (s: Void) -> Disposable in\n                    XCTAssertEqual(increment(numberOfConcurrentEvents), 0)\n                    self.sleep(0.1) \/\/ should be enough to block the queue, so if it's concurrent, it will fail\n                    XCTAssertEqual(decrement(numberOfConcurrentEvents), 1)\n                    increment(numberOfExecutions)\n                    return Disposables.create()\n                }"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_DeadlockErrorImmediately",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 124, Column: 5",
    "G_members" : [
      {
        "A_name" : "nEvents",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 125, Column: 9",
        "H_initialValue" : "0"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "nEvents",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 125, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "observable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 128, Column: 13",
    "H_initialValue" : "Observable.error(testError).observe(on:scheduler)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_DeadlockEmpty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 137, Column: 5",
    "G_members" : [
      {
        "A_name" : "nEvents",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 138, Column: 9",
        "H_initialValue" : "0"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "nEvents",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 138, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "observable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 141, Column: 13",
    "H_initialValue" : "Observable.empty().observe(on:scheduler)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_Never",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 151, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 153, Column: 13",
    "H_initialValue" : "Observable.never()"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_Simple",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 162, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 163, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 164, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 163, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 164, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 168, Column: 17",
    "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 205, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 206, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 207, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 206, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 207, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 211, Column: 17",
    "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 226, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 227, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 228, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 227, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 228, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 232, Column: 17",
    "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
  },
  {
    "A_name" : "testObserveOnDispatchQueue_Dispose",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 269, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 270, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 271, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 272, Column: 9",
        "H_initialValue" : ""
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 270, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 271, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 272, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "testObserveOnSerialReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 306, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testObserveOnSerialReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 310, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "ObservableObserveOnTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 320, Column: 1",
    "G_members" : [
      {
        "A_name" : "testDisposeWithEnqueuedElement",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 321, Column: 5",
        "G_members" : [
          {
            "A_name" : "emit",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 322, Column: 9",
            "H_initialValue" : "PublishSubject<Int>()"
          },
          {
            "A_name" : "blockingTheSerialScheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 323, Column: 9",
            "H_initialValue" : "self.expectation(description: \"blocking\")"
          },
          {
            "A_name" : "unblock",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 324, Column: 9",
            "H_initialValue" : "self.expectation(description: \"unblock\")"
          },
          {
            "A_name" : "testDone",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 325, Column: 9",
            "H_initialValue" : "self.expectation(description: \"test done\")"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 326, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
          },
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 327, Column: 9",
            "H_initialValue" : "[]"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 328, Column: 9",
            "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testDisposeWithEnqueuedError",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 353, Column: 5",
        "G_members" : [
          {
            "A_name" : "emit",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 354, Column: 9",
            "H_initialValue" : "PublishSubject<Int>()"
          },
          {
            "A_name" : "blockingTheSerialScheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 355, Column: 9",
            "H_initialValue" : "self.expectation(description: \"blocking\")"
          },
          {
            "A_name" : "unblock",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 356, Column: 9",
            "H_initialValue" : "self.expectation(description: \"unblock\")"
          },
          {
            "A_name" : "testDone",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 357, Column: 9",
            "H_initialValue" : "self.expectation(description: \"test done\")"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 358, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
          },
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 359, Column: 9",
            "H_initialValue" : "[]"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 360, Column: 9",
            "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testDisposeWithEnqueuedCompleted",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 385, Column: 5",
        "G_members" : [
          {
            "A_name" : "emit",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 386, Column: 9",
            "H_initialValue" : "PublishSubject<Int>()"
          },
          {
            "A_name" : "blockingTheSerialScheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 387, Column: 9",
            "H_initialValue" : "self.expectation(description: \"blocking\")"
          },
          {
            "A_name" : "unblock",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 388, Column: 9",
            "H_initialValue" : "self.expectation(description: \"unblock\")"
          },
          {
            "A_name" : "testDone",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 389, Column: 9",
            "H_initialValue" : "self.expectation(description: \"test done\")"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 390, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
          },
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 391, Column: 9",
            "H_initialValue" : "[]"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 392, Column: 9",
            "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testDisposeWithEnqueuedElement",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 321, Column: 5",
    "G_members" : [
      {
        "A_name" : "emit",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 322, Column: 9",
        "H_initialValue" : "PublishSubject<Int>()"
      },
      {
        "A_name" : "blockingTheSerialScheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 323, Column: 9",
        "H_initialValue" : "self.expectation(description: \"blocking\")"
      },
      {
        "A_name" : "unblock",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 324, Column: 9",
        "H_initialValue" : "self.expectation(description: \"unblock\")"
      },
      {
        "A_name" : "testDone",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 325, Column: 9",
        "H_initialValue" : "self.expectation(description: \"test done\")"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 326, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
      },
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 327, Column: 9",
        "H_initialValue" : "[]"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 328, Column: 9",
        "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "emit",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 322, Column: 9",
    "H_initialValue" : "PublishSubject<Int>()"
  },
  {
    "A_name" : "blockingTheSerialScheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 323, Column: 9",
    "H_initialValue" : "self.expectation(description: \"blocking\")"
  },
  {
    "A_name" : "unblock",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 324, Column: 9",
    "H_initialValue" : "self.expectation(description: \"unblock\")"
  },
  {
    "A_name" : "testDone",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 325, Column: 9",
    "H_initialValue" : "self.expectation(description: \"test done\")"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 326, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 327, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 328, Column: 9",
    "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
  },
  {
    "A_name" : "testDisposeWithEnqueuedError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 353, Column: 5",
    "G_members" : [
      {
        "A_name" : "emit",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 354, Column: 9",
        "H_initialValue" : "PublishSubject<Int>()"
      },
      {
        "A_name" : "blockingTheSerialScheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 355, Column: 9",
        "H_initialValue" : "self.expectation(description: \"blocking\")"
      },
      {
        "A_name" : "unblock",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 356, Column: 9",
        "H_initialValue" : "self.expectation(description: \"unblock\")"
      },
      {
        "A_name" : "testDone",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 357, Column: 9",
        "H_initialValue" : "self.expectation(description: \"test done\")"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 358, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
      },
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 359, Column: 9",
        "H_initialValue" : "[]"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 360, Column: 9",
        "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "emit",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 354, Column: 9",
    "H_initialValue" : "PublishSubject<Int>()"
  },
  {
    "A_name" : "blockingTheSerialScheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 355, Column: 9",
    "H_initialValue" : "self.expectation(description: \"blocking\")"
  },
  {
    "A_name" : "unblock",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 356, Column: 9",
    "H_initialValue" : "self.expectation(description: \"unblock\")"
  },
  {
    "A_name" : "testDone",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 357, Column: 9",
    "H_initialValue" : "self.expectation(description: \"test done\")"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 358, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 359, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 360, Column: 9",
    "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
  },
  {
    "A_name" : "testDisposeWithEnqueuedCompleted",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 385, Column: 5",
    "G_members" : [
      {
        "A_name" : "emit",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 386, Column: 9",
        "H_initialValue" : "PublishSubject<Int>()"
      },
      {
        "A_name" : "blockingTheSerialScheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 387, Column: 9",
        "H_initialValue" : "self.expectation(description: \"blocking\")"
      },
      {
        "A_name" : "unblock",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 388, Column: 9",
        "H_initialValue" : "self.expectation(description: \"unblock\")"
      },
      {
        "A_name" : "testDone",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 389, Column: 9",
        "H_initialValue" : "self.expectation(description: \"test done\")"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 390, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
      },
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 391, Column: 9",
        "H_initialValue" : "[]"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 392, Column: 9",
        "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "emit",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 386, Column: 9",
    "H_initialValue" : "PublishSubject<Int>()"
  },
  {
    "A_name" : "blockingTheSerialScheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 387, Column: 9",
    "H_initialValue" : "self.expectation(description: \"blocking\")"
  },
  {
    "A_name" : "unblock",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 388, Column: 9",
    "H_initialValue" : "self.expectation(description: \"unblock\")"
  },
  {
    "A_name" : "testDone",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 389, Column: 9",
    "H_initialValue" : "self.expectation(description: \"test done\")"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 390, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 391, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 392, Column: 9",
    "H_initialValue" : "emit.observe(on:scheduler).subscribe { update in\n            switch update {\n            case .next(let value):\n                if value == 0 {\n                    blockingTheSerialScheduler.fulfill()\n                    self.wait(for: [unblock], timeout: 1.0)\n                }\n            default:\n                break\n            }\n            events.append(update)\n        }"
  },
  {
    "A_name" : "ObservableObserveOnTestConcurrentSchedulerTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ObservableObserveOnTestBase"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 420, Column: 1",
    "G_members" : [
      {
        "A_name" : "createScheduler",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 422, Column: 5",
        "G_members" : [
          {
            "A_name" : "operationQueue",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 423, Column: 9",
            "H_initialValue" : "OperationQueue()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> ImmediateSchedulerType"
      },
      {
        "A_name" : "testObserveOn_EnsureTestsAreExecutedWithRealConcurrentScheduler",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 439, Column: 5",
        "G_members" : [
          {
            "A_name" : "events",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 440, Column: 9",
            "H_initialValue" : "[]"
          },
          {
            "A_name" : "stop",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 442, Column: 9",
            "H_initialValue" : "BehaviorSubject(value: 0)"
          },
          {
            "A_name" : "condition",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 453, Column: 9",
            "H_initialValue" : "NSCondition()"
          },
          {
            "A_name" : "writtenStarted",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 455, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "writtenEnded",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 456, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "concurrent",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 458, Column: 9",
            "H_initialValue" : "{ () -> Disposable in\n            self.performLocked {\n                events.append(\"Started\")\n            }\n\n            condition.lock()\n            writtenStarted += 1\n            condition.signal()\n            while writtenStarted < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            self.performLocked {\n                events.append(\"Ended\")\n            }\n\n            condition.lock()\n            writtenEnded += 1\n            condition.signal()\n            while writtenEnded < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            stop.on(.completed)\n\n            return Disposables.create()\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_Never",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 497, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 498, Column: 9",
            "H_initialValue" : "createScheduler()"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 500, Column: 9",
            "H_initialValue" : "Observable.never()"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 501, Column: 9",
            "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .subscribe(onNext: { _ in\n                XCTAssert(false)\n            })"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_Simple",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 512, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 513, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 514, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 516, Column: 9",
            "H_initialValue" : "createScheduler()"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 518, Column: 9",
            "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 555, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 556, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 557, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 559, Column: 9",
            "H_initialValue" : "createScheduler()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_ConcurrentSchedulerIsSerialized",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 574, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 575, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 576, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "executed",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 578, Column: 9",
            "H_initialValue" : "false"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 580, Column: 9",
            "H_initialValue" : "createScheduler()"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 582, Column: 9",
            "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .map { v -> Int in\n                if v == 0 {\n                    self.sleep(0.1) \/\/ 100 ms is enough\n                    executed = true\n                }\n                return v\n        }"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 591, Column: 9",
            "H_initialValue" : "res.subscribe(observer)"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 612, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 613, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 614, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 616, Column: 9",
            "H_initialValue" : "createScheduler()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testObserveOn_Dispose",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 653, Column: 5",
        "G_members" : [
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 654, Column: 9",
            "H_initialValue" : "PrimitiveHotObservable<Int>()"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 655, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int>()"
          },
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 657, Column: 9",
            "H_initialValue" : "createScheduler()"
          },
          {
            "A_name" : "subscription",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ObserveOnTests.swift - Line: 658, Column: 9",
            "H_initialValue" : "xs.observe(on:scheduler).subscribe(observer)"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "createScheduler",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 422, Column: 5",
    "G_members" : [
      {
        "A_name" : "operationQueue",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 423, Column: 9",
        "H_initialValue" : "OperationQueue()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> ImmediateSchedulerType"
  },
  {
    "A_name" : "operationQueue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 423, Column: 9",
    "H_initialValue" : "OperationQueue()"
  },
  {
    "A_name" : "testObserveOn_EnsureCorrectImplementationIsChosen",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 429, Column: 9",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 430, Column: 13",
        "H_initialValue" : "self.createScheduler()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 430, Column: 13",
    "H_initialValue" : "self.createScheduler()"
  },
  {
    "A_name" : "testObserveOn_EnsureTestsAreExecutedWithRealConcurrentScheduler",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 439, Column: 5",
    "G_members" : [
      {
        "A_name" : "events",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 440, Column: 9",
        "H_initialValue" : "[]"
      },
      {
        "A_name" : "stop",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 442, Column: 9",
        "H_initialValue" : "BehaviorSubject(value: 0)"
      },
      {
        "A_name" : "condition",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 453, Column: 9",
        "H_initialValue" : "NSCondition()"
      },
      {
        "A_name" : "writtenStarted",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 455, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "writtenEnded",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 456, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "concurrent",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 458, Column: 9",
        "H_initialValue" : "{ () -> Disposable in\n            self.performLocked {\n                events.append(\"Started\")\n            }\n\n            condition.lock()\n            writtenStarted += 1\n            condition.signal()\n            while writtenStarted < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            self.performLocked {\n                events.append(\"Ended\")\n            }\n\n            condition.lock()\n            writtenEnded += 1\n            condition.signal()\n            while writtenEnded < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            stop.on(.completed)\n\n            return Disposables.create()\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "events",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 440, Column: 9",
    "H_initialValue" : "[]"
  },
  {
    "A_name" : "stop",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 442, Column: 9",
    "H_initialValue" : "BehaviorSubject(value: 0)"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 448, Column: 9",
    "H_initialValue" : "ConcurrentDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 450, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "condition",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 453, Column: 9",
    "H_initialValue" : "NSCondition()"
  },
  {
    "A_name" : "writtenStarted",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 455, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "writtenEnded",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 456, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "concurrent",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 458, Column: 9",
    "H_initialValue" : "{ () -> Disposable in\n            self.performLocked {\n                events.append(\"Started\")\n            }\n\n            condition.lock()\n            writtenStarted += 1\n            condition.signal()\n            while writtenStarted < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            self.performLocked {\n                events.append(\"Ended\")\n            }\n\n            condition.lock()\n            writtenEnded += 1\n            condition.signal()\n            while writtenEnded < 2 {\n                condition.wait()\n            }\n            condition.unlock()\n\n            stop.on(.completed)\n\n            return Disposables.create()\n        }"
  },
  {
    "A_name" : "testObserveOn_Never",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 497, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 498, Column: 9",
        "H_initialValue" : "createScheduler()"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 500, Column: 9",
        "H_initialValue" : "Observable.never()"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 501, Column: 9",
        "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .subscribe(onNext: { _ in\n                XCTAssert(false)\n            })"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 498, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 500, Column: 9",
    "H_initialValue" : "Observable.never()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 501, Column: 9",
    "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .subscribe(onNext: { _ in\n                XCTAssert(false)\n            })"
  },
  {
    "A_name" : "testObserveOn_Simple",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 512, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 513, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 514, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 516, Column: 9",
        "H_initialValue" : "createScheduler()"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 518, Column: 9",
        "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 513, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 514, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 516, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 518, Column: 9",
    "H_initialValue" : "(xs.observe(on:scheduler)).subscribe(observer)"
  },
  {
    "A_name" : "testObserveOn_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 555, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 556, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 557, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 559, Column: 9",
        "H_initialValue" : "createScheduler()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 556, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 557, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 559, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "testObserveOn_ConcurrentSchedulerIsSerialized",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 574, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 575, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 576, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "executed",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 578, Column: 9",
        "H_initialValue" : "false"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 580, Column: 9",
        "H_initialValue" : "createScheduler()"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 582, Column: 9",
        "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .map { v -> Int in\n                if v == 0 {\n                    self.sleep(0.1) \/\/ 100 ms is enough\n                    executed = true\n                }\n                return v\n        }"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 591, Column: 9",
        "H_initialValue" : "res.subscribe(observer)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 575, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 576, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "executed",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 578, Column: 9",
    "H_initialValue" : "false"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 580, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 582, Column: 9",
    "H_initialValue" : "xs\n            .observe(on:scheduler)\n            .map { v -> Int in\n                if v == 0 {\n                    self.sleep(0.1) \/\/ 100 ms is enough\n                    executed = true\n                }\n                return v\n        }"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 591, Column: 9",
    "H_initialValue" : "res.subscribe(observer)"
  },
  {
    "A_name" : "testObserveOn_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 612, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 613, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 614, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 616, Column: 9",
        "H_initialValue" : "createScheduler()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 613, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 614, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 616, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "testObserveOn_Dispose",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 653, Column: 5",
    "G_members" : [
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 654, Column: 9",
        "H_initialValue" : "PrimitiveHotObservable<Int>()"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 655, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int>()"
      },
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 657, Column: 9",
        "H_initialValue" : "createScheduler()"
      },
      {
        "A_name" : "subscription",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 658, Column: 9",
        "H_initialValue" : "xs.observe(on:scheduler).subscribe(observer)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 654, Column: 9",
    "H_initialValue" : "PrimitiveHotObservable<Int>()"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 655, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int>()"
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 657, Column: 9",
    "H_initialValue" : "createScheduler()"
  },
  {
    "A_name" : "subscription",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 658, Column: 9",
    "H_initialValue" : "xs.observe(on:scheduler).subscribe(observer)"
  },
  {
    "A_name" : "testObserveOnReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 683, Column: 9",
    "G_members" : [
      {
        "A_name" : "testScheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 684, Column: 13",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testScheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 684, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "testObserveOnReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 689, Column: 9",
    "G_members" : [
      {
        "A_name" : "testScheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 690, Column: 13",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testScheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 690, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "ObservableObserveOnTestConcurrentSchedulerTest2",
    "B_kind" : "class",
    "C_accessLevel" : "final",
    "D_attributes" : [
      "final"
    ],
    "E_adoptedClassProtocols" : [
      "ObservableObserveOnTestConcurrentSchedulerTest"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 697, Column: 1",
    "G_members" : [
      {
        "A_name" : "createScheduler",
        "B_kind" : "function",
        "C_accessLevel" : "override",
        "D_attributes" : [
          "override"
        ],
        "F_location" : "Observable+ObserveOnTests.swift - Line: 698, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> ImmediateSchedulerType"
      }
    ]
  },
  {
    "A_name" : "createScheduler",
    "B_kind" : "function",
    "C_accessLevel" : "override",
    "D_attributes" : [
      "override"
    ],
    "F_location" : "Observable+ObserveOnTests.swift - Line: 698, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> ImmediateSchedulerType"
  }
]