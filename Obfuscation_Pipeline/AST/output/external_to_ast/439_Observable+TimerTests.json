[
  {
    "A_name" : "ObservableTimerTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+TimerTests.swift - Line: 15, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservableTimerTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 18, Column: 1",
    "G_members" : [
      {
        "A_name" : "testTimer_Basic",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 19, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 20, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 22, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable<Int>.timer(.seconds(100), scheduler: scheduler)\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 26, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(300, 0),\n            .completed(300)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testTimer_Basic",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 19, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 20, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 22, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable<Int>.timer(.seconds(100), scheduler: scheduler)\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 26, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(300, 0),\n            .completed(300)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 20, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 22, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable<Int>.timer(.seconds(100), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 26, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(300, 0),\n            .completed(300)\n        )"
  },
  {
    "A_name" : "testTimerReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 36, Column: 9",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 37, Column: 13",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 37, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "ObservableTimerTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 46, Column: 1",
    "G_members" : [
      {
        "A_name" : "testInterval_TimeSpan_Basic",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 48, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 49, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 51, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(100), scheduler: scheduler)\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 55, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(300, 0 as Int64),\n            .next(400, 1),\n            .next(500, 2),\n            .next(600, 3),\n            .next(700, 4),\n            .next(800, 5),\n            .next(900, 6)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testInterval_TimeSpan_Zero",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 68, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 69, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 71, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 210) {\n            Observable<Int64>.interval(.seconds(0), scheduler: scheduler)\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 75, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(201, 0 as Int64),\n            .next(202, 1),\n            .next(203, 2),\n            .next(204, 3),\n            .next(205, 4),\n            .next(206, 5),\n            .next(207, 6),\n            .next(208, 7),\n            .next(209, 8)\n        )"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testInterval_TimeSpan_Zero_DefaultScheduler",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 90, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 91, Column: 9",
            "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 93, Column: 9",
            "H_initialValue" : "PrimitiveMockObserver<Int64>()"
          },
          {
            "A_name" : "expectCompleted",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 95, Column: 9",
            "H_initialValue" : "expectation(description: \"It will complete\")"
          },
          {
            "A_name" : "d",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 97, Column: 9",
            "H_initialValue" : "Observable<Int64>\n            .interval(.seconds(0), scheduler: scheduler)\n            .take(while: { $0 < 10 })\n            .subscribe(\n                onNext: { t in\n                    observer.on(.next(t))\n                },\n                onCompleted: {\n                    expectCompleted.fulfill()\n                }\n            )"
          },
          {
            "A_name" : "cleanResources",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 117, Column: 9",
            "H_initialValue" : "expectation(description: \"Clean resources\")"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testInterval_TimeSpan_Disposed",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 131, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 132, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 134, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(1000), scheduler: scheduler)\n        }"
          },
          {
            "A_name" : "correct",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 138, Column: 9",
            "H_initialValue" : "[\n\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_IntervalWithRealScheduler",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 146, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 147, Column: 9",
            "H_initialValue" : "ConcurrentDispatchQueueScheduler(qos: .default)"
          },
          {
            "A_name" : "start",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 149, Column: 9",
            "H_initialValue" : "Date()"
          },
          {
            "A_name" : "a",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 151, Column: 9",
            "H_initialValue" : "try! Observable<Int64>.interval(.seconds(1), scheduler: scheduler)\n            .take(2)\n            .toBlocking()\n            .toArray()"
          },
          {
            "A_name" : "end",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+TimerTests.swift - Line: 156, Column: 9",
            "H_initialValue" : "Date()"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testInterval_TimeSpan_Basic",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 48, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 49, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 51, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(100), scheduler: scheduler)\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 55, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(300, 0 as Int64),\n            .next(400, 1),\n            .next(500, 2),\n            .next(600, 3),\n            .next(700, 4),\n            .next(800, 5),\n            .next(900, 6)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 49, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 51, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(100), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 55, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(300, 0 as Int64),\n            .next(400, 1),\n            .next(500, 2),\n            .next(600, 3),\n            .next(700, 4),\n            .next(800, 5),\n            .next(900, 6)\n        )"
  },
  {
    "A_name" : "testInterval_TimeSpan_Zero",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 68, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 69, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 71, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 210) {\n            Observable<Int64>.interval(.seconds(0), scheduler: scheduler)\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 75, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(201, 0 as Int64),\n            .next(202, 1),\n            .next(203, 2),\n            .next(204, 3),\n            .next(205, 4),\n            .next(206, 5),\n            .next(207, 6),\n            .next(208, 7),\n            .next(209, 8)\n        )"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 69, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 71, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 210) {\n            Observable<Int64>.interval(.seconds(0), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 75, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(201, 0 as Int64),\n            .next(202, 1),\n            .next(203, 2),\n            .next(204, 3),\n            .next(205, 4),\n            .next(206, 5),\n            .next(207, 6),\n            .next(208, 7),\n            .next(209, 8)\n        )"
  },
  {
    "A_name" : "testInterval_TimeSpan_Zero_DefaultScheduler",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 90, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 91, Column: 9",
        "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 93, Column: 9",
        "H_initialValue" : "PrimitiveMockObserver<Int64>()"
      },
      {
        "A_name" : "expectCompleted",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 95, Column: 9",
        "H_initialValue" : "expectation(description: \"It will complete\")"
      },
      {
        "A_name" : "d",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 97, Column: 9",
        "H_initialValue" : "Observable<Int64>\n            .interval(.seconds(0), scheduler: scheduler)\n            .take(while: { $0 < 10 })\n            .subscribe(\n                onNext: { t in\n                    observer.on(.next(t))\n                },\n                onCompleted: {\n                    expectCompleted.fulfill()\n                }\n            )"
      },
      {
        "A_name" : "cleanResources",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 117, Column: 9",
        "H_initialValue" : "expectation(description: \"Clean resources\")"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 91, Column: 9",
    "H_initialValue" : "SerialDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 93, Column: 9",
    "H_initialValue" : "PrimitiveMockObserver<Int64>()"
  },
  {
    "A_name" : "expectCompleted",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 95, Column: 9",
    "H_initialValue" : "expectation(description: \"It will complete\")"
  },
  {
    "A_name" : "d",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 97, Column: 9",
    "H_initialValue" : "Observable<Int64>\n            .interval(.seconds(0), scheduler: scheduler)\n            .take(while: { $0 < 10 })\n            .subscribe(\n                onNext: { t in\n                    observer.on(.next(t))\n                },\n                onCompleted: {\n                    expectCompleted.fulfill()\n                }\n            )"
  },
  {
    "A_name" : "cleanResources",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 117, Column: 9",
    "H_initialValue" : "expectation(description: \"Clean resources\")"
  },
  {
    "A_name" : "testInterval_TimeSpan_Disposed",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 131, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 132, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 134, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(1000), scheduler: scheduler)\n        }"
      },
      {
        "A_name" : "correct",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 138, Column: 9",
        "H_initialValue" : "[\n\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 132, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 134, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable<Int64>.interval(.seconds(1000), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "correct",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 138, Column: 9",
    "H_initialValue" : "[\n\n        ]"
  },
  {
    "A_name" : "test_IntervalWithRealScheduler",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 146, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 147, Column: 9",
        "H_initialValue" : "ConcurrentDispatchQueueScheduler(qos: .default)"
      },
      {
        "A_name" : "start",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 149, Column: 9",
        "H_initialValue" : "Date()"
      },
      {
        "A_name" : "a",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 151, Column: 9",
        "H_initialValue" : "try! Observable<Int64>.interval(.seconds(1), scheduler: scheduler)\n            .take(2)\n            .toBlocking()\n            .toArray()"
      },
      {
        "A_name" : "end",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+TimerTests.swift - Line: 156, Column: 9",
        "H_initialValue" : "Date()"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 147, Column: 9",
    "H_initialValue" : "ConcurrentDispatchQueueScheduler(qos: .default)"
  },
  {
    "A_name" : "start",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 149, Column: 9",
    "H_initialValue" : "Date()"
  },
  {
    "A_name" : "a",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 151, Column: 9",
    "H_initialValue" : "try! Observable<Int64>.interval(.seconds(1), scheduler: scheduler)\n            .take(2)\n            .toBlocking()\n            .toArray()"
  },
  {
    "A_name" : "end",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+TimerTests.swift - Line: 156, Column: 9",
    "H_initialValue" : "Date()"
  }
]