[
  {
    "A_name" : "KingfisherWrapper",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 31, Column: 1",
    "G_members" : [
      {
        "A_name" : "setImage",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "discardableResult"
        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 52, Column: 5",
        "G_members" : [
          {
            "A_name" : "options",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 60, Column: 9",
            "H_initialValue" : "KingfisherParsedOptionsInfo(KingfisherManager.shared.defaultOptions + (options ?? .empty))"
          }
        ],
        "I_parameterType" : [
          "Source?",
          "KFCrossPlatformImage?",
          "KingfisherOptionsInfo?",
          "DownloadProgressBlock?",
          "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
        ],
        "I_parameters" : [
          "with",
          "placeholder",
          "options",
          "progressBlock",
          "completionHandler"
        ],
        "J_returnType" : "-> DownloadTask?"
      },
      {
        "A_name" : "setImage",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "discardableResult"
        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 87, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Resource?",
          "KFCrossPlatformImage?",
          "KingfisherOptionsInfo?",
          "DownloadProgressBlock?",
          "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
        ],
        "I_parameters" : [
          "with",
          "placeholder",
          "options",
          "progressBlock",
          "completionHandler"
        ],
        "J_returnType" : "-> DownloadTask?"
      },
      {
        "A_name" : "setImage",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 103, Column: 5",
        "G_members" : [
          {
            "A_name" : "mutatingSelf",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 110, Column: 9",
            "H_initialValue" : "self"
          },
          {
            "A_name" : "options",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 118, Column: 9",
            "H_initialValue" : "parsedOptions"
          },
          {
            "A_name" : "issuedIdentifier",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 123, Column: 9",
            "H_initialValue" : "Source.Identifier.next()"
          },
          {
            "A_name" : "task",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 130, Column: 9",
            "H_initialValue" : "KingfisherManager.shared.retrieveImage(\n            with: source,\n            options: options,\n            downloadTaskUpdated: { mutatingSelf.imageTask = $0 },\n            progressiveImageSetter: { self.base.setImage($0) },\n            referenceTaskIdentifierChecker: { issuedIdentifier == self.taskIdentifier },\n            completionHandler: { result in\n                CallbackQueue.mainCurrentOrAsync.execute {\n                    guard issuedIdentifier == self.taskIdentifier else {\n                        let reason: KingfisherError.ImageSettingErrorReason\n                        do {\n                            let value = try result.get()\n                            reason = .notCurrentSourceTask(result: value, error: nil, source: source)\n                        } catch {\n                            reason = .notCurrentSourceTask(result: nil, error: error, source: source)\n                        }\n                        let error = KingfisherError.imageSettingError(reason: reason)\n                        completionHandler?(.failure(error))\n                        return\n                    }\n\n                    mutatingSelf.imageTask = nil\n                    mutatingSelf.taskIdentifier = nil\n\n                    switch result {\n                    case .success(let value):\n                        self.base.setImage(value.image)\n                        completionHandler?(result)\n\n                    case .failure:\n                        if let image = options.onFailureImage {\n                            self.base.setImage(image)\n                        }\n                        completionHandler?(result)\n                    }\n                }\n            }\n        )"
          }
        ],
        "I_parameterType" : [
          "Source?",
          "KFCrossPlatformImage?",
          "KingfisherParsedOptionsInfo",
          "DownloadProgressBlock?",
          "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
        ],
        "I_parameters" : [
          "with",
          "placeholder",
          "parsedOptions",
          "progressBlock",
          "completionHandler"
        ],
        "J_returnType" : "-> DownloadTask?"
      },
      {
        "A_name" : "cancelDownloadTask",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 177, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "setImage",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "discardableResult"
    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 52, Column: 5",
    "G_members" : [
      {
        "A_name" : "options",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 60, Column: 9",
        "H_initialValue" : "KingfisherParsedOptionsInfo(KingfisherManager.shared.defaultOptions + (options ?? .empty))"
      }
    ],
    "I_parameterType" : [
      "Source?",
      "KFCrossPlatformImage?",
      "KingfisherOptionsInfo?",
      "DownloadProgressBlock?",
      "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
    ],
    "I_parameters" : [
      "with",
      "placeholder",
      "options",
      "progressBlock",
      "completionHandler"
    ],
    "J_returnType" : "-> DownloadTask?"
  },
  {
    "A_name" : "options",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 60, Column: 9",
    "H_initialValue" : "KingfisherParsedOptionsInfo(KingfisherManager.shared.defaultOptions + (options ?? .empty))"
  },
  {
    "A_name" : "setImage",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "discardableResult"
    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 87, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Resource?",
      "KFCrossPlatformImage?",
      "KingfisherOptionsInfo?",
      "DownloadProgressBlock?",
      "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
    ],
    "I_parameters" : [
      "with",
      "placeholder",
      "options",
      "progressBlock",
      "completionHandler"
    ],
    "J_returnType" : "-> DownloadTask?"
  },
  {
    "A_name" : "setImage",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 103, Column: 5",
    "G_members" : [
      {
        "A_name" : "mutatingSelf",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 110, Column: 9",
        "H_initialValue" : "self"
      },
      {
        "A_name" : "options",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 118, Column: 9",
        "H_initialValue" : "parsedOptions"
      },
      {
        "A_name" : "issuedIdentifier",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 123, Column: 9",
        "H_initialValue" : "Source.Identifier.next()"
      },
      {
        "A_name" : "task",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 130, Column: 9",
        "H_initialValue" : "KingfisherManager.shared.retrieveImage(\n            with: source,\n            options: options,\n            downloadTaskUpdated: { mutatingSelf.imageTask = $0 },\n            progressiveImageSetter: { self.base.setImage($0) },\n            referenceTaskIdentifierChecker: { issuedIdentifier == self.taskIdentifier },\n            completionHandler: { result in\n                CallbackQueue.mainCurrentOrAsync.execute {\n                    guard issuedIdentifier == self.taskIdentifier else {\n                        let reason: KingfisherError.ImageSettingErrorReason\n                        do {\n                            let value = try result.get()\n                            reason = .notCurrentSourceTask(result: value, error: nil, source: source)\n                        } catch {\n                            reason = .notCurrentSourceTask(result: nil, error: error, source: source)\n                        }\n                        let error = KingfisherError.imageSettingError(reason: reason)\n                        completionHandler?(.failure(error))\n                        return\n                    }\n\n                    mutatingSelf.imageTask = nil\n                    mutatingSelf.taskIdentifier = nil\n\n                    switch result {\n                    case .success(let value):\n                        self.base.setImage(value.image)\n                        completionHandler?(result)\n\n                    case .failure:\n                        if let image = options.onFailureImage {\n                            self.base.setImage(image)\n                        }\n                        completionHandler?(result)\n                    }\n                }\n            }\n        )"
      }
    ],
    "I_parameterType" : [
      "Source?",
      "KFCrossPlatformImage?",
      "KingfisherParsedOptionsInfo",
      "DownloadProgressBlock?",
      "((Result<RetrieveImageResult, KingfisherError>) -> Void)?"
    ],
    "I_parameters" : [
      "with",
      "placeholder",
      "parsedOptions",
      "progressBlock",
      "completionHandler"
    ],
    "J_returnType" : "-> DownloadTask?"
  },
  {
    "A_name" : "mutatingSelf",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 110, Column: 9",
    "H_initialValue" : "self"
  },
  {
    "A_name" : "options",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 118, Column: 9",
    "H_initialValue" : "parsedOptions"
  },
  {
    "A_name" : "issuedIdentifier",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 123, Column: 9",
    "H_initialValue" : "Source.Identifier.next()"
  },
  {
    "A_name" : "task",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 130, Column: 9",
    "H_initialValue" : "KingfisherManager.shared.retrieveImage(\n            with: source,\n            options: options,\n            downloadTaskUpdated: { mutatingSelf.imageTask = $0 },\n            progressiveImageSetter: { self.base.setImage($0) },\n            referenceTaskIdentifierChecker: { issuedIdentifier == self.taskIdentifier },\n            completionHandler: { result in\n                CallbackQueue.mainCurrentOrAsync.execute {\n                    guard issuedIdentifier == self.taskIdentifier else {\n                        let reason: KingfisherError.ImageSettingErrorReason\n                        do {\n                            let value = try result.get()\n                            reason = .notCurrentSourceTask(result: value, error: nil, source: source)\n                        } catch {\n                            reason = .notCurrentSourceTask(result: nil, error: error, source: source)\n                        }\n                        let error = KingfisherError.imageSettingError(reason: reason)\n                        completionHandler?(.failure(error))\n                        return\n                    }\n\n                    mutatingSelf.imageTask = nil\n                    mutatingSelf.taskIdentifier = nil\n\n                    switch result {\n                    case .success(let value):\n                        self.base.setImage(value.image)\n                        completionHandler?(result)\n\n                    case .failure:\n                        if let image = options.onFailureImage {\n                            self.base.setImage(image)\n                        }\n                        completionHandler?(result)\n                    }\n                }\n            }\n        )"
  },
  {
    "A_name" : "reason",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 139, Column: 25",
    "H_initialValue" : ""
  },
  {
    "A_name" : "value",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 141, Column: 29",
    "H_initialValue" : "try result.get()"
  },
  {
    "A_name" : "error",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 146, Column: 25",
    "H_initialValue" : "KingfisherError.imageSettingError(reason: reason)"
  },
  {
    "A_name" : "cancelDownloadTask",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 177, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "taskIdentifierKey",
    "B_kind" : "variable",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 182, Column: 1",
    "H_initialValue" : ""
  },
  {
    "A_name" : "imageTaskKey",
    "B_kind" : "variable",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 183, Column: 1",
    "H_initialValue" : ""
  },
  {
    "A_name" : "KingfisherWrapper",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 186, Column: 1",
    "G_members" : [
      {
        "A_name" : "taskIdentifier",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 188, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "imageTask",
        "B_kind" : "variable",
        "C_accessLevel" : "private",
        "D_attributes" : [

        ],
        "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 199, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "taskIdentifier",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 188, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "box",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 190, Column: 13",
    "H_initialValue" : "getAssociatedObject(base, &taskIdentifierKey)"
  },
  {
    "A_name" : "box",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 194, Column: 13",
    "H_initialValue" : "newValue.map { Box($0) }"
  },
  {
    "A_name" : "imageTask",
    "B_kind" : "variable",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "WKInterfaceImage+Kingfisher.swift - Line: 199, Column: 5",
    "H_initialValue" : ""
  }
]