[
  {
    "A_name" : "SingleTrait",
    "B_kind" : "enum",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Single.swift - Line: 14, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "PrimitiveSequenceType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Single.swift - Line: 19, Column: 1",
    "G_members" : [
      {
        "A_name" : "create",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 30, Column: 5",
        "G_members" : [
          {
            "A_name" : "source",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 31, Column: 9",
            "H_initialValue" : "Observable<Element>.create { observer in\n            return subscribe { event in\n                switch event {\n                case .success(let element):\n                    observer.on(.next(element))\n                    observer.on(.completed)\n                case .failure(let error):\n                    observer.on(.error(error))\n                }\n            }\n        }"
          }
        ],
        "I_parameterType" : [
          "@escaping (@escaping SingleObserver) -> Disposable"
        ],
        "I_parameters" : [
          "subscribe"
        ],
        "J_returnType" : "-> Single<Element>"
      },
      {
        "A_name" : "subscribe",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 51, Column: 5",
        "G_members" : [
          {
            "A_name" : "stopped",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 52, Column: 9",
            "H_initialValue" : "false"
          }
        ],
        "I_parameterType" : [
          "@escaping (SingleEvent<Element>) -> Void"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "subscribe",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "available"
        ],
        "F_location" : "Single.swift - Line: 77, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "((Element) -> Void)?",
          "@escaping ((Swift.Error) -> Void)",
          "(() -> Void)?"
        ],
        "I_parameters" : [
          "onSuccess",
          "onError",
          "onDisposed"
        ],
        "J_returnType" : "-> Disposable"
      },
      {
        "A_name" : "subscribe",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 93, Column: 5",
        "G_members" : [
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 102, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "observer",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 109, Column: 9",
            "H_initialValue" : "{ event in\n            switch event {\n            case .success(let element):\n                onSuccess?(element)\n                disposable.dispose()\n            case .failure(let error):\n                if let onFailure = onFailure {\n                    onFailure(error)\n                } else {\n                    Hooks.defaultErrorHandler(callStack, error)\n                }\n                disposable.dispose()\n            }\n        }"
          }
        ],
        "I_parameterType" : [
          "((Element) -> Void)?",
          "((Swift.Error) -> Void)?",
          "(() -> Void)?"
        ],
        "I_parameters" : [
          "onSuccess",
          "onFailure",
          "onDisposed"
        ],
        "J_returnType" : "-> Disposable"
      }
    ]
  },
  {
    "A_name" : "create",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 30, Column: 5",
    "G_members" : [
      {
        "A_name" : "source",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 31, Column: 9",
        "H_initialValue" : "Observable<Element>.create { observer in\n            return subscribe { event in\n                switch event {\n                case .success(let element):\n                    observer.on(.next(element))\n                    observer.on(.completed)\n                case .failure(let error):\n                    observer.on(.error(error))\n                }\n            }\n        }"
      }
    ],
    "I_parameterType" : [
      "@escaping (@escaping SingleObserver) -> Disposable"
    ],
    "I_parameters" : [
      "subscribe"
    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 31, Column: 9",
    "H_initialValue" : "Observable<Element>.create { observer in\n            return subscribe { event in\n                switch event {\n                case .success(let element):\n                    observer.on(.next(element))\n                    observer.on(.completed)\n                case .failure(let error):\n                    observer.on(.error(error))\n                }\n            }\n        }"
  },
  {
    "A_name" : "subscribe",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 51, Column: 5",
    "G_members" : [
      {
        "A_name" : "stopped",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 52, Column: 9",
        "H_initialValue" : "false"
      }
    ],
    "I_parameterType" : [
      "@escaping (SingleEvent<Element>) -> Void"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "stopped",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 52, Column: 9",
    "H_initialValue" : "false"
  },
  {
    "A_name" : "subscribe",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "available"
    ],
    "F_location" : "Single.swift - Line: 77, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "((Element) -> Void)?",
      "@escaping ((Swift.Error) -> Void)",
      "(() -> Void)?"
    ],
    "I_parameters" : [
      "onSuccess",
      "onError",
      "onDisposed"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "subscribe",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 93, Column: 5",
    "G_members" : [
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 102, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "observer",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 109, Column: 9",
        "H_initialValue" : "{ event in\n            switch event {\n            case .success(let element):\n                onSuccess?(element)\n                disposable.dispose()\n            case .failure(let error):\n                if let onFailure = onFailure {\n                    onFailure(error)\n                } else {\n                    Hooks.defaultErrorHandler(callStack, error)\n                }\n                disposable.dispose()\n            }\n        }"
      }
    ],
    "I_parameterType" : [
      "((Element) -> Void)?",
      "((Swift.Error) -> Void)?",
      "(() -> Void)?"
    ],
    "I_parameters" : [
      "onSuccess",
      "onFailure",
      "onDisposed"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "callStack",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 97, Column: 13",
    "H_initialValue" : "Hooks.recordCallStackOnError ? Thread.callStackSymbols : []"
  },
  {
    "A_name" : "callStack",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 99, Column: 13",
    "H_initialValue" : "[String]()"
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 102, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "observer",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 109, Column: 9",
    "H_initialValue" : "{ event in\n            switch event {\n            case .success(let element):\n                onSuccess?(element)\n                disposable.dispose()\n            case .failure(let error):\n                if let onFailure = onFailure {\n                    onFailure(error)\n                } else {\n                    Hooks.defaultErrorHandler(callStack, error)\n                }\n                disposable.dispose()\n            }\n        }"
  },
  {
    "A_name" : "PrimitiveSequenceType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Single.swift - Line: 131, Column: 1",
    "G_members" : [
      {
        "A_name" : "just",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 140, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Element"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Single<Element>"
      },
      {
        "A_name" : "just",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 153, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Element",
          "ImmediateSchedulerType"
        ],
        "I_parameters" : [
          "_",
          "scheduler"
        ],
        "J_returnType" : "-> Single<Element>"
      },
      {
        "A_name" : "error",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 164, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Swift.Error"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Single<Element>"
      },
      {
        "A_name" : "never",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 175, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> Single<Element>"
      }
    ]
  },
  {
    "A_name" : "just",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 140, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Element"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "just",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 153, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Element",
      "ImmediateSchedulerType"
    ],
    "I_parameters" : [
      "_",
      "scheduler"
    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "error",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 164, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Swift.Error"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "never",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 175, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "PrimitiveSequenceType",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Single.swift - Line: 180, Column: 1",
    "G_members" : [
      {
        "A_name" : "`do`",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 196, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "((Element) throws -> Void)?",
          "((Element) throws -> Void)?",
          "((Swift.Error) throws -> Void)?",
          "((Swift.Error) throws -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?",
          "(() -> Void)?"
        ],
        "I_parameters" : [
          "onSuccess",
          "afterSuccess",
          "onError",
          "afterError",
          "onSubscribe",
          "onSubscribed",
          "onDispose"
        ],
        "J_returnType" : "-> Single<Element>"
      },
      {
        "A_name" : "filter",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 223, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Bool"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Maybe<Element>"
      },
      {
        "A_name" : "map",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 237, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Result"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Single<Result>"
      },
      {
        "A_name" : "compactMap",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 249, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Result?"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Maybe<Result>"
      },
      {
        "A_name" : "flatMap",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 262, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Single<Result>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Single<Result>"
      },
      {
        "A_name" : "flatMapMaybe",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 275, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Maybe<Result>"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Maybe<Result>"
      },
      {
        "A_name" : "flatMapCompletable",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 288, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping (Element) throws -> Completable"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> Completable"
      },
      {
        "A_name" : "zip",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 299, Column: 5",
        "G_members" : [
          {
            "A_name" : "raw",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 307, Column: 9",
            "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
          }
        ],
        "I_parameterType" : [
          "Collection",
          "@escaping ([Element]) throws -> Result"
        ],
        "I_parameters" : [
          "_",
          "resultSelector"
        ],
        "J_returnType" : "-> PrimitiveSequence<Trait, Result>"
      },
      {
        "A_name" : "zip",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Single.swift - Line: 316, Column: 5",
        "G_members" : [
          {
            "A_name" : "raw",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Single.swift - Line: 322, Column: 9",
            "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() })"
          }
        ],
        "I_parameterType" : [
          "Collection"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> PrimitiveSequence<Trait, [Element]>"
      },
      {
        "A_name" : "catchAndReturn",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 334, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Element"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> PrimitiveSequence<Trait, Element>"
      },
      {
        "A_name" : "catchErrorJustReturn",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "available"
        ],
        "F_location" : "Single.swift - Line: 347, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "Element"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> PrimitiveSequence<Trait, Element>"
      },
      {
        "A_name" : "asMaybe",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 356, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> Maybe<Element>"
      },
      {
        "A_name" : "asCompletable",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 364, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> Completable"
      }
    ]
  },
  {
    "A_name" : "`do`",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 196, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "((Element) throws -> Void)?",
      "((Element) throws -> Void)?",
      "((Swift.Error) throws -> Void)?",
      "((Swift.Error) throws -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?",
      "(() -> Void)?"
    ],
    "I_parameters" : [
      "onSuccess",
      "afterSuccess",
      "onError",
      "afterError",
      "onSubscribe",
      "onSubscribed",
      "onDispose"
    ],
    "J_returnType" : "-> Single<Element>"
  },
  {
    "A_name" : "filter",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 223, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Bool"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Maybe<Element>"
  },
  {
    "A_name" : "map",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 237, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Result"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Single<Result>"
  },
  {
    "A_name" : "compactMap",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 249, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Result?"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Maybe<Result>"
  },
  {
    "A_name" : "flatMap",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 262, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Single<Result>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Single<Result>"
  },
  {
    "A_name" : "flatMapMaybe",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 275, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Maybe<Result>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Maybe<Result>"
  },
  {
    "A_name" : "flatMapCompletable",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 288, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping (Element) throws -> Completable"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Completable"
  },
  {
    "A_name" : "zip",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 299, Column: 5",
    "G_members" : [
      {
        "A_name" : "raw",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 307, Column: 9",
        "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
      }
    ],
    "I_parameterType" : [
      "Collection",
      "@escaping ([Element]) throws -> Result"
    ],
    "I_parameters" : [
      "_",
      "resultSelector"
    ],
    "J_returnType" : "-> PrimitiveSequence<Trait, Result>"
  },
  {
    "A_name" : "raw",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 307, Column: 9",
    "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() }, resultSelector: resultSelector)"
  },
  {
    "A_name" : "zip",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Single.swift - Line: 316, Column: 5",
    "G_members" : [
      {
        "A_name" : "raw",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Single.swift - Line: 322, Column: 9",
        "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() })"
      }
    ],
    "I_parameterType" : [
      "Collection"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> PrimitiveSequence<Trait, [Element]>"
  },
  {
    "A_name" : "raw",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 322, Column: 9",
    "H_initialValue" : "Observable.zip(collection.map { $0.asObservable() })"
  },
  {
    "A_name" : "catchAndReturn",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 334, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Element"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> PrimitiveSequence<Trait, Element>"
  },
  {
    "A_name" : "catchErrorJustReturn",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "available"
    ],
    "F_location" : "Single.swift - Line: 347, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Element"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> PrimitiveSequence<Trait, Element>"
  },
  {
    "A_name" : "asMaybe",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 356, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Maybe<Element>"
  },
  {
    "A_name" : "asCompletable",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Single.swift - Line: 364, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Completable"
  }
]