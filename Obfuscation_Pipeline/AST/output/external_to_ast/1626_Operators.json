[
  {
    "A_name" : "nonMarkedText",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 22, Column: 1",
    "G_members" : [
      {
        "A_name" : "start",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 23, Column: 5",
        "H_initialValue" : "textInput.beginningOfDocument"
      },
      {
        "A_name" : "end",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 24, Column: 5",
        "H_initialValue" : "textInput.endOfDocument"
      }
    ],
    "I_parameterType" : [
      "UITextInput"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> String?"
  },
  {
    "A_name" : "start",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 23, Column: 5",
    "H_initialValue" : "textInput.beginningOfDocument"
  },
  {
    "A_name" : "end",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 24, Column: 5",
    "H_initialValue" : "textInput.endOfDocument"
  },
  {
    "A_name" : "<->",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 43, Column: 1",
    "G_members" : [
      {
        "A_name" : "bindToUIDisposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 44, Column: 5",
        "H_initialValue" : "relay.bind(to: textInput.text)"
      },
      {
        "A_name" : "bindToRelay",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 46, Column: 5",
        "H_initialValue" : "textInput.text\n        .subscribe(onNext: { [weak base = textInput.base] n in\n            guard let base = base else {\n                return\n            }\n\n            let nonMarkedTextValue = nonMarkedText(base)\n\n            \/**\n             In some cases `textInput.textRangeFromPosition(start, toPosition: end)` will return nil even though the underlying\n             value is not nil. This appears to be an Apple bug. If it's not, and we are doing something wrong, please let us know.\n             The can be reproed easily if replace bottom code with \n             \n             if nonMarkedTextValue != relay.value {\n                relay.accept(nonMarkedTextValue ?? \"\")\n             }\n\n             and you hit \"Done\" button on keyboard.\n             *\/\n            if let nonMarkedTextValue = nonMarkedTextValue, nonMarkedTextValue != relay.value {\n                relay.accept(nonMarkedTextValue)\n            }\n        }, onCompleted:  {\n            bindToUIDisposable.dispose()\n        })"
      }
    ],
    "I_parameterType" : [
      "TextInput<Base>",
      "BehaviorRelay<String>"
    ],
    "I_parameters" : [
      "textInput",
      "relay"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "bindToUIDisposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 44, Column: 5",
    "H_initialValue" : "relay.bind(to: textInput.text)"
  },
  {
    "A_name" : "bindToRelay",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 46, Column: 5",
    "H_initialValue" : "textInput.text\n        .subscribe(onNext: { [weak base = textInput.base] n in\n            guard let base = base else {\n                return\n            }\n\n            let nonMarkedTextValue = nonMarkedText(base)\n\n            \/**\n             In some cases `textInput.textRangeFromPosition(start, toPosition: end)` will return nil even though the underlying\n             value is not nil. This appears to be an Apple bug. If it's not, and we are doing something wrong, please let us know.\n             The can be reproed easily if replace bottom code with \n             \n             if nonMarkedTextValue != relay.value {\n                relay.accept(nonMarkedTextValue ?? \"\")\n             }\n\n             and you hit \"Done\" button on keyboard.\n             *\/\n            if let nonMarkedTextValue = nonMarkedTextValue, nonMarkedTextValue != relay.value {\n                relay.accept(nonMarkedTextValue)\n            }\n        }, onCompleted:  {\n            bindToUIDisposable.dispose()\n        })"
  },
  {
    "A_name" : "nonMarkedTextValue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 52, Column: 13",
    "H_initialValue" : "nonMarkedText(base)"
  },
  {
    "A_name" : "<->",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 76, Column: 1",
    "G_members" : [
      {
        "A_name" : "bindToUIDisposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 87, Column: 5",
        "H_initialValue" : "relay.bind(to: property)"
      },
      {
        "A_name" : "bindToRelay",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Operators.swift - Line: 88, Column: 5",
        "H_initialValue" : "property\n        .subscribe(onNext: { n in\n            relay.accept(n)\n        }, onCompleted:  {\n            bindToUIDisposable.dispose()\n        })"
      }
    ],
    "I_parameterType" : [
      "ControlProperty<T>",
      "BehaviorRelay<T>"
    ],
    "I_parameters" : [
      "property",
      "relay"
    ],
    "J_returnType" : "-> Disposable"
  },
  {
    "A_name" : "bindToUIDisposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 87, Column: 5",
    "H_initialValue" : "relay.bind(to: property)"
  },
  {
    "A_name" : "bindToRelay",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Operators.swift - Line: 88, Column: 5",
    "H_initialValue" : "property\n        .subscribe(onNext: { n in\n            relay.accept(n)\n        }, onCompleted:  {\n            bindToUIDisposable.dispose()\n        })"
  }
]