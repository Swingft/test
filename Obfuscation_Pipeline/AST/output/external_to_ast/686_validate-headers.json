[
  {
    "A_name" : "fileManager",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 26, Column: 1",
    "H_initialValue" : "FileManager.default"
  },
  {
    "A_name" : "allowedExtensions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 28, Column: 1",
    "H_initialValue" : "[\n    \".swift\",\n    \".h\",\n    \".m\",\n]"
  },
  {
    "A_name" : "excludedRootPaths",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 34, Column: 1",
    "H_initialValue" : "[\n    \"Carthage\",\n    \".git\",\n    \"build\",\n    \"Rx.playground\",\n    \"vendor\",\n    \"Sources\",\n    \"Carthage\"\n]"
  },
  {
    "A_name" : "excludePaths",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 44, Column: 1",
    "H_initialValue" : "[\n    \"AllTestz\/main.swift\",\n    \"Platform\/AtomicInt.swift\",\n    \"Platform\/Platform.Linux.swift\",\n    \"Platform\/Platform.Darwin.swift\",\n    \"Platform\/RecursiveLock.swift\",\n    \"Platform\/DataStructures\/Bag.swift\",\n    \"Platform\/DataStructures\/InfiniteSequence.swift\",\n    \"Platform\/DataStructures\/PriorityQueue.swift\",\n    \"Platform\/DataStructures\/Queue.swift\",\n    \"Platform\/DispatchQueue+Extensions.swift\",\n    \"Platform\/DeprecationWarner.swift\",\n    \"RxExample\/Services\/Reachability.swift\",\n    \"RxDataSources\"\n]"
  },
  {
    "A_name" : "isExtensionIncluded",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 60, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String"
    ],
    "I_parameters" : [
      "path"
    ],
    "J_returnType" : "-> Bool"
  },
  {
    "A_name" : "whitespace",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 64, Column: 1",
    "H_initialValue" : "NSCharacterSet.whitespacesAndNewlines"
  },
  {
    "A_name" : "identifier",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 66, Column: 1",
    "H_initialValue" : "\"(?:\\\\w|\\\\+|\\\\_|\\\\.|-)+\""
  },
  {
    "A_name" : "fileLine",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 68, Column: 1",
    "H_initialValue" : "try NSRegularExpression(pattern: \"\/\/  (\\(identifier))\", options: [])"
  },
  {
    "A_name" : "projectLine",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 69, Column: 1",
    "H_initialValue" : "try NSRegularExpression(pattern: \"\/\/  (\\(identifier))\", options: [])"
  },
  {
    "A_name" : "createdBy",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 71, Column: 1",
    "H_initialValue" : "try NSRegularExpression(pattern: \"\/\/  Created by .* on \\\\d+\/\\\\d+\/\\\\d+\\\\.\", options: [])"
  },
  {
    "A_name" : "copyrightLine",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 72, Column: 1",
    "H_initialValue" : "try NSRegularExpression(pattern: \"\/\/  Copyright Â© (\\\\d+) Krunoslav Zaher. All rights reserved.\", options: [])"
  },
  {
    "A_name" : "validateRegexMatches",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 74, Column: 1",
    "G_members" : [
      {
        "A_name" : "range",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 75, Column: 5",
        "H_initialValue" : "NSRange(location: 0, length: content.count)"
      },
      {
        "A_name" : "matches",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 76, Column: 5",
        "H_initialValue" : "regularExpression.matches(in: content, options: [], range: range)"
      }
    ],
    "I_parameterType" : [
      "NSRegularExpression",
      "String"
    ],
    "I_parameters" : [
      "regularExpression",
      "content"
    ],
    "J_returnType" : "-> ([String], Bool)"
  },
  {
    "A_name" : "range",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 75, Column: 5",
    "H_initialValue" : "NSRange(location: 0, length: content.count)"
  },
  {
    "A_name" : "matches",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 76, Column: 5",
    "H_initialValue" : "regularExpression.matches(in: content, options: [], range: range)"
  },
  {
    "A_name" : "range",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 92, Column: 13",
    "H_initialValue" : "m.range(at: index)"
  },
  {
    "A_name" : "validateHeader",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 98, Column: 1",
    "G_members" : [
      {
        "A_name" : "contents",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 99, Column: 5",
        "H_initialValue" : "try String(contentsOfFile: path, encoding: String.Encoding.utf8)"
      },
      {
        "A_name" : "rawLines",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 101, Column: 5",
        "H_initialValue" : "contents.components(separatedBy: \"\\n\")"
      },
      {
        "A_name" : "lines",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 103, Column: 5",
        "H_initialValue" : "rawLines.map { $0.trimmingCharacters(in: whitespace) }"
      },
      {
        "A_name" : "fileNameInFile",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 133, Column: 5",
        "H_initialValue" : "parsedFileLine.first ?? \"\""
      },
      {
        "A_name" : "targetProject",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 141, Column: 5",
        "H_initialValue" : "path.components(separatedBy: \"\/\")[0]"
      },
      {
        "A_name" : "currentYear",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "validate-headers.swift - Line: 166, Column: 5",
        "H_initialValue" : "Calendar.current.component(.year, from: Date())"
      }
    ],
    "I_parameterType" : [
      "String"
    ],
    "I_parameters" : [
      "path"
    ],
    "J_returnType" : "-> Bool"
  },
  {
    "A_name" : "contents",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 99, Column: 5",
    "H_initialValue" : "try String(contentsOfFile: path, encoding: String.Encoding.utf8)"
  },
  {
    "A_name" : "rawLines",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 101, Column: 5",
    "H_initialValue" : "contents.components(separatedBy: \"\\n\")"
  },
  {
    "A_name" : "lines",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 103, Column: 5",
    "H_initialValue" : "rawLines.map { $0.trimmingCharacters(in: whitespace) }"
  },
  {
    "A_name" : "fileNameInFile",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 133, Column: 5",
    "H_initialValue" : "parsedFileLine.first ?? \"\""
  },
  {
    "A_name" : "targetProject",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 141, Column: 5",
    "H_initialValue" : "path.components(separatedBy: \"\/\")[0]"
  },
  {
    "A_name" : "currentYear",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 166, Column: 5",
    "H_initialValue" : "Calendar.current.component(.year, from: Date())"
  },
  {
    "A_name" : "verifyAll",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 185, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String"
    ],
    "I_parameters" : [
      "root"
    ],
    "J_returnType" : "-> Bool"
  },
  {
    "A_name" : "excluded",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 187, Column: 9",
    "H_initialValue" : "excludePaths.map { file.hasPrefix($0) }.reduce(false) { $0 || $1 }"
  },
  {
    "A_name" : "isValid",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 195, Column: 9",
    "H_initialValue" : "try validateHeader(path: \"\\(root)\/\\(file)\")"
  },
  {
    "A_name" : "allValid",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "validate-headers.swift - Line: 204, Column: 1",
    "H_initialValue" : "try fileManager.contentsOfDirectory(atPath: \".\").map { rootDir -> Bool in\n    if excludedRootPaths.contains(rootDir) {\n        print(\"Skipping \\(rootDir)\")\n        return true\n    }\n    return try verifyAll(root: rootDir)\n}.reduce(true) { $0 && $1 }"
  }
]