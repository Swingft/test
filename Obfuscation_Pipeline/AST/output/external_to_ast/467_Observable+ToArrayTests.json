[
  {
    "A_name" : "ObservableToArrayTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 13, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservableToArrayTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 17, Column: 1",
    "G_members" : [
      {
        "A_name" : "test_ToArrayWithSingleItem_Return",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 19, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 20, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 22, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .completed(20)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 27, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 31, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(220, EquatableArray([1])),\n            .completed(220)\n        )"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 36, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 220)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_ToArrayWithMultipleItems_Return",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 44, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 45, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 47, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .completed(50)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 55, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 59, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([1,2,3,4])),\n            .completed(250)\n        )"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 64, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_ToArrayWithNoItems_Empty",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 72, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 73, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 75, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .completed(50)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 79, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 83, Column: 9",
            "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([Int]())),\n            .completed(250)\n        )"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 88, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_ToArrayWithSingleItem_Never",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 96, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 97, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 99, Column: 9",
            "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 103, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 107, Column: 9",
            "H_initialValue" : "[\n        ]"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 110, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 1000)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_ToArrayWithImmediateError_Throw",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 118, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 119, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 121, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .error(10, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 125, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 129, Column: 9",
            "H_initialValue" : "[\n            Recorded.error(210, testError, EquatableArray<Int>.self)\n        ]"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 133, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 210)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "test_ToArrayWithMultipleItems_Throw",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 141, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 142, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 144, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .error(50, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 152, Column: 9",
            "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
          },
          {
            "A_name" : "correctMessages",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 156, Column: 9",
            "H_initialValue" : "[\n            Recorded.error(250, testError, EquatableArray<Int>.self)\n        ]"
          },
          {
            "A_name" : "correctSubscriptions",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+ToArrayTests.swift - Line: 160, Column: 9",
            "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "test_ToArrayWithSingleItem_Return",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 19, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 20, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 22, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .completed(20)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 27, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 31, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(220, EquatableArray([1])),\n            .completed(220)\n        )"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 36, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 220)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 20, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 22, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .completed(20)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 27, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 31, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(220, EquatableArray([1])),\n            .completed(220)\n        )"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 36, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 220)\n        ]"
  },
  {
    "A_name" : "test_ToArrayWithMultipleItems_Return",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 44, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 45, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 47, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .completed(50)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 55, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 59, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([1,2,3,4])),\n            .completed(250)\n        )"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 64, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 45, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 47, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .completed(50)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 55, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 59, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([1,2,3,4])),\n            .completed(250)\n        )"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 64, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
  },
  {
    "A_name" : "test_ToArrayWithNoItems_Empty",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 72, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 73, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 75, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .completed(50)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 79, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 83, Column: 9",
        "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([Int]())),\n            .completed(250)\n        )"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 88, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 73, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 75, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .completed(50)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 79, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 83, Column: 9",
    "H_initialValue" : "Recorded.events(\n            .next(250, EquatableArray([Int]())),\n            .completed(250)\n        )"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 88, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
  },
  {
    "A_name" : "test_ToArrayWithSingleItem_Never",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 96, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 97, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 99, Column: 9",
        "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 103, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 107, Column: 9",
        "H_initialValue" : "[\n        ]"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 110, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 1000)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 97, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 99, Column: 9",
    "H_initialValue" : "scheduler.createHotObservable([\n            .next(150, 1)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 103, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 107, Column: 9",
    "H_initialValue" : "[\n        ]"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 110, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 1000)\n        ]"
  },
  {
    "A_name" : "test_ToArrayWithImmediateError_Throw",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 118, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 119, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 121, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .error(10, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 125, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 129, Column: 9",
        "H_initialValue" : "[\n            Recorded.error(210, testError, EquatableArray<Int>.self)\n        ]"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 133, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 210)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 119, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 121, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .error(10, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 125, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 129, Column: 9",
    "H_initialValue" : "[\n            Recorded.error(210, testError, EquatableArray<Int>.self)\n        ]"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 133, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 210)\n        ]"
  },
  {
    "A_name" : "test_ToArrayWithMultipleItems_Throw",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 141, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 142, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 144, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .error(50, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 152, Column: 9",
        "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
      },
      {
        "A_name" : "correctMessages",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 156, Column: 9",
        "H_initialValue" : "[\n            Recorded.error(250, testError, EquatableArray<Int>.self)\n        ]"
      },
      {
        "A_name" : "correctSubscriptions",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+ToArrayTests.swift - Line: 160, Column: 9",
        "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 142, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 144, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(10, 1),\n            .next(20, 2),\n            .next(30, 3),\n            .next(40, 4),\n            .error(50, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 152, Column: 9",
    "H_initialValue" : "scheduler.start {\n            return xs.toArray().map { EquatableArray($0) }\n        }"
  },
  {
    "A_name" : "correctMessages",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 156, Column: 9",
    "H_initialValue" : "[\n            Recorded.error(250, testError, EquatableArray<Int>.self)\n        ]"
  },
  {
    "A_name" : "correctSubscriptions",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 160, Column: 9",
    "H_initialValue" : "[\n            Subscription(200, 250)\n        ]"
  },
  {
    "A_name" : "testToArrayReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 169, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "testToArrayReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+ToArrayTests.swift - Line: 173, Column: 9",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  }
]