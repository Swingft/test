[
  {
    "A_name" : "ObservableUsingTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+UsingTests.swift - Line: 13, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservableUsingTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 16, Column: 1",
    "G_members" : [
      {
        "A_name" : "testUsing_Complete",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 17, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 18, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "disposeInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 20, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "createInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 21, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 23, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 24, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "_d",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 25, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 27, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .completed(200)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testUsing_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 63, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 64, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "disposeInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 66, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "createInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 67, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 69, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 70, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "_d",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 71, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 73, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .error(200, testError)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testUsing_Dispose",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 109, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 110, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "disposeInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 112, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "createInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 113, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 115, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 116, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "_d",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 117, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 119, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .next(1000, scheduler.clock + 1)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testUsing_ThrowResourceSelector",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 154, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 155, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "disposeInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 157, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "createInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 158, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 160, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                throw testError\n            }, observableFactory: { _ in\n                createInvoked += 1\n                return Observable.never()\n\n            }) as Observable<Int>\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testUsing_ThrowResourceUsage",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 179, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 180, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "disposeInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 182, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "createInvoked",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 183, Column: 9",
            "H_initialValue" : "0"
          },
          {
            "A_name" : "disposable",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 184, Column: 9",
            "H_initialValue" : ""
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+UsingTests.swift - Line: 186, Column: 9",
            "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { _ in\n                createInvoked += 1\n                throw testError\n\n            }) as Observable<Int>\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testUsing_Complete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 17, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 18, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "disposeInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 20, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "createInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 21, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 23, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 24, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "_d",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 25, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 27, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .completed(200)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 18, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "disposeInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 20, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "createInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 21, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 23, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 24, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "_d",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 25, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 27, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .completed(200)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
  },
  {
    "A_name" : "testUsing_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 63, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 64, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "disposeInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 66, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "createInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 67, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 69, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 70, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "_d",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 71, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 73, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .error(200, testError)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 64, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "disposeInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 66, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "createInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 67, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 69, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 70, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "_d",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 71, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 73, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .error(200, testError)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
  },
  {
    "A_name" : "testUsing_Dispose",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 109, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 110, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "disposeInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 112, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "createInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 113, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 115, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 116, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "_d",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 117, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 119, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .next(1000, scheduler.clock + 1)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 110, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "disposeInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 112, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "createInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 113, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 115, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 116, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "_d",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 117, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 119, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { d in\n                _d = d\n                createInvoked += 1\n                xs = scheduler.createColdObservable([\n                    .next(100, scheduler.clock),\n                    .next(1000, scheduler.clock + 1)\n                    ])\n                return xs.asObservable()\n            }) as Observable<Int>\n        }"
  },
  {
    "A_name" : "testUsing_ThrowResourceSelector",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 154, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 155, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "disposeInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 157, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "createInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 158, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 160, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                throw testError\n            }, observableFactory: { _ in\n                createInvoked += 1\n                return Observable.never()\n\n            }) as Observable<Int>\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 155, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "disposeInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 157, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "createInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 158, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 160, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                throw testError\n            }, observableFactory: { _ in\n                createInvoked += 1\n                return Observable.never()\n\n            }) as Observable<Int>\n        }"
  },
  {
    "A_name" : "testUsing_ThrowResourceUsage",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 179, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 180, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "disposeInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 182, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "createInvoked",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 183, Column: 9",
        "H_initialValue" : "0"
      },
      {
        "A_name" : "disposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 184, Column: 9",
        "H_initialValue" : ""
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 186, Column: 9",
        "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { _ in\n                createInvoked += 1\n                throw testError\n\n            }) as Observable<Int>\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 180, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "disposeInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 182, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "createInvoked",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 183, Column: 9",
    "H_initialValue" : "0"
  },
  {
    "A_name" : "disposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 184, Column: 9",
    "H_initialValue" : ""
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 186, Column: 9",
    "H_initialValue" : "scheduler.start {\n            Observable.using({ () -> MockDisposable in\n                disposeInvoked += 1\n                disposable = MockDisposable(scheduler: scheduler)\n                return disposable\n            }, observableFactory: { _ in\n                createInvoked += 1\n                throw testError\n\n            }) as Observable<Int>\n        }"
  },
  {
    "A_name" : "testUsingReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 212, Column: 9",
    "G_members" : [
      {
        "A_name" : "compositeDisposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 213, Column: 13",
        "H_initialValue" : "CompositeDisposable(disposables: [])"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "compositeDisposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 213, Column: 13",
    "H_initialValue" : "CompositeDisposable(disposables: [])"
  },
  {
    "A_name" : "testUsingReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 217, Column: 9",
    "G_members" : [
      {
        "A_name" : "compositeDisposable",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+UsingTests.swift - Line: 218, Column: 13",
        "H_initialValue" : "CompositeDisposable(disposables: [])"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "compositeDisposable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+UsingTests.swift - Line: 218, Column: 13",
    "H_initialValue" : "CompositeDisposable(disposables: [])"
  }
]