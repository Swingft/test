[
  {
    "A_name" : "ciContext",
    "B_kind" : "variable",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 32, Column: 1",
    "H_initialValue" : "CIContext(options: nil)"
  },
  {
    "A_name" : "CIImageProcessor",
    "B_kind" : "protocol",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ImageProcessor"
    ],
    "F_location" : "Filter.swift - Line: 39, Column: 1",
    "G_members" : [
      {
        "A_name" : "filter",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 40, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "filter",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 40, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "CIImageProcessor",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Filter.swift - Line: 43, Column: 1",
    "G_members" : [
      {
        "A_name" : "process",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 53, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "ImageProcessItem",
          "KingfisherParsedOptionsInfo"
        ],
        "I_parameters" : [
          "item",
          "options"
        ],
        "J_returnType" : "-> KFCrossPlatformImage?"
      }
    ]
  },
  {
    "A_name" : "process",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 53, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "ImageProcessItem",
      "KingfisherParsedOptionsInfo"
    ],
    "I_parameters" : [
      "item",
      "options"
    ],
    "J_returnType" : "-> KFCrossPlatformImage?"
  },
  {
    "A_name" : "Filter",
    "B_kind" : "struct",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Filter.swift - Line: 65, Column: 1",
    "G_members" : [
      {
        "A_name" : "transform",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 67, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "init",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 69, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "@escaping Transformer"
        ],
        "I_parameters" : [
          "transform"
        ]
      },
      {
        "A_name" : "tint",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Filter.swift - Line: 74, Column: 5",
        "H_initialValue" : "{\n        color in\n        Filter {\n            input in\n            \n            let colorFilter = CIFilter(name: \"CIConstantColorGenerator\")!\n            colorFilter.setValue(CIColor(color: color), forKey: kCIInputColorKey)\n            \n            let filter = CIFilter(name: \"CISourceOverCompositing\")!\n            \n            let colorImage = colorFilter.outputImage\n            filter.setValue(colorImage, forKey: kCIInputImageKey)\n            filter.setValue(input, forKey: kCIInputBackgroundImageKey)\n            \n            return filter.outputImage?.cropped(to: input.extent)\n        }\n    }"
      },
      {
        "A_name" : "colorControl",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "static"
        ],
        "F_location" : "Filter.swift - Line: 97, Column: 5",
        "H_initialValue" : "{ arg -> Filter in\n        let (brightness, contrast, saturation, inputEV) = arg\n        return Filter { input in\n            let paramsColor = [kCIInputBrightnessKey: brightness,\n                               kCIInputContrastKey: contrast,\n                               kCIInputSaturationKey: saturation]\n            let blackAndWhite = input.applyingFilter(\"CIColorControls\", parameters: paramsColor)\n            let paramsExposure = [kCIInputEVKey: inputEV]\n            return blackAndWhite.applyingFilter(\"CIExposureAdjust\", parameters: paramsExposure)\n        }\n    }"
      }
    ]
  },
  {
    "A_name" : "transform",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 67, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 69, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "@escaping Transformer"
    ],
    "I_parameters" : [
      "transform"
    ]
  },
  {
    "A_name" : "tint",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Filter.swift - Line: 74, Column: 5",
    "H_initialValue" : "{\n        color in\n        Filter {\n            input in\n            \n            let colorFilter = CIFilter(name: \"CIConstantColorGenerator\")!\n            colorFilter.setValue(CIColor(color: color), forKey: kCIInputColorKey)\n            \n            let filter = CIFilter(name: \"CISourceOverCompositing\")!\n            \n            let colorImage = colorFilter.outputImage\n            filter.setValue(colorImage, forKey: kCIInputImageKey)\n            filter.setValue(input, forKey: kCIInputBackgroundImageKey)\n            \n            return filter.outputImage?.cropped(to: input.extent)\n        }\n    }"
  },
  {
    "A_name" : "colorFilter",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 79, Column: 13",
    "H_initialValue" : "CIFilter(name: \"CIConstantColorGenerator\")!"
  },
  {
    "A_name" : "filter",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 82, Column: 13",
    "H_initialValue" : "CIFilter(name: \"CISourceOverCompositing\")!"
  },
  {
    "A_name" : "colorImage",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 84, Column: 13",
    "H_initialValue" : "colorFilter.outputImage"
  },
  {
    "A_name" : "colorControl",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "static"
    ],
    "F_location" : "Filter.swift - Line: 97, Column: 5",
    "H_initialValue" : "{ arg -> Filter in\n        let (brightness, contrast, saturation, inputEV) = arg\n        return Filter { input in\n            let paramsColor = [kCIInputBrightnessKey: brightness,\n                               kCIInputContrastKey: contrast,\n                               kCIInputSaturationKey: saturation]\n            let blackAndWhite = input.applyingFilter(\"CIColorControls\", parameters: paramsColor)\n            let paramsExposure = [kCIInputEVKey: inputEV]\n            return blackAndWhite.applyingFilter(\"CIExposureAdjust\", parameters: paramsExposure)\n        }\n    }"
  },
  {
    "A_name" : "paramsColor",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 100, Column: 13",
    "H_initialValue" : "[kCIInputBrightnessKey: brightness,\n                               kCIInputContrastKey: contrast,\n                               kCIInputSaturationKey: saturation]"
  },
  {
    "A_name" : "blackAndWhite",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 103, Column: 13",
    "H_initialValue" : "input.applyingFilter(\"CIColorControls\", parameters: paramsColor)"
  },
  {
    "A_name" : "paramsExposure",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 104, Column: 13",
    "H_initialValue" : "[kCIInputEVKey: inputEV]"
  },
  {
    "A_name" : "KingfisherWrapper",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Filter.swift - Line: 110, Column: 1",
    "G_members" : [
      {
        "A_name" : "apply",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 120, Column: 5",
        "G_members" : [
          {
            "A_name" : "inputImage",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Filter.swift - Line: 127, Column: 9",
            "H_initialValue" : "CIImage(cgImage: cgImage)"
          }
        ],
        "I_parameterType" : [
          "Filter"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> KFCrossPlatformImage"
      }
    ]
  },
  {
    "A_name" : "apply",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 120, Column: 5",
    "G_members" : [
      {
        "A_name" : "inputImage",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Filter.swift - Line: 127, Column: 9",
        "H_initialValue" : "CIImage(cgImage: cgImage)"
      }
    ],
    "I_parameterType" : [
      "Filter"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> KFCrossPlatformImage"
  },
  {
    "A_name" : "inputImage",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Filter.swift - Line: 127, Column: 9",
    "H_initialValue" : "CIImage(cgImage: cgImage)"
  }
]