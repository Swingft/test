[
  {
    "A_name" : "ObservableDelaySubscriptionTest",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "RxTest"
    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 13, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "ObservableDelaySubscriptionTest",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 16, Column: 1",
    "G_members" : [
      {
        "A_name" : "testDelaySubscription_TimeSpan_Simple",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 18, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 19, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 21, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .completed(70)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 27, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testDelaySubscription_TimeSpan_Error",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 42, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 43, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 45, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 51, Column: 9",
            "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      },
      {
        "A_name" : "testDelaySubscription_TimeSpan_Dispose",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 66, Column: 5",
        "G_members" : [
          {
            "A_name" : "scheduler",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 67, Column: 9",
            "H_initialValue" : "TestScheduler(initialClock: 0)"
          },
          {
            "A_name" : "xs",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 69, Column: 9",
            "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
          },
          {
            "A_name" : "res",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 75, Column: 9",
            "H_initialValue" : "scheduler.start(disposed: 291) {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
          }
        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "testDelaySubscription_TimeSpan_Simple",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 18, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 19, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 21, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .completed(70)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 27, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 19, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 21, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .completed(70)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 27, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "testDelaySubscription_TimeSpan_Error",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 42, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 43, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 45, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 51, Column: 9",
        "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 43, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 45, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 51, Column: 9",
    "H_initialValue" : "scheduler.start {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "testDelaySubscription_TimeSpan_Dispose",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 66, Column: 5",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 67, Column: 9",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      },
      {
        "A_name" : "xs",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 69, Column: 9",
        "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
      },
      {
        "A_name" : "res",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 75, Column: 9",
        "H_initialValue" : "scheduler.start(disposed: 291) {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 67, Column: 9",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "xs",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 69, Column: 9",
    "H_initialValue" : "scheduler.createColdObservable([\n            .next(50, 42),\n            .next(60, 43),\n            .error(70, testError)\n            ])"
  },
  {
    "A_name" : "res",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 75, Column: 9",
    "H_initialValue" : "scheduler.start(disposed: 291) {\n            xs.delaySubscription(.seconds(30), scheduler: scheduler)\n        }"
  },
  {
    "A_name" : "testDelaySubscriptionReleasesResourcesOnComplete",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 90, Column: 9",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 91, Column: 13",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 91, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  },
  {
    "A_name" : "testDelaySubscriptionReleasesResourcesOnError",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 96, Column: 9",
    "G_members" : [
      {
        "A_name" : "scheduler",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 97, Column: 13",
        "H_initialValue" : "TestScheduler(initialClock: 0)"
      }
    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "scheduler",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Observable+DelaySubscriptionTests.swift - Line: 97, Column: 13",
    "H_initialValue" : "TestScheduler(initialClock: 0)"
  }
]