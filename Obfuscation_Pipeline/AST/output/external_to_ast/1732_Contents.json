[
  {
    "A_name" : "disposeBag",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 19, Column: 5",
    "H_initialValue" : "DisposeBag()"
  },
  {
    "A_name" : "sequenceThatFails",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 21, Column: 5",
    "H_initialValue" : "PublishSubject<String>()"
  },
  {
    "A_name" : "disposeBag",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 41, Column: 5",
    "H_initialValue" : "DisposeBag()"
  },
  {
    "A_name" : "sequenceThatFails",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 43, Column: 5",
    "H_initialValue" : "PublishSubject<String>()"
  },
  {
    "A_name" : "recoverySequence",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 44, Column: 5",
    "H_initialValue" : "PublishSubject<String>()"
  },
  {
    "A_name" : "disposeBag",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 69, Column: 5",
    "H_initialValue" : "DisposeBag()"
  },
  {
    "A_name" : "count",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 70, Column: 5",
    "H_initialValue" : "1"
  },
  {
    "A_name" : "sequenceThatErrors",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 72, Column: 5",
    "H_initialValue" : "Observable<String>.create { observer in\n        observer.onNext(\"üçé\")\n        observer.onNext(\"üçê\")\n        observer.onNext(\"üçä\")\n        \n        if count == 1 {\n            observer.onError(TestError.test)\n            print(\"Error encountered\")\n            count += 1\n        }\n        \n        observer.onNext(\"üê∂\")\n        observer.onNext(\"üê±\")\n        observer.onNext(\"üê≠\")\n        observer.onCompleted()\n        \n        return Disposables.create()\n    }"
  },
  {
    "A_name" : "disposeBag",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 103, Column: 5",
    "H_initialValue" : "DisposeBag()"
  },
  {
    "A_name" : "count",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 104, Column: 5",
    "H_initialValue" : "1"
  },
  {
    "A_name" : "sequenceThatErrors",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "Contents.swift - Line: 106, Column: 5",
    "H_initialValue" : "Observable<String>.create { observer in\n        observer.onNext(\"üçé\")\n        observer.onNext(\"üçê\")\n        observer.onNext(\"üçä\")\n        \n        if count < 5 {\n            observer.onError(TestError.test)\n            print(\"Error encountered\")\n            count += 1\n        }\n        \n        observer.onNext(\"üê∂\")\n        observer.onNext(\"üê±\")\n        observer.onNext(\"üê≠\")\n        observer.onCompleted()\n        \n        return Disposables.create()\n    }"
  }
]