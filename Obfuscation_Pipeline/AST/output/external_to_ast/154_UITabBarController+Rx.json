[
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 18, Column: 1",
    "G_members" : [
      {
        "A_name" : "willBeginCustomizing",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITabBarController+Rx.swift - Line: 21, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "willEndCustomizing",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITabBarController+Rx.swift - Line: 31, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "didEndCustomizing",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITabBarController+Rx.swift - Line: 43, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "willBeginCustomizing",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 21, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 22, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UITabBarControllerDelegate.tabBarController(_:willBeginCustomizing:)))\n            .map { a in\n                return try castOrThrow([UIViewController].self, a[1])\n        }"
  },
  {
    "A_name" : "willEndCustomizing",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 31, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 32, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UITabBarControllerDelegate.tabBarController(_:willEndCustomizing:changed:)))\n            .map { (a: [Any]) -> (viewControllers: [UIViewController], changed: Bool) in\n                let viewControllers = try castOrThrow([UIViewController].self, a[1])\n                let changed = try castOrThrow(Bool.self, a[2])\n                return (viewControllers, changed)\n        }"
  },
  {
    "A_name" : "viewControllers",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 34, Column: 17",
    "H_initialValue" : "try castOrThrow([UIViewController].self, a[1])"
  },
  {
    "A_name" : "changed",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 35, Column: 17",
    "H_initialValue" : "try castOrThrow(Bool.self, a[2])"
  },
  {
    "A_name" : "didEndCustomizing",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 43, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 44, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UITabBarControllerDelegate.tabBarController(_:didEndCustomizing:changed:)))\n            .map { (a: [Any]) -> (viewControllers: [UIViewController], changed: Bool) in\n                let viewControllers = try castOrThrow([UIViewController].self, a[1])\n                let changed = try castOrThrow(Bool.self, a[2])\n                return (viewControllers, changed)\n        }"
  },
  {
    "A_name" : "viewControllers",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 46, Column: 17",
    "H_initialValue" : "try castOrThrow([UIViewController].self, a[1])"
  },
  {
    "A_name" : "changed",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 47, Column: 17",
    "H_initialValue" : "try castOrThrow(Bool.self, a[2])"
  },
  {
    "A_name" : "Reactive",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 60, Column: 5",
    "G_members" : [
      {
        "A_name" : "delegate",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITabBarController+Rx.swift - Line: 64, Column: 5",
        "H_initialValue" : ""
      },
      {
        "A_name" : "didSelect",
        "B_kind" : "variable",
        "C_accessLevel" : "public",
        "D_attributes" : [

        ],
        "F_location" : "UITabBarController+Rx.swift - Line: 69, Column: 5",
        "H_initialValue" : ""
      }
    ]
  },
  {
    "A_name" : "delegate",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 64, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "didSelect",
    "B_kind" : "variable",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 69, Column: 5",
    "H_initialValue" : ""
  },
  {
    "A_name" : "source",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "UITabBarController+Rx.swift - Line: 70, Column: 9",
    "H_initialValue" : "delegate.methodInvoked(#selector(UITabBarControllerDelegate.tabBarController(_:didSelect:)))\n            .map { a in\n                return try castOrThrow(UIViewController.self, a[1])\n        }"
  }
]