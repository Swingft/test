rules:
  # =======================================================================
  # 카테고리 1: 직접 참조 및 진입점
  # =======================================================================
  - id: "EXTERNAL_FILE_REFERENCE"
    description: "리소스 또는 Obj-C 헤더에서 직접 참조되는 심볼"
    pattern:
      - find: { target: S }
      - where:
          - "S.isReferencedByExternalFile == true"

  - id: "OS_ENTRY_POINT_DELEGATES"
    description: "AppDelegate, SceneDelegate 등 OS가 이름으로 직접 참조하는 핵심 클래스"
    pattern:
      - find: { target: S }
      - where:
          - "S.name in ['AppDelegate', 'SceneDelegate', 'WindowSceneDelegate']"

  - id: "OBJC_ATTRIBUTE"
    description: "@objc 또는 @objcMembers 속성으로 Objective-C 런타임에 노출된 심볼"
    pattern:
      - find: { target: S }
      - where:
          - "S.attributes contains_any ['@objc', '@objcMembers']"

  # =======================================================================
  # 카테고리 2: 상속 및 구현
  # =======================================================================
  - id: "UI_FRAMEWORK_SUBCLASSES"
    description: "주요 UI 프레임워크 클래스의 모든 서브클래스"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind in ['class', 'struct']"
          - "C.typeInheritanceChain contains_any ['UIViewController', 'UINavigationController', 'UITabBarController', 'UIView', 'UIResponder', 'UITableViewCell', 'UICollectionViewCell', 'UITableViewController', 'UICollectionReusableView', 'UIControl', 'UIScrollView', 'UIStackView', 'UIButton', 'UILabel', 'UIImageView', 'UITextField', 'UITextView', 'UISearchBar', 'UISegmentedControl', 'UISwitch', 'UISlider', 'UIPickerView', 'UIDatePicker', 'UIPageControl', 'UIStepper', 'UIActivityIndicatorView', 'UIProgressView', 'UIAlertController', 'UIPopoverPresentationController', 'UIGestureRecognizer', 'NSViewController', 'NSView', 'NSControl', 'NSTableView', 'NSCollectionView']"

  # =======================================================================
  # 카테고리 2-1: AVFoundation 프레임워크 (추가)
  # =======================================================================
  - id: "AVFOUNDATION_SUBCLASSES"
    description: "AVFoundation 주요 클래스의 서브클래스"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind in ['class', 'struct']"
          - "C.typeInheritanceChain contains_any ['AVCaptureSession', 'AVCaptureDevice', 'AVCaptureInput', 'AVCaptureOutput', 'AVCaptureConnection', 'AVCapturePhotoOutput', 'AVCaptureVideoDataOutput', 'AVCaptureMetadataOutput', 'AVCaptureFileOutput', 'AVCaptureMovieFileOutput', 'AVAsset', 'AVPlayer', 'AVPlayerItem', 'AVPlayerLayer']"

  - id: "AVFOUNDATION_DELEGATE_METHODS"
    description: "AVFoundation 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['captureOutput', 'fileOutput', 'metadataOutput', 'photoOutput', 'capturePhoto', 'didFinishProcessingPhoto', 'didFinishRecordingTo', 'didStartRecordingTo', 'didPauseRecording', 'didResumeRecording']"
          - "M.typeInheritanceChain contains_any ['AVCapturePhotoCaptureDelegate', 'AVCaptureFileOutputRecordingDelegate', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'AVCaptureMetadataOutputObjectsDelegate']"

  - id: "SYSTEM_LIFECYCLE_METHODS"
    description: "UIKit/AppKit 생명주기 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['viewDidLoad', 'viewWillAppear', 'viewDidAppear', 'viewWillDisappear', 'viewDidDisappear', 'viewWillLayoutSubviews', 'viewDidLayoutSubviews', 'viewWillTransition', 'loadView', 'viewIsAppearing', 'willMove', 'didMove', 'updateViewConstraints', 'encodeRestorableState', 'decodeRestorableState', 'awakeFromNib', 'prepareForInterfaceBuilder', 'didReceiveMemoryWarning', 'traitCollectionDidChange', 'preferredStatusBarStyle', 'prefersStatusBarHidden', 'layoutSubviews', 'draw', 'setNeedsLayout', 'layoutIfNeeded', 'setNeedsDisplay']"
          - "M.typeInheritanceChain contains_any ['UIViewController', 'UIView', 'UIResponder', 'NSViewController', 'NSView']"

  - id: "TOUCH_EVENT_METHODS"
    description: "터치 및 제스처 이벤트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['touchesBegan', 'touchesMoved', 'touchesEnded', 'touchesCancelled', 'touchesEstimatedPropertiesUpdated', 'pressesBegan', 'pressesChanged', 'pressesEnded', 'pressesCancelled', 'motionBegan', 'motionEnded', 'motionCancelled', 'canPerformAction', 'canBecomeFirstResponder', 'becomeFirstResponder', 'canResignFirstResponder', 'resignFirstResponder']"
          - "M.typeInheritanceChain contains_any ['UIResponder', 'UIView', 'UIViewController']"

  - id: "APPDELEGATE_SCENEDELEGATE_METHODS"
    description: "AppDelegate 및 SceneDelegate 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['application', 'applicationWillFinishLaunching', 'applicationDidFinishLaunching', 'applicationDidBecomeActive', 'applicationWillResignActive', 'applicationDidEnterBackground', 'applicationWillEnterForeground', 'applicationWillTerminate', 'applicationDidReceiveMemoryWarning', 'scene', 'sceneWillConnect', 'sceneDidDisconnect', 'sceneDidBecomeActive', 'sceneWillResignActive', 'sceneWillEnterForeground', 'sceneDidEnterBackground', 'openURLContexts', 'continueUserActivity']"
          - "M.parent.name in ['AppDelegate', 'SceneDelegate']"

  # =======================================================================
  # 카테고리 3: UIKit 델리게이트 패턴
  # =======================================================================
  - id: "UITABLEVIEW_DELEGATE_DATASOURCE"
    description: "UITableView 델리게이트/데이터소스 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['numberOfSections', 'numberOfRowsInSection', 'cellForRowAt', 'titleForHeaderInSection', 'titleForFooterInSection', 'canEditRowAt', 'canMoveRowAt', 'commit', 'moveRowAt', 'willDisplay', 'didEndDisplaying', 'heightForRowAt', 'heightForHeaderInSection', 'heightForFooterInSection', 'estimatedHeightForRowAt', 'estimatedHeightForHeaderInSection', 'estimatedHeightForFooterInSection', 'viewForHeaderInSection', 'viewForFooterInSection', 'willSelectRowAt', 'willDeselectRowAt', 'didSelectRowAt', 'didDeselectRowAt', 'editingStyleForRowAt', 'shouldIndentWhileEditingRowAt', 'willBeginEditingRowAt', 'didEndEditingRowAt', 'contextMenuConfigurationForRowAt']"
          - "M.typeInheritanceChain contains_any ['UITableViewDelegate', 'UITableViewDataSource', 'UIViewController', 'UITableViewController']"

  - id: "UICOLLECTIONVIEW_DELEGATE_DATASOURCE"
    description: "UICollectionView 델리게이트/데이터소스 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['numberOfSections', 'numberOfItemsInSection', 'cellForItemAt', 'viewForSupplementaryElementOfKind', 'canMoveItemAt', 'moveItemAt', 'willDisplay', 'willDisplaySupplementaryView', 'didEndDisplaying', 'didEndDisplayingSupplementaryView', 'shouldSelectItemAt', 'shouldDeselectItemAt', 'didSelectItemAt', 'didDeselectItemAt', 'contextMenuConfigurationForItemAt', 'sizeForItemAt']"
          - "M.typeInheritanceChain contains_any ['UICollectionViewDelegate', 'UICollectionViewDataSource', 'UICollectionViewDelegateFlowLayout', 'UIViewController']"

  - id: "UISCROLLVIEW_DELEGATE"
    description: "UIScrollView 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['scrollViewDidScroll', 'scrollViewWillBeginDragging', 'scrollViewWillEndDragging', 'scrollViewDidEndDragging', 'scrollViewShouldScrollToTop', 'scrollViewDidScrollToTop', 'scrollViewWillBeginDecelerating', 'scrollViewDidEndDecelerating', 'viewForZooming', 'scrollViewWillBeginZooming', 'scrollViewDidEndZooming', 'scrollViewDidZoom']"
          - "M.typeInheritanceChain contains_any ['UIScrollViewDelegate', 'UIViewController', 'UITableViewController', 'UICollectionViewController']"

  - id: "UITEXTFIELD_DELEGATE"
    description: "UITextField 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['textFieldShouldBeginEditing', 'textFieldDidBeginEditing', 'textFieldShouldEndEditing', 'textFieldDidEndEditing', 'textField', 'textFieldShouldClear', 'textFieldShouldReturn', 'textFieldDidChangeSelection']"
          - "M.typeInheritanceChain contains_any ['UITextFieldDelegate', 'UIViewController']"

  - id: "UITEXTVIEW_DELEGATE"
    description: "UITextView 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['textViewShouldBeginEditing', 'textViewShouldEndEditing', 'textViewDidBeginEditing', 'textViewDidEndEditing', 'textViewDidChange', 'textViewDidChangeSelection']"
          - "M.typeInheritanceChain contains_any ['UITextViewDelegate', 'UIViewController']"

  - id: "UISEARCHBAR_DELEGATE"
    description: "UISearchBar 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['searchBarShouldBeginEditing', 'searchBarTextDidBeginEditing', 'searchBarShouldEndEditing', 'searchBarTextDidEndEditing', 'searchBar', 'searchBarCancelButtonClicked', 'searchBarSearchButtonClicked', 'searchBarTextDidChange']"
          - "M.typeInheritanceChain contains_any ['UISearchBarDelegate', 'UIViewController']"

  # =======================================================================
  # 카테고리 4: 시스템 타입
  # =======================================================================
  - id: "SYSTEM_TYPE_NAMES"
    description: "Swift/Foundation/UIKit 표준 타입 이름"
    pattern:
      - find: { target: S }
      - where:
          - "S.isSystemSymbol == true"

  # =======================================================================
  # 카테고리 5: 프로토콜 요구사항
  # =======================================================================
  - id: "STANDARD_PROTOCOL_REQUIREMENTS"
    description: "표준 프로토콜이 요구하는 프로퍼티/메서드"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'method']"
          - "P.name in ['id', 'errorDescription', 'recoverySuggestion', 'underlyingError', 'failureReason', 'helpAnchor', 'description', 'debugDescription', 'rawValue', 'hashValue', 'hash', 'allCases', 'localizedDescription']"

  - id: "CODABLE_PROPERTIES"
    description: "Codable을 준수하는 타입의 모든 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.parent.typeInheritanceChain contains_any ['Codable', 'Decodable', 'Encodable']"

  - id: "CODABLE_CODING_KEYS"
    description: "Codable의 CodingKeys enum"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind in ['enum', 'enumCase']"
          - "E.name == 'CodingKeys'"

  - id: "RAWREPRESENTABLE_ENUM_CASES"
    description: "RawRepresentable을 채택한 enum의 모든 case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.parent.typeInheritanceChain contains 'RawRepresentable'"

  - id: "CODABLE_ENUM_CASES"
    description: "Codable을 채택한 enum의 모든 case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.parent.typeInheritanceChain contains_any ['Codable', 'Decodable', 'Encodable']"

  - id: "CASEITERABLE_ENUM_CASES"
    description: "CaseIterable을 채택한 enum의 모든 case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.parent.typeInheritanceChain contains 'CaseIterable'"

  # =======================================================================
  # 카테고리 6: 범용 프로퍼티 이름 (대폭 확장)
  # =======================================================================
  - id: "VERY_COMMON_PROPERTY_NAMES_CORE"
    description: "가장 기본적인 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['id', 'key', 'name', 'title', 'message', 'data', 'date', 'url', 'path', 'token', 'user', 'error', 'result', 'value', 'type', 'status', 'state', 'image', 'text', 'description', 'info', 'content', 'body', 'header', 'footer', 'label', 'placeholder']"

  - id: "VERY_COMMON_PROPERTY_NAMES_UI"
    description: "UI 관련 매우 흔한 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['view', 'button', 'imageView', 'titleLabel', 'tableView', 'collectionView', 'scrollView', 'stackView', 'contentView', 'backgroundView', 'containerView', 'navigationController', 'viewController', 'window', 'cell', 'alert', 'appearance', 'layout', 'colors', 'font', 'color', 'backgroundColor', 'tintColor', 'textColor']"

  - id: "VERY_COMMON_PROPERTY_NAMES_LAYOUT"
    description: "레이아웃 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['frame', 'bounds', 'center', 'size', 'width', 'height', 'top', 'bottom', 'left', 'right', 'leading', 'trailing', 'spacing', 'padding', 'margin', 'inset', 'offset', 'cornerRadius', 'borderWidth', 'lineWidth', 'lineHeight', 'lineSpacing', 'itemSize', 'itemSpacing', 'sectionInset', 'contentInset', 'contentOffset', 'contentSize', 'intrinsicContentSize']"

  - id: "VERY_COMMON_PROPERTY_NAMES_STATE"
    description: "상태 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['isEnabled', 'isHidden', 'isSelected', 'isHighlighted', 'isOpaque', 'isFocused', 'isLoading', 'isValid', 'isEmpty', 'isEditing', 'isAnimating', 'isUserInteractionEnabled', 'alpha', 'tag', 'index', 'count', 'capacity', 'length', 'duration', 'interval', 'delay', 'progress']"

  - id: "VERY_COMMON_PROPERTY_NAMES_COLLECTION"
    description: "컬렉션/배열 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['items', 'item', 'elements', 'element', 'array', 'arr', 'list', 'dictionary', 'dict', 'set', 'collection', 'dataSource', 'sections', 'section', 'rows', 'row', 'columns', 'column', 'cells', 'cell', 'nodes', 'node', 'children', 'child', 'parent', 'root', 'head', 'tail', 'first', 'last', 'current', 'next', 'previous', 'prev']"

  - id: "VERY_COMMON_PROPERTY_NAMES_NETWORKING"
    description: "네트워킹/API 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['request', 'response', 'session', 'task', 'url', 'urlRequest', 'urlSession', 'baseURL', 'endpoint', 'endPoint', 'path', 'query', 'parameters', 'headers', 'method', 'statusCode', 'errorCode', 'errorMessage', 'timeout', 'httpMethod', 'httpBody', 'httpHeaders', 'contentType', 'boundary', 'accessToken', 'refreshToken']"

  - id: "VERY_COMMON_PROPERTY_NAMES_STORAGE"
    description: "데이터 저장 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['storage', 'cache', 'caches', 'database', 'context', 'store', 'userDefaults', 'keychain', 'fileManager', 'documentDirectory', 'cacheDirectory', 'temporaryDirectory', 'filePath', 'fileName', 'fileURL', 'directory', 'container']"

  - id: "VERY_COMMON_PROPERTY_NAMES_DELEGATE"
    description: "델리게이트/콜백 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['delegate', 'dataSource', 'handler', 'callback', 'completion', 'completionHandler', 'action', 'target', 'selector', 'observer', 'coordinator', 'router', 'presenter']"

  - id: "VERY_COMMON_PROPERTY_NAMES_VIEWMODEL"
    description: "MVVM/아키텍처 패턴 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['viewModel', 'model', 'repository', 'service', 'useCase', 'provider', 'manager', 'factory', 'builder', 'validator', 'formatter', 'parser', 'encoder', 'decoder']"

  - id: "VERY_COMMON_PROPERTY_NAMES_REACTIVE"
    description: "Reactive 프로그래밍 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['disposeBag', 'cancellable', 'cancellables', 'subscription', 'subscriptions', 'publisher', 'subject', 'observable', 'observer', 'subscriber', 'sink', 'binding']"

  - id: "VERY_COMMON_PROPERTY_NAMES_TIME"
    description: "시간/날짜 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['date', 'timestamp', 'time', 'timeInterval', 'duration', 'delay', 'timeout', 'createdAt', 'updatedAt', 'deletedAt', 'startTime', 'endTime', 'startDate', 'endDate', 'calendar', 'dateFormatter', 'timeZone', 'locale']"

  - id: "VERY_COMMON_PROPERTY_NAMES_GENERIC"
    description: "일반적인 범용 단어"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['identifier', 'uuid', 'uid', 'uniqueID', 'indexPath', 'field', 'fields', 'attribute', 'attributes', 'property', 'properties', 'metadata', 'settings', 'configuration', 'config', 'options', 'preferences', 'defaults', 'parameters', 'params', 'arguments', 'args']"

  - id: "VERY_COMMON_PROPERTY_NAMES_CONTROL_FLOW"
    description: "제어 흐름 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['start', 'stop', 'pause', 'resume', 'finish', 'cancel', 'reset', 'restart', 'retry', 'success', 'failure', 'completed', 'cancelled', 'suspended', 'running', 'waiting', 'ready', 'none', 'unknown', 'undefined', 'null', 'zero', 'empty', 'full', 'max', 'min', 'default', 'custom']"

  - id: "VERY_COMMON_PROPERTY_NAMES_USER"
    description: "사용자 데이터 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['user', 'userID', 'userInfo', 'userData', 'username', 'userName', 'nickname', 'nickName', 'email', 'password', 'phone', 'profile', 'profileImage', 'profileImageURL', 'avatar', 'avatarURL', 'bio', 'age', 'gender', 'birthday', 'location']"

  # =======================================================================
  # 카테고리 7: 범용 메서드 이름
  # =======================================================================
  - id: "COMMON_METHOD_NAMES_SETUP"
    description: "초기화/설정 메서드 (UIKit 서브클래스만)"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['configure', 'setup', 'setupUI', 'setupViews', 'setupConstraints', 'setupLayout', 'initialize', 'prepareForReuse', 'prepare', 'reset']"
          - "M.typeInheritanceChain contains_any ['UIView', 'UIViewController', 'UITableViewCell', 'UICollectionViewCell', 'UICollectionReusableView']"

  - id: "COMMON_METHOD_NAMES_UPDATE"
    description: "업데이트 메서드 (UIKit 서브클래스만)"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['update', 'updateUI', 'updateViews', 'refresh', 'refreshUI', 'refreshData', 'reload', 'reloadData', 'redraw', 'render']"
          - "M.typeInheritanceChain contains_any ['UIView', 'UIViewController', 'UITableViewCell', 'UICollectionViewCell']"

  - id: "COMMON_METHOD_NAMES_CRUD"
    description: "CRUD 및 제어 관련 범용 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['create', 'read', 'update', 'delete', 'save', 'load', 'fetch', 'get', 'set', 'add', 'addInput', 'addOutput', 'remove', 'removeInput', 'removeOutput', 'insert', 'append', 'pop', 'push', 'clear', 'removeAll', 'start', 'startCapture', 'startRecording', 'startAnimation', 'stop', 'stopCapture', 'stopRecording', 'stopAnimation', 'pause', 'resume', 'reset', 'record', 'beginConfiguration', 'commitConfiguration', 'observeValue', 'requestAuthorization']"

  - id: "COMMON_METHOD_NAMES_ACTIONS"
    description: "액션/이벤트 핸들러 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['buttonTapped', 'buttonPressed', 'buttonClicked', 'buttonAction', 'handleTap', 'handlePress', 'handleAction', 'didTap', 'didPress', 'action', 'handleEvent', 'addButtonTapped', 'closeButtonTapped', 'doneButtonTapped', 'cancelButtonTapped', 'saveButtonTapped']"

  - id: "COMMON_METHOD_NAMES_NAVIGATION"
    description: "네비게이션 관련 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['navigate', 'push', 'pop', 'present', 'dismiss', 'show', 'hide', 'showAlert', 'showError', 'showMessage', 'showLoading', 'hideLoading']"

  # =======================================================================
  # 카테고리 8: 테스트 관련
  # =======================================================================
  - id: "TEST_CLASSES"
    description: "XCTestCase를 상속하는 모든 테스트 클래스"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind == 'class'"
          - "C.typeInheritanceChain contains 'XCTestCase'"

  - id: "TEST_CLASSES_BY_NAME"
    description: "이름으로 판단하는 테스트 클래스 (XCTestCase 상속만)"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind == 'class'"
          - "C.name contains 'Test'"
          - "C.typeInheritanceChain contains 'XCTestCase'"

  - id: "TEST_METHODS"
    description: "test로 시작하는 모든 테스트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name starts_with 'test'"

  - id: "TEST_SETUP_TEARDOWN"
    description: "테스트 setup/teardown 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['setUp', 'tearDown', 'setUpWithError', 'tearDownWithError']"

  - id: "TEST_CLASS_ALL_MEMBERS"
    description: "테스트 클래스 내부의 모든 멤버"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind in ['property', 'method']"
          - "M.parent.typeInheritanceChain contains 'XCTestCase'"

  - id: "TEST_COMMON_PROPERTIES"
    description: "테스트에서 자주 쓰는 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['sut', 'systemUnderTest', 'expectation', 'expectations', 'mockData', 'testData', 'stub', 'mock', 'spy', 'fake', 'dummy', 'dummy2', 'dummy3', 'dummy4']"

  # =======================================================================
  # 카테고리 9: 델리게이트 패턴 (프로퍼티)
  # =======================================================================
  - id: "DELEGATE_PATTERN_PROPERTIES"
    description: "델리게이트 패턴 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name contains 'delegate'"

  - id: "DELEGATE_PATTERN_PROPERTIES_DATASOURCE"
    description: "데이터소스 패턴 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name contains 'dataSource'"

  # =======================================================================
  # 카테고리 10: 핵심 언어 기능
  # =======================================================================
  - id: "INITIALIZERS_AND_OPERATORS"
    description: "모든 생성자 및 연산자"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['initializer', 'operator']"

  - id: "EQUATABLE_OPERATORS"
    description: "Equatable 프로토콜의 == 연산자"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name == '=='"

# =======================================================================
  # 카테고리 11: NSCoding 관련
  # =======================================================================
  - id: "NSCODING_CLASSES_AND_MEMBERS"
    description: "NSCoding/NSSecureCoding을 채택한 클래스의 모든 멤버"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind in ['property', 'method']"
          - "M.parent.typeInheritanceChain contains_any ['NSCoding', 'NSSecureCoding']"

  # =======================================================================
  # 카테고리 12: 데이터베이스 관련
  # =======================================================================
  - id: "MODEL_ANNOTATION_CLASSES"
    description: "@Model 어노테이션이 붙은 클래스의 모든 멤버 (SwiftData)"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind in ['property', 'method']"
          - "M.parent.attributes contains '@Model'"

  - id: "NSMANAGED_PROPERTIES"
    description: "@NSManaged 속성이 붙은 프로퍼티 (CoreData)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.attributes contains '@NSManaged'"

  - id: "NSMANAGEDOBJECT_SUBCLASSES"
    description: "NSManagedObject 서브클래스의 모든 멤버"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind in ['property', 'method']"
          - "M.parent.typeInheritanceChain contains 'NSManagedObject'"

  # =======================================================================
  # 카테고리 13: SwiftUI 관련
  # =======================================================================
  - id: "SWIFTUI_VIEW_TYPES"
    description: "SwiftUI View 관련 타입들"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['class', 'struct']"
          - "S.typeInheritanceChain contains 'View'"

  - id: "SWIFTUI_VIEW_BODY"
    description: "SwiftUI View의 body 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name == 'body'"
          - "P.parent.typeInheritanceChain contains 'View'"

  - id: "SWIFTUI_COMMON_PROPERTIES"
    description: "SwiftUI에서 관례적으로 사용되는 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['body', 'content', 'binding', 'dismiss', 'preview', 'previews', 'liveValue', 'testValue', 'previewValue', 'placeholder', 'label', 'destination']"

  - id: "SWIFTUI_ENVIRONMENT_PROPERTIES"
    description: "SwiftUI Environment/State 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.attributes contains_any ['@Environment', '@EnvironmentObject', '@StateObject', '@ObservedObject', '@State', '@Binding', '@Published']"

  - id: "SWIFTUI_ENVIRONMENT_KEYS"
    description: "SwiftUI Environment 키"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class']"
          - "S.name in ['EnvironmentValues', 'DependencyValues', 'Key']"

  - id: "SWIFTUI_APP_PROTOCOL"
    description: "SwiftUI App 프로토콜을 채택한 구조체"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'struct'"
          - "S.typeInheritanceChain contains 'App'"

  # =======================================================================
  # 카테고리 14: 자료구조 구현 디테일
  # =======================================================================
  - id: "COORDINATOR_PATTERN_TYPES"
    description: "Coordinator 패턴 관련 타입"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind in ['class', 'protocol']"
          - "C.name contains 'Coordinator'"

  - id: "DATA_STRUCTURE_TYPES"
    description: "자료구조 내부 구현 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['class', 'struct']"
          - "S.name in ['Node', 'LRUCache', 'Cache', 'CacheNode', 'LinkedList', 'LinkedListNode', 'Queue', 'Stack', 'Tree', 'TreeNode', 'Graph', 'GraphNode', 'Heap']"

  - id: "DATA_STRUCTURE_MEMBERS"
    description: "자료구조 내부 멤버 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['head', 'tail', 'prev', 'previous', 'next', 'node', 'currentNode', 'newNode', 'capacity', 'maxLength', 'minLength', 'front', 'rear', 'priority']"

  - id: "DATA_STRUCTURE_METHODS"
    description: "자료구조 내부 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['moveToHead', 'moveToFront', 'moveToTail', 'popFirst', 'popLast', 'pushFront', 'pushBack', 'prepend', 'dequeue', 'enqueue', 'peek', 'search', 'find', 'contains']"

  # =======================================================================
  # 카테고리 15: CoreGraphics 구조체
  # =======================================================================
  - id: "COREGRAPHICS_STRUCT_MEMBERS"
    description: "CGAffineTransform 등 CoreGraphics 구조체의 멤버"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['a', 'b', 'c', 'd', 'tx', 'ty', 'x', 'y', 'width', 'height']"
          - "P.parent.name in ['CGAffineTransform', 'CGPoint', 'CGSize', 'CGRect']"

  - id: "COREGRAPHICS_TRANSFORM_MEMBERS_EXTENDED"
    description: "CGAffineTransform의 행렬 성분"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['m1', 'm11', 'm12', 'm2']"
          - "P.parent.name == 'CGAffineTransform'"

  # =======================================================================
  # 카테고리 16: 추가 시스템 타입
  # =======================================================================
  - id: "FOUNDATION_NOTIFICATION_NAMES"
    description: "Notification.Name 확장"
    pattern:
      - find: { target: S }
      - where:
          - "S.name == 'Notification.Name'"

  - id: "REACTIVE_EXTENSIONS"
    description: "Reactive 확장"
    pattern:
      - find: { target: S }
      - where:
          - "S.name == 'Reactive'"

  - id: "ATTRIBUTED_STRING_PROPERTIES"
    description: "AttributedString 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['attrString', 'paragraphStyle']"

  - id: "SYSTEM_COLLECTION_TYPES"
    description: "Swift 시스템 컬렉션 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class']"
          - "S.name in ['Array', 'Sequence']"

  - id: "MAPKIT_PROTOCOL_REQUIREMENTS"
    description: "MapKit 프로토콜 요구사항"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['coordinate', 'region', 'placemark']"

  # =======================================================================
  # 카테고리 17: IBOutlet/IBAction
  # =======================================================================
  - id: "IBOUTLET_PROPERTIES"
    description: "@IBOutlet 속성이 붙은 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.attributes contains '@IBOutlet'"

  - id: "IBACTION_METHODS"
    description: "@IBAction 속성이 붙은 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.attributes contains '@IBAction'"

  - id: "IBINSPECTABLE_PROPERTIES"
    description: "@IBInspectable 속성이 붙은 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.attributes contains '@IBInspectable'"

  # =======================================================================
  # 카테고리 18: 프로젝트별 커스텀 패턴
  # =======================================================================
  - id: "BUSINESS_HOURS_PROPERTIES"
    description: "비즈니스 시간 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['business_hours', 'last_order', 'holiday', 'rest_hours', 'parking', 'cost_range']"

  - id: "RESTAURANT_PROPERTIES"
    description: "레스토랑 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['restaurant_name', 'feeling_tags', 'image_urls', 'star', 'approved']"

  - id: "TIMER_PROPERTIES"
    description: "타이머 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['timer', 'startedTime', 'learningTime', 'studyTime', 'todayTime', 'totalTime', 'weekday', 'weekdays', 'weekly', 'daily', 'weeklyStudyLog', 'dailyStudyLog']"

  - id: "CALENDAR_DATE_PROPERTIES"
    description: "캘린더/날짜 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['calendar', 'calendarView', 'selectedDate', 'day', 'weekday', 'hour', 'minute', 'second', 'yyyyMMdd', 'yyyyMMddTHHmmSS', 'yyyyMMddhhmmssZZZZZ']"

  - id: "VALIDATION_ERROR_TYPES"
    description: "검증 에러 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['emptyViolation', 'lengthViolation', 'emojiContained', 'duplicated']"

  - id: "LOCALIZATION_KEYS"
    description: "로컬라이제이션 키 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['categoryAddMessage', 'categoryErrorTitle', 'categoryNameCountError', 'categoryNameIsDuplicated', 'deleteAlertMessage', 'imageNotSafeMessage', 'imageNotSafeTitle', 'signoutMessage', 'skipLoginTitle', 'timeZoneMessage', 'withdrawalMessage', 'logoSubTitle', 'learningTitle', 'dailyStudyLog', 'weeklyStudyLog']"

  - id: "ACTION_SHEET_PROPERTIES"
    description: "Alert/ActionSheet 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['alert', 'actionSheet', 'actions', 'cancelAction']"

  - id: "SOCIAL_FOLLOW_PROPERTIES"
    description: "소셜 팔로우 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['follow', 'unfollow', 'followingData', 'followingID', 'friend', 'friendNickname', 'alreadyFriend']"

  - id: "AUTH_LOGIN_PROPERTIES"
    description: "인증/로그인 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['appleLogin', 'googleLogin', 'auth', 'identityToken', 'signOut', 'signout', 'withdrawal', 'developer']"

  - id: "CATEGORY_PROPERTIES"
    description: "카테고리 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['category', 'categories', 'categoryID', 'primaryCategory', 'addCategory', 'deleteCategory', 'modifyCategory']"

  - id: "CHART_VIEW_PROPERTIES"
    description: "차트 뷰 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['dailyData', 'weeklyLearingChart']"

  - id: "PROFILE_SETTINGS_PROPERTIES"
    description: "프로필 설정 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['myNickname', 'editProfile', 'profileSetting', 'myPage']"

  - id: "UI_CONTROL_METHODS"
    description: "UI 컨트롤 액션 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['addFriendButtonTapped', 'categorySettingButtonDidTapped', 'cancleButtonDidTapped', 'closeButtonTapped', 'dismissButtonDidTapped', 'doneButtonTapped', 'followButtonDidTapped', 'loginSkipButtonDidTapped', 'myPageButtonTapped', 'profileImageViewTapped', 'saveButtonDidTapped', 'signUpButtonTapped', 'timerButtonAction', 'unfollowButtonDidTapped', 'colorWellChanged', 'handleAuthorizationAppleIDButtonPress', 'handleGoogleLoginButton']"

  - id: "REFRESH_UPDATE_METHODS"
    description: "새로고침/업데이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['refreshFreindsStatus', 'refreshStudyLog', 'didChangeTimeZone', 'didChangeValue', 'proximityDidChange']"

  - id: "COMMON_ENUM_CASES"
    description: "공통 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['yes', 'no', 'cancel', 'done', 'ok', 'close', 'delete', 'save', 'none', 'unknown', 'general']"

  - id: "JSON_API_PROPERTIES"
    description: "JSON/API 응답에서 흔히 사용되는 프로퍼티 (확장)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['accessToken', 'refreshToken', 'email', 'nickname', 'profileImageURL', 'createdAt', 'updatedAt', 'timestamp', 'statusCode', 'errorMessage', 'categories', 'items', 'myself', 'cost']"

  # =======================================================================
  # 카테고리 19: 델리게이트 메서드 (추가 커버리지)
  # =======================================================================
  - id: "REUSABLE_CELL_METHODS"
    description: "재사용 가능한 셀 관련 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['dequeueReusableCell', 'register', 'setCollectionViewLayout']"

  - id: "NOTIFICATION_OBSERVER_METHODS"
    description: "Notification 옵저버 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['didChangeTimeZone', 'didChangeValue', 'proximityDidChange']"

  # =======================================================================
  # 카테고리 20: 추가 범용 식별자
  # =======================================================================
  - id: "VERY_COMMON_PROPERTY_NAMES_EXTENDED"
    description: "추가로 매우 흔한 프로퍼티 이름들"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['rect', 'isSelected', 'custom', 'menu', 'etc', 'subject', 'subject']"

  - id: "PROTOCOL_SUFFIX_TYPES"
    description: "Protocol로 끝나는 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'protocol'"
          - "S.name contains 'Protocol'"

  - id: "SECTION_ENUM_TYPES"
    description: "Section enum 타입"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind in ['enum', 'enumCase']"
          - "E.name == 'Section'"

  - id: "PATHS_ENUM_TYPES"
    description: "Paths enum 타입"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind in ['enum', 'enumCase']"
          - "E.name == 'Paths'"

  - id: "COMMON_VARIABLE_NAMES"
    description: "매우 범용적인 변수 이름"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['picker', 'device', 'general', 'motion', 'orientation', 'etc', 'ping', 'search', 'tryAagin']"

  # =======================================================================
  # 카테고리 2-1: AVFoundation 프레임워크 (추가)
  # =======================================================================
  - id: "AVFOUNDATION_SUBCLASSES"
    description: "AVFoundation 주요 클래스의 서브클래스"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind in ['class', 'struct']"
          - "C.typeInheritanceChain contains_any ['AVCaptureSession', 'AVCaptureDevice', 'AVCaptureInput', 'AVCaptureOutput', 'AVCaptureConnection', 'AVCapturePhotoOutput', 'AVCaptureVideoDataOutput', 'AVCaptureMetadataOutput', 'AVCaptureFileOutput', 'AVCaptureMovieFileOutput', 'AVAsset', 'AVPlayer', 'AVPlayerItem', 'AVPlayerLayer']"

  - id: "AVFOUNDATION_DELEGATE_METHODS"
    description: "AVFoundation 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['captureOutput', 'fileOutput', 'metadataOutput', 'photoOutput', 'capturePhoto', 'didFinishProcessingPhoto', 'didFinishRecordingTo', 'didStartRecordingTo', 'didPauseRecording', 'didResumeRecording']"
          - "M.typeInheritanceChain contains_any ['AVCapturePhotoCaptureDelegate', 'AVCaptureFileOutputRecordingDelegate', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'AVCaptureMetadataOutputObjectsDelegate']"
  - id: "VERY_COMMON_PROPERTY_NAMES_MEDIA"
    description: "미디어/카메라 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['session', 'device', 'input', 'inputs', 'output', 'outputs', 'connection', 'preset', 'format', 'settings', 'metadata', 'buffer', 'buffers', 'imageBuffer', 'pixelBufferPool', 'pixelBufferAttributes', 'sampleBuffer', 'asset', 'imageData', 'jpegData', 'ciImage', 'croppedImage', 'photoOutput', 'videoOutput', 'audioOutput', 'metadataOutput', 'fileOutput', 'depthDataOutput', 'captureOutput', 'previewLayer', 'renderer', 'videoTracks', 'audioTracks', 'videoSettings', 'audioSettings']"

  - id: "VERY_COMMON_PROPERTY_NAMES_CAMERA"
    description: "카메라 설정 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['focusMode', 'exposureMode', 'flashMode', 'torchMode', 'whiteBalanceMode', 'lensPosition', 'exposureDuration', 'iso', 'whiteBalanceGains', 'whiteBalanceTemperature', 'whiteBalanceTint', 'videoZoomFactor', 'aspectRatio', 'frameRate', 'maxFrameRate', 'minFrameRate', 'frameDuration', 'dimensions', 'videoDimensions', 'cleanAperture', 'layoutSize', 'viewport', 'timeRange', 'timescale', 'videoTime', 'currentTime', 'isRecording', 'isRunning', 'isReady', 'isSupported', 'isFocusPointOfInterestSupported', 'isAutoFocusEnabled', 'isFlashAvailable', 'isTorchAvailable', 'isAdjustingFocus', 'isAdjustingExposure', 'isAdjustingWhiteBalance']"

  - id: "VERY_COMMON_PROPERTY_NAMES_CAPTURE"
    description: "캡처/녹화 관련 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['deviceTypes', 'devicePosition', 'authorizationStatus', 'metadataObjectTypes', 'metadataObjectsDelegate', 'fileType', 'filename', 'outputURL', 'photoQualityPrioritization', 'automaticallyConfiguresApplicationAudioSession', 'autoenablesDefaultLighting']"


  - id: "COMMON_ENUM_CASES_EXTENDED"
    description: "추가 공통 enum case (카메라/미디어)"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['auto', 'manual', 'off', 'on', 'active', 'inactive', 'authorized', 'notAuthorized', 'notDetermined', 'denied', 'restricted', 'photo', 'video', 'audio', 'movie', 'cinematic', 'square', 'standard', 'custom', 'twitter', 'clip', 'clamped', 'microphone', 'wideAngleCamera', 'ultraWideAngleCamera', 'telephotoCamera', 'dualCamera', 'duoCamera', 'dualWideCamera', 'tripleCamera', 'arKit', 'arKitWithoutAudio', 'videoWithoutAudio', 'videoWithAudio']"

  - id: "AVFOUNDATION_TYPES"
    description: "AVFoundation 주요 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['class', 'struct']"
          - "S.name in ['AVCaptureDevice', 'AVCaptureSession', 'AVCaptureInput', 'AVCaptureDeviceInput', 'AVCaptureOutput', 'AVCapturePhotoOutput', 'AVCaptureVideoDataOutput', 'AVCaptureMetadataOutput', 'AVCaptureConnection', 'AVCaptureVideoOrientation', 'CMSampleBuffer', 'CIContext', 'CVPixelBuffer', 'AVAsset', 'AVPlayer', 'AVPlayerItem']"

  - id: "AVFOUNDATION_NESTED_TYPES"
    description: "AVFoundation 중첩 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['enum', 'struct']"
          - "S.name in ['AVCaptureDevice.Format', 'AVCaptureDevice.Position', 'AVCaptureDevice.WhiteBalanceGains', 'AVCaptureDevice.FocusMode', 'AVCaptureDevice.ExposureMode', 'AVCaptureDevice.FlashMode', 'AVCaptureDevice.TorchMode']"

  # =======================================================================
  # SwiftUI 확장 규칙
  # =======================================================================
  - id: "SWIFTUI_VIEW_SUFFIX"
    description: "View로 끝나는 SwiftUI 뷰 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class']"
          - "S.name contains 'View'"

  - id: "SWIFTUI_APP_BUNDLE_WIDGET"
    description: "SwiftUI App/Bundle/Widget 접미사 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'struct'"
          - "S.name contains_any ['App', 'Bundle', 'Widget']"

  - id: "SWIFTUI_PICKER_LINK_ALERT"
    description: "SwiftUI UI 컴포넌트 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'struct'"
          - "S.name in ['NavigationLink', 'Alert', 'Color', 'Button', 'TextField', 'Picker', 'Toggle', 'Slider', 'Stepper', 'DatePicker', 'ColorPicker', 'Link', 'Menu', 'ContextMenu']"

  - id: "SWIFTUI_EXTENDED_PROPERTIES"
    description: "SwiftUI 추가 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['binding', 'animation', 'systemImage', 'tint', 'phase', 'entry', 'timeline', 'kind', 'verticalSizeClass', 'horizontalSizeClass', 'widgetFamily', 'confetti', 'whatsNewCollection']"

  - id: "SWIFTUI_VIEW_MODIFIERS"
    description: "SwiftUI 뷰 수정자 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['onAppear', 'onDisappear', 'onChange', 'onReceive', 'openURL', 'requestReview', 'requestPermission', 'showSheet', 'closeButtonTapped', 'addButtonTapped', 'saveButtonTapped', 'alertDismissed']"

  - id: "LIFECYCLE_STAGE_ENUM_CASES"
    description: "생애 단계 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['baby', 'child', 'adolescent', 'youngAdult', 'adult', 'middleAge', 'oldAge']"

  - id: "STATUS_STATE_ENUM_CASES"
    description: "상태 관련 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['pending', 'completed', 'uncompleted', 'verified', 'unverified', 'isCompleted', 'isDismissed']"

  - id: "THEME_COLOR_ENUM_CASES"
    description: "테마/색상 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['light', 'dark', 'red', 'blue', 'green', 'yellow', 'orange', 'purple', 'pink', 'brown', 'gray', 'cyan', 'indigo', 'mint']"

  - id: "SIZE_QUALITY_ENUM_CASES"
    description: "크기/품질 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['small', 'medium', 'large', 'low', 'high']"

  - id: "COREDATA_ENTITY_SUFFIX"
    description: "Entity로 끝나는 CoreData 엔티티"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'class'"
          - "S.name contains 'Entity'"

  - id: "COREDATA_CONTEXT_PROPERTIES"
    description: "CoreData 컨텍스트 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['entity', 'fetchRequest', 'viewContext', 'mainQueue', 'backgroundContext', 'persistentContainer', 'defaultValue', 'intValue', 'doubleValue', 'stringValue', 'boolValue', 'dateValue']"

  - id: "VERY_COMMON_PROPERTY_NAMES_SWIFTUI_EXTENDED"
    description: "SwiftUI 관련 추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['ids', 'columns', 'life', 'lifeCalendar', 'lifeGoals', 'lifeExpectancy', 'selectedTab', 'showSheet', 'currentYear', 'weekOfYear', 'dateComponents', 'now', 't', 'products', 'product', 'purchase', 'trigger', 'notificationCenter', 'notifications', 'didCompleteOnboarding', 'didScheduleWeeklyNotification', 'isWeeklyNotificationEnabled', 'listType']"

  - id: "IAP_PURCHASE_PROPERTIES"
    description: "인앱 구매 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['products', 'product', 'purchase', 'userCancelled']"

  - id: "IAP_PURCHASE_ERROR_TYPES"
    description: "인앱 구매 에러 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'enum'"
          - "S.name == 'PurchaseError'"

  - id: "SWIFTUI_COMMON_METHODS"
    description: "SwiftUI에서 자주 쓰는 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['getSnapshot', 'getTimeline', 'initialize', 'send', 'about']"

# =======================================================================
  # 추가 시스템 타입 (컬렉션/확장)
  # =======================================================================
  - id: "SWIFT_COLLECTION_EXTENSION_TYPES"
    description: "Swift 컬렉션 및 확장 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class', 'protocol']"
          - "S.name in ['Array', 'Dictionary', 'Sequence', 'Character', 'Notification.Name', 'Reactive']"

  - id: "UIKIT_ADDITIONAL_TYPES"
    description: "추가 UIKit 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'class'"
          - "S.name in ['UIFont', 'UINavigationController', 'UITabBarController', 'UIPageControl', 'UIRefreshControl', 'UIPresentationController']"

  # =======================================================================
  # 델리게이트 메서드 확장
  # =======================================================================
  - id: "UITEXTFIELD_EXTENDED_DELEGATE"
    description: "UITextField 추가 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['textFieldDidEndEditing', 'textFieldShouldReturn', 'textFieldDidChangeSelection', 'textFieldEditingChanged']"
          - "M.typeInheritanceChain contains_any ['UITextFieldDelegate', 'UIViewController']"

  - id: "UISCROLLVIEW_EXTENDED_DELEGATE"
    description: "UIScrollView 추가 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['scrollViewDidEndDecelerating', 'scrollViewWillEndDragging', 'scrollViewDidEndDragging']"
          - "M.typeInheritanceChain contains_any ['UIScrollViewDelegate', 'UIViewController']"

  - id: "UIIMAGEPICKER_DELEGATE"
    description: "UIImagePickerController 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['imagePickerController', 'imagePickerControllerDidCancel']"

  - id: "WEBVIEW_DELEGATE"
    description: "WebView 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['webViewDidClose', 'webViewDidReachBottom', 'webView']"

  - id: "NOTIFICATION_CENTER_DELEGATE"
    description: "알림/메시지 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['userNotificationCenter', 'messageComposeViewController']"

  # =======================================================================
  # 추가 범용 메서드
  # =======================================================================
  - id: "OBSERVER_PATTERN_METHODS"
    description: "옵저버 패턴 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['addObserver', 'removeObserver']"

  - id: "ENCODING_DECODING_METHODS"
    description: "인코딩/디코딩 관련 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['encode', 'decode', 'decompress', 'unwrap', 'verify', 'sign']"

  - id: "ACTION_VERB_METHODS"
    description: "범용 동작 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['apply', 'activate', 'clear', 'run', 'rotate', 'snapshot', 'calculate', 'publish', 'detect']"

  - id: "NAVIGATION_UI_METHODS"
    description: "네비게이션/UI 조작 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['popToViewController', 'moveItem', 'removeItem', 'setDelegate', 'setImage', 'setShadow', 'selectItem']"

  # =======================================================================
  # 추가 범용 프로퍼티
  # =======================================================================
  - id: "VERY_COMMON_PROPERTY_NAMES_UI_EXTENDED"
    description: "UI 관련 추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['barAppearance', 'maskLayer', 'layerClass', 'preferredStatusBarStyle', 'presentationAnchor', 'refreshControl', 'doneButton', 'addButton', 'dismissButton', 'cancelAction', 'subviews', 'displayLink', 'gesture', 'videoPreviewLayer']"

  - id: "VERY_COMMON_PROPERTY_NAMES_LAYOUT_EXTENDED"
    description: "레이아웃 추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['leftMargin', 'rightMargin', 'topMargin', 'bottomMargin', 'collectionViewLayout', 'scaleX', 'scaleY']"

  - id: "VERY_COMMON_PROPERTY_NAMES_DATA_EXTENDED"
    description: "데이터/상태 추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['dependencies', 'payload', 'features', 'numberOfSections', 'numberOfItems', 'reuseIdentifier', 'targetItem', 'presentationCount', 'presentationIndex', 'displayMode']"

  - id: "VERY_COMMON_PROPERTY_NAMES_COLOR_STYLE"
    description: "색상/스타일 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['rgb', 'currentPageIndicatorTintColor', 'pageIndicatorTintColor', 'brightness', 'separator', 'focus', 'hint', 'caption', 'detail']"

  - id: "VERY_COMMON_PROPERTY_NAMES_NETWORKING_EXTENDED"
    description: "네트워킹 추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['diskCapacity', 'memoryCapacity', 'canonicalRequest', 'downloadTask', 'pathString', 'directoryName', 'fileExtension', 'encoding', 'scheme', 'responseValidationFailed']"

  - id: "VERY_COMMON_PROPERTY_NAMES_COREDATA_EXTENDED"
    description: "CoreData 추가 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['getCaches', 'setCaches', 'toEntity', 'fullPath']"

  - id: "EXPOSURE_NOTIFICATION_PROPERTIES"
    description: "Exposure Notification 프레임워크 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['algorithm', 'keyData', 'keyId', 'rollingPeriod', 'rollingStartNumber', 'transmissionRisk', 'daySummaries', 'exposureNotificationEnabled', 'exposureNotificationStatus', 'getDiagnosisKeys', 'detectExposures', 'setExposureNotificationEnabled']"

  - id: "HEALTH_CERTIFICATE_PROPERTIES"
    description: "건강 인증서 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['hcert', 'euHealthCertV1', 'iss', 'exp', 'iat', 'iss', 'lightCert', 'sign1', 'signature', 'payload']"

  # =======================================================================
  # enum case 확장
  # =======================================================================
  - id: "DEVICE_ORIENTATION_ENUM_CASES"
    description: "디바이스 방향 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['portrait', 'portraitUpsideDown', 'landscapeLeft', 'landscapeRight', 'faceUp', 'faceDown', 'left', 'right']"

  - id: "STATE_STATUS_ENUM_CASES_EXTENDED"
    description: "상태 enum case 확장"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['normal', 'disabled', 'suspended', 'enabled', 'failed', 'success', 'valid', 'invalid', 'ready', 'handled', 'unauthorized', 'unsupported']"

  - id: "HTTP_METHOD_ENUM_CASES"
    description: "HTTP 메서드 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['post', 'patch', 'replace']"

  - id: "QUEUE_THREAD_ENUM_CASES"
    description: "큐/쓰레드 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['main', 'background', 'mainQueue']"

  - id: "LAYOUT_MODE_ENUM_CASES"
    description: "레이아웃/모드 enum case"
    pattern:
      - find: { target: E }
      - where:
          - "E.kind == 'enumCase'"
          - "E.name in ['single', 'group', 'test', 'normal']"

  # =======================================================================
  # SwiftUI 추가 타입
  # =======================================================================
  - id: "SWIFTUI_COMPONENT_TYPES"
    description: "SwiftUI 컴포넌트 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class']"
          - "S.name in ['Alert', 'Color', 'Button', 'Image', 'Font', 'NavigationLink']"

  # =======================================================================
  # 아키텍처 패턴 확장
  # =======================================================================
  - id: "COORDINATOR_PROTOCOL_SUFFIX"
    description: "Coordinator/Protocol로 끝나는 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['protocol', 'class']"
          - "S.name contains_any ['Coordinator', 'Protocol']"

  # =======================================================================
  # 특수 메서드
  # =======================================================================
  - id: "LIFECYCLE_OVERRIDE_METHODS"
    description: "생명주기 오버라이드 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['layoutSubviews', 'traitCollectionDidChange']"
          - "M.typeInheritanceChain contains_any ['UIView', 'UIViewController']"

  - id: "CONVERSION_METHODS"
    description: "변환 관련 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['toHexString', 'toEntity', 'asURLRequest']"

  # =======================================================================
  # 추가 범용 메서드 (문자열 처리)
  # =======================================================================
  - id: "STRING_PROCESSING_METHODS"
    description: "문자열 처리 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['isEmoji', 'underline']"

# =======================================================================
  # 최종 보완 규칙
  # =======================================================================

  # 1. Swift 기본 타입 추가
  - id: "SWIFT_FOUNDATION_COLLECTION_TYPES"
    description: "Swift 기본 컬렉션 및 확장 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class', 'protocol']"
          - "S.name in ['Array', 'Dictionary', 'Sequence', 'Character', 'Notification.Name', 'Reactive']"

  - id: "UIKIT_CORE_ADDITIONAL_TYPES"
    description: "추가 UIKit 핵심 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'class'"
          - "S.name in ['UIFont', 'UINavigationController', 'UITabBarController', 'UIPageViewController']"

  # 2. CGAffineTransform 확장
  - id: "CGAFFINETRANSFORM_MATRIX_COMPONENTS"
    description: "CGAffineTransform 행렬 성분 (m1, m11, m12, m2)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['m1', 'm11', 'm12', 'm2', 'm21', 'm22']"

  # 3. 아키텍처 패턴 단일 단어 타입
  - id: "ARCHITECTURE_SINGLE_WORD_TYPES"
    description: "단일 단어 아키텍처 타입 (Action, State, Feature 등)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'enum', 'protocol']"
          - "S.name in ['Action', 'State', 'Feature', 'Screen', 'Tab', 'Theme', 'Alert', 'Color', 'Button', 'Font', 'Image', 'Style', 'Config', 'Event', 'Message', 'Person', 'Status']"

  # 4. SwiftUI 추가 프로퍼티
  - id: "SWIFTUI_ADDITIONAL_PROPERTIES"
    description: "SwiftUI 추가 필수 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['binding', 'placeholder', 'about', 'medium', 'shared']"

  # 5. SwiftUI 추가 메서드
  - id: "SWIFTUI_ADDITIONAL_METHODS"
    description: "SwiftUI 추가 필수 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['onAppear', 'openURL', 'requestReview', 'requestPermission', 'initialize', 'send']"

  # 6. 버튼 액션 메서드 확장
  - id: "BUTTON_ACTION_METHODS_EXTENDED"
    description: "버튼 액션 메서드 확장 (Tapped 접미사)"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['addButtonTapped', 'closeButtonTapped', 'saveButtonTapped', 'alertDismissed', 'showSheet']"

  # 7. UITextField 완전 확장
  - id: "UITEXTFIELD_COMPLETE_DELEGATE"
    description: "UITextField 델리게이트 완전 확장"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['textFieldDidEndEditing', 'textFieldShouldReturn', 'textFieldDidChangeSelection', 'textFieldDidBeginEditing']"

  # 8. 위치/지도 관련
  - id: "LOCATION_MANAGER_PROPERTIES"
    description: "위치 관리자 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['locationManager', 'mapView']"

  # 9. 추가 범용 메서드
  - id: "ADDITIONAL_COMMON_METHODS"
    description: "추가 범용 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['apply', 'activate', 'clear', 'deleteAllItems', 'getIsInBusiness', 'setExposureNotificationEnabled', 'getDiagnosisKeys', 'detectExposures']"

  # 10. 추가 범용 프로퍼티
  - id: "ADDITIONAL_COMMON_PROPERTIES"
    description: "추가 범용 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['setting', 'settings', 'semaphore', 'resizableImage', 'navigationTitle']"

  # 11. CoreLocation 델리게이트
  - id: "CORELOCATION_DELEGATE_METHODS"
    description: "CoreLocation 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['locationManager', 'didUpdateLocations', 'didFailWithError', 'didChangeAuthorization']"

# =======================================================================
  # 초정밀 최종 규칙 (20개 추가)
  # =======================================================================

  # 1. SwiftUI 특화 타입 (DependencyValues, EnvironmentValues)
  - id: "SWIFTUI_DEPENDENCY_ENVIRONMENT_TYPES"
    description: "SwiftUI 의존성/환경 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'enum', 'protocol']"
          - "S.name in ['DependencyValues', 'EnvironmentValues', 'Key', 'EnvironmentKey']"

  # 2. SwiftUI App/Widget 타입 확장
  - id: "SWIFTUI_APP_WIDGET_ENTITY_TYPES"
    description: "SwiftUI App/Widget/Entity 접미사 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class']"
          - "S.name matches '(App|Widget|Bundle|Entity|Picker)$'"

  # 3. SwiftUI 필수 메서드 확장
  - id: "SWIFTUI_LIFECYCLE_METHODS_EXTENDED"
    description: "SwiftUI 생명주기 메서드 확장"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['onAppear', 'onDisappear', 'openURL', 'requestReview', 'requestPermission', 'initialize', 'send']"

  # 4. UI 액션 메서드 (Tapped 접미사)
  - id: "UI_ACTION_TAPPED_METHODS"
    description: "Tapped로 끝나는 UI 액션 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name matches 'Tapped$'"

  # 5. Dismissed 접미사 메서드
  - id: "UI_DISMISSED_METHODS"
    description: "Dismissed로 끝나는 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name matches 'Dismissed$'"

  # 6. UI 상태 프로퍼티 (isXxx)
  - id: "UI_STATE_IS_PROPERTIES"
    description: "is로 시작하는 상태 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name matches '^is[A-Z]'"
          - "P.name in ['isCompleted', 'isDismissed', 'isEnabled', 'isSelected', 'isHighlighted']"

  # 7. SwiftUI Binding 관련
  - id: "SWIFTUI_BINDING_PROPERTIES"
    description: "SwiftUI Binding 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['binding', 'showSheet', 'showAlert']"

  # 8. 백틱 키워드
  - id: "BACKTICK_KEYWORDS"
    description: "백틱으로 감싼 Swift 예약어"
    pattern:
      - find: { target: S }
      - where:
          - "S.name matches '^`.*`$'"
          - "S.name in ['`default`', '`in`', '`none`', '`true`', '`false`']"

  # 9. 색상 이름 프로퍼티
  - id: "COLOR_NAME_PROPERTIES"
    description: "색상 이름 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['apple', 'blue', 'green', 'red', 'approveGreen', 'darkBlue', 'warningRed', 'gray1', 'gray2', 'gray3', 'gray4', 'gray5']"

  # 10. 날짜 포맷 문자열
  - id: "DATE_FORMAT_STRINGS"
    description: "날짜 포맷 문자열 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name matches '(yyyy|MM|dd|HH|mm|ss|ZZZZZ)'"

  # 11. 로컬라이제이션 키워드
  - id: "LOCALIZATION_LANGUAGE_CODES"
    description: "언어 코드 및 로컬라이제이션 키워드"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'enumCase']"
          - "P.name in ['en', 'ko', 'ja', 'zh', 'vi', 'th', 'fil', 'about', 'allow', 'enable', 'enabled']"

  # 12. UI 단방향 키워드
  - id: "UI_SINGLE_WORD_KEYWORDS"
    description: "단일 단어 UI 키워드"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'enumCase']"
          - "P.name in ['about', 'banner', 'background', 'base', 'clock', 'console', 'days', 'focus', 'from', 'index', 'key', 'link', 'logger', 'major', 'ms', 'my', 'no', 'ok', 'secondary', 'sentences', 'subtitle', 'warning', 'yes']"

  # 13. 프레임워크 특화 프로퍼티 (ExposureNotification)
  - id: "FRAMEWORK_SPECIFIC_PROPERTIES"
    description: "프레임워크 특화 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['getDiagnosisKeys', 'detectExposures', 'setExposureNotificationEnabled', 'config', 'manufacturer', 'bluetoothOff']"

  # 14. 특수 테스트 클래스
  - id: "SPECIAL_TEST_CLASSES"
    description: "특수 테스트 클래스 (ZZZZZ, 오타 등)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'class'"
          - "S.name matches '(Test|Tests|ZZZZZ)'"

  # 15. ScrollView 추가 델리게이트
  - id: "UISCROLLVIEW_COMPLETE_DELEGATE"
    description: "UIScrollView 완전한 델리게이트"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['scrollViewDidScroll', 'scrollViewWillEndDragging', 'scrollViewDidEndDecelerating', 'scrollViewWillBeginDragging']"

  # 16. 범용 동사 메서드 확장
  - id: "COMMON_VERB_METHODS_EXTENDED"
    description: "범용 동사 메서드 확장"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['apply', 'activate', 'download', 'publish', 'submit', 'cancel']"

  # 17. 네트워크/비동기 프로퍼티
  - id: "NETWORK_ASYNC_PROPERTIES"
    description: "네트워크/비동기 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['canonicalRequest', 'invalidResponse', 'invalidToken', 'jsonDecoder']"

  # 18. Collection 관련 프로퍼티
  - id: "COLLECTION_COUNT_PROPERTIES"
    description: "Collection 카운트/섹션 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['numberOfSections', 'numberOfItems', 'lineCount']"

  # 19. 특수 상태 키워드
  - id: "SPECIAL_STATE_KEYWORDS"
    description: "특수 상태 키워드 (alreay, not 등)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'enumCase']"
          - "P.name in ['alreayFriend', 'notFriend', 'noData', 'duplicatedName']"

  # 20. Coordinator/Protocol 특수 타입
  - id: "COORDINATOR_PROTOCOL_SPECIAL_TYPES"
    description: "특수 Coordinator/Protocol 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['protocol', 'class']"
          - "S.name matches '(Protocol|Coordinator)$'"
          - "S.name in ['FreindAddResultViewProtocol', 'Coordinator']"

# =======================================================================
  # 극한 정밀도 규칙 (12개 추가) - 95% 목표
  # =======================================================================

  # 1. Swift/Foundation 기본 컬렉션 확장
  - id: "SWIFT_FOUNDATION_BASIC_TYPES"
    description: "Swift/Foundation 기본 타입 (Array, Dictionary, Sequence)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'protocol', 'enum']"
          - "S.name in ['Array', 'Dictionary', 'Sequence', 'Character', 'Set', 'Optional', 'Result']"

  # 2. 중첩 타입 (Nested Types)
  - id: "NESTED_TYPES_WITH_DOT"
    description: "점(.)으로 구분된 중첩 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class', 'enum']"
          - "S.name matches '\\.'"
          - "S.name in ['CBOR.Tag', 'Notification.Name', 'TracingCellViewModel.State', 'URLRequest.CachePolicy']"

  # 3. 프레임워크 특화 타입 (ExposureNotification)
  - id: "EXPOSURE_NOTIFICATION_TYPES"
    description: "ExposureNotification 프레임워크 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'class', 'enum']"
          - "S.name matches '^EN'"
          - "S.name in ['ENActivityFlags', 'ENManager', 'ENTemporaryExposureKey', 'ENExposureConfiguration']"

  # 4. CBOR/보안 관련 타입
  - id: "SECURITY_CBOR_TYPES"
    description: "CBOR 및 보안 관련 타입"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'enum']"
          - "S.name in ['CBOR', 'CharacterSet', 'LanguageCode', 'ValueSet', 'ValueSetItem']"

  # 5. 특수 아키텍처 타입
  - id: "SPECIAL_ARCHITECTURE_TYPES"
    description: "특수 아키텍처 타입 (DisplayMode, Layout, Metadata)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['struct', 'enum']"
          - "S.name in ['DisplayMode', 'Layout', 'Metadata', 'Content', 'RetryReason', 'AssociatedKeys']"

  # 6. 번호 접미사 프로퍼티 (gray1, gray2 등)
  - id: "NUMBERED_SUFFIX_PROPERTIES"
    description: "번호 접미사 프로퍼티 (gray1~5, key2 등)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name matches '[a-z]+[0-9]$'"
          - "P.name in ['gray1', 'gray2', 'gray3', 'gray4', 'gray5', 'key2', 'm1', 'm2']"

  # 7. 날짜 포맷 상수 확장
  - id: "DATE_FORMAT_CONSTANTS_EXTENDED"
    description: "날짜 포맷 상수 확장 (yyyyMMdd 등)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'let']"
          - "P.name matches '(yyyy|MM|dd|HH|mm|ss|ZZZZZ)'"
          - "P.name in ['yyyyMMdd', 'yyyyMMddTHHmmSS', 'yyyyMMddhhmmssZZZZZ']"

  # 8. 특수 테스트 키워드
  - id: "SPECIAL_TEST_KEYWORDS"
    description: "특수 테스트 키워드 (ZZZZZ, test 단독)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['class', 'property']"
          - "S.name in ['ZZZZZ', 'test']"

  # 9. 브랜드/로그인 프로퍼티
  - id: "BRAND_LOGIN_PROPERTIES"
    description: "브랜드/로그인 관련 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['apple', 'google', 'authorizationController', 'presentationAnchor', 'bundleID']"

  # 10. UIKit 추가 델리게이트/생명주기
  - id: "UIKIT_ADDITIONAL_LIFECYCLE"
    description: "UIKit 추가 생명주기 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['layoutSubviews', 'traitCollectionDidChange', 'didSelectDate']"

  # 11. 프레임워크 특화 메서드 (EN)
  - id: "EXPOSURE_NOTIFICATION_METHODS"
    description: "ExposureNotification 특화 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['setExposureNotificationEnabled', 'getDiagnosisKeys', 'detectExposures', 'updateRiskSummary']"

  # 12. 특수 프로퍼티 (짧은 동사/명사)
  - id: "SHORT_VERB_NOUN_PROPERTIES"
    description: "짧은 동사/명사 프로퍼티 (3-6자)"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'method']"
          - "P.name in ['test', 'fail', 'pass', 'next', 'prev', 'stop', 'play', 'skip', 'group', 'stack', 'queue']"

  # 13. ExposureNotification 롤링/전송 프로퍼티
  - id: "EN_ROLLING_TRANSMISSION_PROPERTIES"
    description: "ExposureNotification 롤링/전송 관련"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['rollingPeriod', 'rollingStartNumber', 'transmissionRisk', 'startNumber', 'pruneIntervalNumber']"

  # 14. 특수 UI 컨테이너 프로퍼티
  - id: "SPECIAL_UI_CONTAINER_PROPERTIES"
    description: "특수 UI 컨테이너 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['contentViewController', 'pageViewController', 'tabBarController', 'windowScene']"

  # 15. 건강/인증서 특화 프로퍼티
  - id: "HEALTH_CERTIFICATE_EXTENDED_PROPERTIES"
    description: "건강 인증서 특화 프로퍼티 확장"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['euHealthCertV1', 'hcert', 'lightCert', 'bluetoothOff', 'disabledBackground']"

  # 16. 특수 상태 메서드
  - id: "SPECIAL_STATE_METHODS"
    description: "특수 상태 관련 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['canInit', 'supportsHaptics', 'isNewVersionAvailable', 'isURLLoaded']"

  # 17. 프로토콜 특수 타입
  - id: "PROTOCOL_SPECIAL_TYPES_EXTENDED"
    description: "프로토콜 특수 타입 확장"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind == 'protocol'"
          - "S.name matches 'Protocol$'"
          - "S.name in ['FreindAddResultViewProtocol', 'Coordinator']"

  # 18. 로컬라이제이션/리소스 상수
  - id: "LOCALIZATION_RESOURCE_CONSTANTS"
    description: "로컬라이제이션 및 리소스 상수"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'let']"
          - "P.name in ['formatName', 'formatDescription', 'invalidScheme', 'responseValidationFailed', 'uniqueIdentifier']"

  # 19. 컬렉션 카운트 확장
  - id: "COLLECTION_COUNT_EXTENDED"
    description: "컬렉션 카운트 확장"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind in ['property', 'method']"
          - "P.name in ['numberOfSections', 'presentationCount', 'presentationIndex']"

  # 20. 특수 동작 메서드
  - id: "SPECIAL_ACTION_METHODS"
    description: "특수 동작 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          - "M.name in ['startLoading', 'stopLoading', 'suspend', 'finish', 'getCaches', 'setCaches', 'snapshot']"