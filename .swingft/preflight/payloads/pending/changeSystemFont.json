{
  "swift_code": "//\n//  AppDelegate.swift\n//  StealPlateSwift\n//\n//  Created by 스틸리언 on 2022/08/12.\n//\n\nimport UIKit\n\n@main\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        \n//        AppSuitAuth.shared.serverAuthURL = \"https://auth.appsu.it/serverauth_module/auth.jsp\"\n//        AppSuitAuth.shared.appSuitRequest(.serverAuth)\n\n//        \"https://radar.appsu.it/server-auth/auth2\"\n//        AppSuitAuth.shared.serverAuthURL = \"https://radar-dev.appsu.it/server-auth/auth2\"\n//        AppSuitAuth.shared.appSuitRequest(.radarServerAuth)\n\n//        AppSuitAuth.shared.appSuitRequest(.radar)\n        \n        UIFont.changeSystemFont()\n        return true\n    }\n\n    func application(_ application: UIApplication, configurationForConnecting connectingSceneSession: UISceneSession, options: UIScene.ConnectionOptions) -> UISceneConfiguration {\n        return UISceneConfiguration(name: \"Default Configuration\", sessionRole: connectingSceneSession.role)\n    }\n\n    func application(_ application: UIApplication, didDiscardSceneSessions sceneSessions: Set<UISceneSession>) {\n    }\n\n}\n\n//  MARK: - Error Enum Define\n//  Error Messege Setting\n\nprivate enum AppSuitError: Error {\n    \n    case AppSuit_Success(message: String = \"[STEALIEN] 정상\")\n    \n    case AppSuit_AppID(message: String = \"[STEALIEN] 앱 아이디 초기화 필요\")\n    \n    case AppSuit_Debug(message: String = \"[STEALIEN] 디버깅 탐지\")\n    \n    case AppSuit_Jailbreak(message: String = \"[STEALIEN] 탈옥 탐지\")\n    \n    case AppSuit_Integrity(message: String = \"[STEALIEN] 위변조 탐지\")\n    \n    case AppSuit_Threat(message: String = \"[STEALIEN] 위협 탐지\")\n    \n}\n\n//  MARK: - Error Title & Messege Define\n\nextension AppSuitError: LocalizedError {\n    \n    //  Error Title Setting\n    var errorDescription: String? {\n        switch self {\n            \n        case .AppSuit_Success(message: _):\n            return \"[STEALIEN] 정상\"\n            \n        case .AppSuit_AppID(message: _):\n            return \"[STEALIEN] FFFF\"\n    \n        case .AppSuit_Debug(message: _):\n            return \"[STEALIEN] 1000\"\n            \n        case .AppSuit_Jailbreak(message: _):\n            return \"[STEALIEN] 1100\"\n            \n        case .AppSuit_Integrity(message: _):\n            return \"[STEALIEN] 1200\"\n            \n        case .AppSuit_Threat(message: _):\n            return \"[STEALIEN] 1300\"\n            \n        }\n    }\n    \n    //  Error Messege\n    var recoverySuggestion: String? {\n        switch self {\n            \n        case .AppSuit_Success(message: let message):\n            return message\n            \n        case .AppSuit_AppID(message: let message):\n            return message\n        \n        case .AppSuit_Debug(message: let message):\n            return message\n        \n        case .AppSuit_Jailbreak(message: let message):\n            return message\n            \n        case .AppSuit_Integrity(message: let message):\n            return message\n            \n        case .AppSuit_Threat(message: let message):\n            return message\n        }\n    }\n    \n}\n\n//  MARK: - Localized Alert Error\n\nstruct LocalizedAlertError: LocalizedError {\n    let underlyingError: LocalizedError\n    \n    var errorDescription: String? {\n        underlyingError.errorDescription\n    }\n    \n    var recoverySuggestion: String? {\n        underlyingError.recoverySuggestion\n    }\n\n    init?(error: Error?) {\n        guard let localizedError = error as? LocalizedError else { return nil }\n        underlyingError = localizedError\n    }\n}",
  "ast_symbols": [
    {
      "symbolName": "changeSystemFont",
      "symbolKind": "unknown"
    }
  ],
  "target_identifier": "changeSystemFont"
}