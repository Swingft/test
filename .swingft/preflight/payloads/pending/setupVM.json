{
  "swift_code": "//\n//  BaseViewController.swift\n//  StealPlateSwift\n//\n//  Created by 스틸리언 on 2022/08/16.\n//\n\nimport UIKit\nimport Foundation\nimport UIKit\nimport SnapKit\nimport RxSwift\n\nimport STAntiCapture\n\nclass BaseViewController: UIViewController {\n    var disposeBag: DisposeBag = DisposeBag()\n    var antiCaptureView: STAntiCaptureView!\n\n    private static var _sharedAntiCapture: Bool = true\n    public static var sharedAntiCapture: Bool {\n        get {\n            return BaseViewController._sharedAntiCapture\n        }\n        set {\n            if newValue == BaseViewController._sharedAntiCapture { return }\n            BaseViewController._sharedAntiCapture = newValue\n            NotificationCenter.default.post(name: .sharedAntiCaptureChanged, object: nil)\n        }\n    }\n    \n    private static var _sharedBackgroundColorOfCaptured: UIColor = .black\n    public static var sharedBackgroundColorOfCaptured: UIColor {\n        get {\n            return BaseViewController._sharedBackgroundColorOfCaptured\n        }\n        set {\n            if newValue == BaseViewController._sharedBackgroundColorOfCaptured { return }\n            BaseViewController._sharedBackgroundColorOfCaptured = newValue\n            NotificationCenter.default.post(name: .sharedAntiCaptureChanged, object: nil)\n        }\n    }\n    \n    private static var _sharedBackgroundColorOfAppSwitcherView: UIColor = .black\n    public static var sharedBackgroundColorOfAppSwitcherView: UIColor {\n        get {\n            return BaseViewController._sharedBackgroundColorOfAppSwitcherView\n        }\n        set {\n            if newValue == BaseViewController._sharedBackgroundColorOfAppSwitcherView { return }\n            BaseViewController._sharedBackgroundColorOfAppSwitcherView = newValue\n            NotificationCenter.default.post(name: .sharedAntiCaptureChanged, object: nil)\n        }\n    }\n    \n    private static var _sharedDisableAppSwitcherViewOnce: Bool = false\n    public static var sharedDisableAppSwitcherViewOnce: Bool {\n        get {\n            return BaseViewController._sharedDisableAppSwitcherViewOnce\n        }\n        set {\n            if newValue == BaseViewController._sharedDisableAppSwitcherViewOnce { return }\n            BaseViewController._sharedDisableAppSwitcherViewOnce = newValue\n            NotificationCenter.default.post(name: .sharedAntiCaptureChanged, object: nil)\n        }\n    }\n \n    deinit {\n        disposeBag = DisposeBag()\n        NotificationCenter.default.removeObserver(self)\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        setupVC()\n        setupVM()\n        setupBind()\n\n    }\n    \n    func setupVC() {\n\n    }\n    \n    func setupVM() {\n        \n    }\n    \n    func setupBind() {\n        \n    }\n    \n    func setupAntiCaptureView() {\n        antiCaptureView = STAntiCaptureView()\n        view.addSubview(antiCaptureView)\n\n        antiCaptureView.translatesAutoresizingMaskIntoConstraints = false\n        antiCaptureView.snp.makeConstraints { make in\n            make.top.leading.trailing.bottom.equalToSuperview()\n        }\n        \n        antiCaptureView.antiCapture = BaseViewController._sharedAntiCapture\n        antiCaptureView.customImage = UIImage(named: \"Stealien\")\n        antiCaptureView.backgroundColor = view.backgroundColor\n        antiCaptureView.backgroundColorOfCaptured = BaseViewController._sharedBackgroundColorOfCaptured\n        antiCaptureView.backgroundColorOfAppSwitcherView = BaseViewController._sharedBackgroundColorOfAppSwitcherView\n        antiCaptureView.disableAppSwitcherViewOnce = BaseViewController._sharedDisableAppSwitcherViewOnce\n\n        NotificationCenter.default.addObserver(self, selector: #selector(handleSharedAntiCaptureChanged), name: .sharedAntiCaptureChanged, object: nil)\n    }\n    \n    @objc func handleSharedAntiCaptureChanged() {\n        antiCaptureView.antiCapture = BaseViewController._sharedAntiCapture\n        antiCaptureView.backgroundColorOfCaptured = BaseViewController._sharedBackgroundColorOfCaptured\n        antiCaptureView.backgroundColorOfAppSwitcherView = BaseViewController._sharedBackgroundColorOfAppSwitcherView\n        antiCaptureView.disableAppSwitcherViewOnce = BaseViewController._sharedDisableAppSwitcherViewOnce\n    }\n}\n\nextension Notification.Name {\n    static let sharedAntiCaptureChanged = Notification.Name(\"sharedAntiCaptureChanged\")\n}",
  "ast_symbols": [
    {
      "symbolName": "setupVM()",
      "symbolKind": "method"
    }
  ],
  "target_identifier": "setupVM"
}