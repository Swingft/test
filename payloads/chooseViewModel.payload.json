{
  "instruction": "In the following Swift code, find all identifiers related to sensitive logic. Provide the names and reasoning as a JSON object.",
  "input": "**Swift Source Code:**\n```swift\n// File: /Users/lanian/Desktop/UIKit+SPM_2/StealPlateSwift/DependencyInjector.swift\n//\n//  DependencyInjector.swift\n//  StealPlateSwift\n//\n//  Created by 스틸리언 on 2022/08/12.\n//\n\nimport Foundation\n\nclass DependencyInjector {\n    // MARK: - ViewModel\n    static func chooseViewModel() -> ChooseViewModel {\n        return ChooseViewModel(loadFeelingUseCase: loadFeelingUseCase(), loadSelectedFeelingsUseCase: loadSelectedFeelingsUseCase(), feelingRepository: feelingRepository())\n    }\n    \n    static func detailViewModel() -> DetailViewModel {\n        return DetailViewModel(loadSelectedRestaurantUseCase: loadSelectedRestaurantUseCase())\n    }\n\n    static func mainViewModel() -> MainViewModel {\n        return MainViewModel(\n            loadRestaurantUseCase: loadRestaurantUseCase(),\n            loadSelectedFeelingsUseCase: loadSelectedFeelingsUseCase(),\n            loadRemoteUrlPresetDataUseCase: loadRemoteUrlPresetDataUseCase())\n    }\n    \n    // MARK: - UseCase\n    static func loadFeelingUseCase() -> LoadFeelingUseCase {\n        return LoadFeelingUseCase(feelingRepository: feelingRepository())\n    }\n    \n    static func loadSelectedRestaurantUseCase() -> LoadSelectedRestaurantUseCase {\n        return LoadSelectedRestaurantUseCase(restaurantRepository: restaurantRepository())\n    }\n    \n    static func loadSelectedFeelingsUseCase() -> LoadSelectedFeelingsUseCase {\n        return LoadSelectedFeelingsUseCase(feelingRepository: feelingRepository())\n    }\n\n    static func loadRestaurantUseCase() -> LoadRestaurantUseCase {\n        return LoadRestaurantUseCase(restaurantRepository: restaurantRepository())\n    }\n    \n    static func loadRemoteUrlPresetDataUseCase() -> LoadRemoteUrlPresetDataUseCase {\n        return LoadRemoteUrlPresetDataUseCase(remoteUrlPresetRepository: remoteUrlPresetRepository())\n    }\n    \n    // MARK: - Repository\n    fileprivate static var _feelingRepository = FeelingRepositoryImpl(localDataSource: feelingLocalDataSource(), remoteDataSource: feelingRemoteDataSource())\n    static func feelingRepository() -> FeelingRepository {\n        return _feelingRepository\n    }\n    \n    fileprivate static var _restaurantRepository = RestaurantRepositoryImpl(localDataSource: restaurantLocalDataSource(), remoteDataSource: restaurantRemoteDataSource())\n    static func restaurantRepository() -> RestaurantRepository {\n        return _restaurantRepository\n    }\n    \n    fileprivate static var _remoteUrlPresetRepository = RemoteUrlPresetRepositoryImpl(localDataSource: remoteUrlPresetLocalDataSource())\n    static func remoteUrlPresetRepository() -> RemoteUrlPresetRepository {\n        return _remoteUrlPresetRepository\n    }\n    \n    // MARK: - DataSource\n    fileprivate static var _feelingLocalDataSource: FeelingLocalDataSource? = FeelingLocalDataSource()\n    static func feelingLocalDataSource() -> FeelingLocalDataSource {\n        if _feelingLocalDataSource == nil {\n            _feelingLocalDataSource = FeelingLocalDataSource()\n        }\n        \n        return _feelingLocalDataSource!\n    }\n    \n    fileprivate static var _feelingRemoteDataSource: FeelingRemoteDataSource? = FeelingRemoteDataSource()\n    static func feelingRemoteDataSource() -> FeelingRemoteDataSource {\n        if _feelingRemoteDataSource == nil {\n            _feelingRemoteDataSource = FeelingRemoteDataSource()\n        }\n        \n        return _feelingRemoteDataSource!\n    }\n    \n    fileprivate static var _restaurantLocalDataSource: RestaurantLocalDataSource? = RestaurantLocalDataSource()\n    static func restaurantLocalDataSource() -> RestaurantLocalDataSource {\n        if _restaurantLocalDataSource == nil {\n            _restaurantLocalDataSource = RestaurantLocalDataSource()\n        }\n        \n        return _restaurantLocalDataSource!\n    }\n    \n    fileprivate static var _restaurantRemoteDataSource: RestaurantRemoteDataSource? = RestaurantRemoteDataSource()\n    static func restaurantRemoteDataSource() -> RestaurantRemoteDataSource {\n        if _restaurantRemoteDataSource == nil {\n            _restaurantRemoteDataSource = RestaurantRemoteDataSource()\n        }\n        \n        return _restaurantRemoteDataSource!\n    }\n    \n    fileprivate static var _remoteUrlPresetLocalDataSource: RemoteUrlPresetLocalDataSource? = RemoteUrlPresetLocalDataSource()\n    static func remoteUrlPresetLocalDataSource() -> RemoteUrlPresetLocalDataSource {\n        if _remoteUrlPresetLocalDataSource == nil {\n            _remoteUrlPresetLocalDataSource = RemoteUrlPresetLocalDataSource()\n        }\n        \n        return _remoteUrlPresetLocalDataSource!\n    }\n}\n\n```\n\n**AST Symbol Information (JSON):**\n```\n[\n  {\n    \"symbolName\": \"DependencyInjector\",\n    \"symbolKind\": \"class\"\n  },\n  {\n    \"symbolName\": \"chooseViewModel(() -> ChooseViewModel)\",\n    \"symbolKind\": \"method\",\n    \"calls_out\": [\n      \"ChooseViewModel\",\n      \"feelingRepository\",\n      \"loadFeelingUseCase\",\n      \"loadSelectedFeelingsUseCase\"\n    ],\n    \"references\": [\n      \"ChooseViewModel\",\n      \"feelingRepository\",\n      \"loadFeelingUseCase\",\n      \"loadSelectedFeelingsUseCase\"\n    ],\n    \"typeSignature\": \"() -> ChooseViewModel\"\n  },\n  {\n    \"symbolName\": \"detailViewModel(() -> DetailViewModel)\",\n    \"typeSignature\": \"() -> DetailViewModel\",\n    \"calls_out\": [\n      \"DetailViewModel\",\n      \"loadSelectedRestaurantUseCase\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"DetailViewModel\",\n      \"loadSelectedRestaurantUseCase\"\n    ]\n  },\n  {\n    \"symbolName\": \"mainViewModel(() -> MainViewModel)\",\n    \"typeSignature\": \"() -> MainViewModel\",\n    \"calls_out\": [\n      \"MainViewModel\",\n      \"loadRemoteUrlPresetDataUseCase\",\n      \"loadRestaurantUseCase\",\n      \"loadSelectedFeelingsUseCase\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"MainViewModel\",\n      \"loadRemoteUrlPresetDataUseCase\",\n      \"loadRestaurantUseCase\",\n      \"loadSelectedFeelingsUseCase\"\n    ]\n  },\n  {\n    \"symbolName\": \"loadFeelingUseCase(() -> LoadFeelingUseCase)\",\n    \"typeSignature\": \"() -> LoadFeelingUseCase\",\n    \"calls_out\": [\n      \"LoadFeelingUseCase\",\n      \"feelingRepository\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"LoadFeelingUseCase\",\n      \"feelingRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"loadSelectedRestaurantUseCase(() -> LoadSelectedRestaurantUseCase)\",\n    \"typeSignature\": \"() -> LoadSelectedRestaurantUseCase\",\n    \"calls_out\": [\n      \"LoadSelectedRestaurantUseCase\",\n      \"restaurantRepository\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"LoadSelectedRestaurantUseCase\",\n      \"restaurantRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"loadSelectedFeelingsUseCase(() -> LoadSelectedFeelingsUseCase)\",\n    \"typeSignature\": \"() -> LoadSelectedFeelingsUseCase\",\n    \"calls_out\": [\n      \"LoadSelectedFeelingsUseCase\",\n      \"feelingRepository\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"LoadSelectedFeelingsUseCase\",\n      \"feelingRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"loadRestaurantUseCase(() -> LoadRestaurantUseCase)\",\n    \"typeSignature\": \"() -> LoadRestaurantUseCase\",\n    \"calls_out\": [\n      \"LoadRestaurantUseCase\",\n      \"restaurantRepository\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"LoadRestaurantUseCase\",\n      \"restaurantRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"loadRemoteUrlPresetDataUseCase(() -> LoadRemoteUrlPresetDataUseCase)\",\n    \"typeSignature\": \"() -> LoadRemoteUrlPresetDataUseCase\",\n    \"calls_out\": [\n      \"LoadRemoteUrlPresetDataUseCase\",\n      \"remoteUrlPresetRepository\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"LoadRemoteUrlPresetDataUseCase\",\n      \"remoteUrlPresetRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"_feelingRepository\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"feelingRepository(() -> FeelingRepository)\",\n    \"typeSignature\": \"() -> FeelingRepository\",\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"_feelingRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"_restaurantRepository\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"restaurantRepository(() -> RestaurantRepository)\",\n    \"typeSignature\": \"() -> RestaurantRepository\",\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"_restaurantRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"_remoteUrlPresetRepository\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"remoteUrlPresetRepository(() -> RemoteUrlPresetRepository)\",\n    \"typeSignature\": \"() -> RemoteUrlPresetRepository\",\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"_remoteUrlPresetRepository\"\n    ]\n  },\n  {\n    \"symbolName\": \"_feelingLocalDataSource\",\n    \"typeSignature\": \"FeelingLocalDataSource?\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"feelingLocalDataSource(() -> FeelingLocalDataSource)\",\n    \"typeSignature\": \"() -> FeelingLocalDataSource\",\n    \"calls_out\": [\n      \"FeelingLocalDataSource\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"FeelingLocalDataSource\",\n      \"_feelingLocalDataSource\"\n    ]\n  },\n  {\n    \"symbolName\": \"_feelingRemoteDataSource\",\n    \"typeSignature\": \"FeelingRemoteDataSource?\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"feelingRemoteDataSource(() -> FeelingRemoteDataSource)\",\n    \"typeSignature\": \"() -> FeelingRemoteDataSource\",\n    \"calls_out\": [\n      \"FeelingRemoteDataSource\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"FeelingRemoteDataSource\",\n      \"_feelingRemoteDataSource\"\n    ]\n  },\n  {\n    \"symbolName\": \"_restaurantLocalDataSource\",\n    \"typeSignature\": \"RestaurantLocalDataSource?\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"restaurantLocalDataSource(() -> RestaurantLocalDataSource)\",\n    \"typeSignature\": \"() -> RestaurantLocalDataSource\",\n    \"calls_out\": [\n      \"RestaurantLocalDataSource\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"RestaurantLocalDataSource\",\n      \"_restaurantLocalDataSource\"\n    ]\n  },\n  {\n    \"symbolName\": \"_restaurantRemoteDataSource\",\n    \"typeSignature\": \"RestaurantRemoteDataSource?\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"restaurantRemoteDataSource(() -> RestaurantRemoteDataSource)\",\n    \"typeSignature\": \"() -> RestaurantRemoteDataSource\",\n    \"calls_out\": [\n      \"RestaurantRemoteDataSource\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"RestaurantRemoteDataSource\",\n      \"_restaurantRemoteDataSource\"\n    ]\n  },\n  {\n    \"symbolName\": \"_remoteUrlPresetLocalDataSource\",\n    \"typeSignature\": \"RemoteUrlPresetLocalDataSource?\",\n    \"symbolKind\": \"variable\"\n  },\n  {\n    \"symbolName\": \"remoteUrlPresetLocalDataSource(() -> RemoteUrlPresetLocalDataSource)\",\n    \"typeSignature\": \"() -> RemoteUrlPresetLocalDataSource\",\n    \"calls_out\": [\n      \"RemoteUrlPresetLocalDataSource\"\n    ],\n    \"symbolKind\": \"method\",\n    \"references\": [\n      \"RemoteUrlPresetLocalDataSource\",\n      \"_remoteUrlPresetLocalDataSource\"\n    ]\n  }\n]\n```"
}