{
  "node": {
    "A_name": "BaseViewController",
    "B_kind": "class",
    "C_accessLevel": "internal",
    "D_attributes": [],
    "E_adoptedClassProtocols": [
      "UIViewController"
    ],
    "F_location": "BaseViewController.swift - Line: 16, Column: 1",
    "G_members": [
      {
        "A_name": "disposeBag",
        "B_kind": "variable",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 17, Column: 5",
        "H_initialValue": "DisposeBag()",
        "isException": 1
      },
      {
        "A_name": "antiCaptureView",
        "B_kind": "variable",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 18, Column: 5",
        "H_initialValue": "",
        "isException": 0
      },
      {
        "A_name": "_sharedAntiCapture",
        "B_kind": "variable",
        "C_accessLevel": "private",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 20, Column: 5",
        "H_initialValue": "true",
        "isException": 0
      },
      {
        "A_name": "sharedAntiCapture",
        "B_kind": "variable",
        "C_accessLevel": "public",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 21, Column: 5",
        "H_initialValue": "",
        "isException": 0
      },
      {
        "A_name": "_sharedBackgroundColorOfCaptured",
        "B_kind": "variable",
        "C_accessLevel": "private",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 32, Column: 5",
        "H_initialValue": ".black",
        "isException": 0
      },
      {
        "A_name": "sharedBackgroundColorOfCaptured",
        "B_kind": "variable",
        "C_accessLevel": "public",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 33, Column: 5",
        "H_initialValue": "",
        "isException": 0
      },
      {
        "A_name": "_sharedBackgroundColorOfAppSwitcherView",
        "B_kind": "variable",
        "C_accessLevel": "private",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 44, Column: 5",
        "H_initialValue": ".black",
        "isException": 0
      },
      {
        "A_name": "sharedBackgroundColorOfAppSwitcherView",
        "B_kind": "variable",
        "C_accessLevel": "public",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 45, Column: 5",
        "H_initialValue": "",
        "isException": 0
      },
      {
        "A_name": "_sharedDisableAppSwitcherViewOnce",
        "B_kind": "variable",
        "C_accessLevel": "private",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 56, Column: 5",
        "H_initialValue": "false",
        "isException": 0
      },
      {
        "A_name": "sharedDisableAppSwitcherViewOnce",
        "B_kind": "variable",
        "C_accessLevel": "public",
        "D_attributes": [
          "static"
        ],
        "F_location": "BaseViewController.swift - Line: 57, Column: 5",
        "H_initialValue": "",
        "isException": 0
      },
      {
        "A_name": "viewDidLoad",
        "B_kind": "function",
        "C_accessLevel": "override",
        "D_attributes": [
          "override"
        ],
        "F_location": "BaseViewController.swift - Line: 73, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 1
      },
      {
        "A_name": "setupVC",
        "B_kind": "function",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 82, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 0
      },
      {
        "A_name": "setupVM",
        "B_kind": "function",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 86, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 0
      },
      {
        "A_name": "setupBind",
        "B_kind": "function",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 90, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 0
      },
      {
        "A_name": "setupAntiCaptureView",
        "B_kind": "function",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "F_location": "BaseViewController.swift - Line: 94, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 0
      },
      {
        "A_name": "handleSharedAntiCaptureChanged",
        "B_kind": "function",
        "C_accessLevel": "internal",
        "D_attributes": [
          "objc"
        ],
        "F_location": "BaseViewController.swift - Line: 113, Column: 5",
        "G_members": [],
        "I_parameterType": [],
        "I_parameters": [],
        "isException": 1
      }
    ],
    "isException": 1
  },
  "extension": [],
  "children": [
    {
      "A_name": "ResultViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "ResultViewController.swift - Line: 13, Column: 1",
      "G_members": [
        {
          "A_name": "firstImageView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ResultViewController.swift - Line: 17, Column: 5",
          "H_initialValue": "{\n        let imageView = UIImageView()\n        return imageView\n    }()",
          "isException": 0
        },
        {
          "A_name": "secondImageView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ResultViewController.swift - Line: 22, Column: 5",
          "H_initialValue": "{\n        let imageView = UIImageView()\n        return imageView\n    }()",
          "isException": 0
        },
        {
          "A_name": "thirdImageView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ResultViewController.swift - Line: 27, Column: 5",
          "H_initialValue": "{\n        let imageView = UIImageView()\n        return imageView\n    }()",
          "isException": 0
        },
        {
          "A_name": "greatPickLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ResultViewController.swift - Line: 32, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.text = \"Great Pick!\"\n        label.font = .boldSystemFont(ofSize: 20)\n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "viewDidLoad",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ResultViewController.swift - Line: 40, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "setupVC",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ResultViewController.swift - Line: 44, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupVM",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ResultViewController.swift - Line: 48, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupBind",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ResultViewController.swift - Line: 52, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        }
      ],
      "isException": 0
    },
    {
      "A_name": "PopupViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "PopupViewController.swift - Line: 11, Column: 1",
      "G_members": [],
      "isException": 0
    },
    {
      "A_name": "RestaurantLocationDetailViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "RestaurantLocationDetailViewController.swift - Line: 13, Column: 1",
      "G_members": [
        {
          "A_name": "viewModel",
          "B_kind": "variable",
          "C_accessLevel": "public",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 14, Column: 5",
          "H_initialValue": "DependencyInjector.detailViewModel()",
          "isException": 1
        },
        {
          "A_name": "contentView",
          "B_kind": "variable",
          "C_accessLevel": "private",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 16, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        \n        return view\n    }()",
          "isException": 1
        },
        {
          "A_name": "mapView",
          "B_kind": "variable",
          "C_accessLevel": "public",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 22, Column: 5",
          "H_initialValue": "{\n        let mapView = MKMapView()\n        mapView.showsUserLocation = true\n        mapView.setUserTrackingMode(.follow, animated: true)\n        mapView.translatesAutoresizingMaskIntoConstraints = false\n\n        return mapView\n    }()",
          "isException": 1
        },
        {
          "A_name": "viewDidLoad",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 32, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "viewDidDisappear",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 36, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "Bool"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        },
        {
          "A_name": "viewWillDisappear",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 40, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "Bool"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        },
        {
          "A_name": "setupVC",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 44, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupVM",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 61, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupBind",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "RestaurantLocationDetailViewController.swift - Line: 65, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        }
      ],
      "isException": 0
    },
    {
      "A_name": "ChooseViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "ChooseViewController.swift - Line: 13, Column: 1",
      "G_members": [
        {
          "A_name": "viewModel",
          "B_kind": "variable",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "F_location": "ChooseViewController.swift - Line: 14, Column: 5",
          "H_initialValue": "DependencyInjector.chooseViewModel()",
          "isException": 1
        },
        {
          "A_name": "collectionView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ChooseViewController.swift - Line: 17, Column: 5",
          "H_initialValue": "{\n        let cellWidth = ((Int(UIScreen.main.bounds.width) - 32) / NumberConstants.collectionViewCellWidthCount) - 8\n        \n        let layout = UICollectionViewFlowLayout()\n        layout.sectionInset = UIEdgeInsets(top: 0, left: 0, bottom: 100, right: 0)\n        layout.headerReferenceSize = CGSize(width: 0, height: 164)\n        layout.itemSize = CGSize(width: cellWidth, height: cellWidth + 60)\n        \n        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)\n        collectionView.backgroundColor = .black\n        collectionView.showsVerticalScrollIndicator = false\n        collectionView.showsHorizontalScrollIndicator = false\n        collectionView.register(ChooseCollectionViewCell.self, forCellWithReuseIdentifier: ChooseCollectionViewCell.reuseIdentifier)\n        \n        collectionView.translatesAutoresizingMaskIntoConstraints = false\n        \n        return collectionView\n    }()",
          "isException": 1
        },
        {
          "A_name": "collectionViewHeaderLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ChooseViewController.swift - Line: 36, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.collectionViewHeaderLabelSize))\n        label.textColor = .white\n        label.text = StringConstants.chooseYourFeelings\n        \n        label.translatesAutoresizingMaskIntoConstraints = false\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "doneButton",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "ChooseViewController.swift - Line: 48, Column: 5",
          "H_initialValue": "{\n        let button = UIButton()\n        button.backgroundColor = .white\n        button.setTitle(StringConstants.doneUpper, for: .normal)\n        button.titleLabel?.font = .boldSystemFont(ofSize: 17)\n        button.setTitleColor(.black, for: .normal)\n        button.setRounded(35)\n        button.addTarget(self, action: #selector(onTapDoneButton(_:)), for: .touchUpInside)\n        \n        button.translatesAutoresizingMaskIntoConstraints = false\n        \n        return button\n    }()",
          "isException": 1
        },
        {
          "A_name": "viewDidLoad",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 63, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "viewWillAppear",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 68, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "Bool"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        },
        {
          "A_name": "viewDidLayoutSubviews",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 74, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "setupVC",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 89, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupVM",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 120, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupBind",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "ChooseViewController.swift - Line: 126, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "onTapDoneButton",
          "B_kind": "function",
          "C_accessLevel": "internal",
          "D_attributes": [
            "objc"
          ],
          "F_location": "ChooseViewController.swift - Line: 151, Column: 5",
          "G_members": [
            {
              "A_name": "mainVC",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "ChooseViewController.swift - Line: 156, Column: 9",
              "H_initialValue": "MainViewController()",
              "isException": 0
            },
            {
              "A_name": "mainVCBackBarButtonItem",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "ChooseViewController.swift - Line: 157, Column: 9",
              "H_initialValue": "{\n            let buttonItem = UIBarButtonItem()\n            \n            buttonItem.tintColor = .white\n            \n            return buttonItem\n        }()",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "UIButton"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        },
        {
          "A_name": "setCollectionViewBottomShadow",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "ChooseViewController.swift - Line: 178, Column: 5",
          "G_members": [
            {
              "A_name": "outerColor",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "ChooseViewController.swift - Line: 179, Column: 9",
              "H_initialValue": "UIColor.init(white: 1.0, alpha: 0.0).cgColor",
              "isException": 0
            },
            {
              "A_name": "innerColor",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "ChooseViewController.swift - Line: 180, Column: 9",
              "H_initialValue": "UIColor.init(white: 1.0, alpha: 1.0).cgColor",
              "isException": 0
            },
            {
              "A_name": "colors",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "ChooseViewController.swift - Line: 181, Column: 9",
              "H_initialValue": "",
              "isException": 1
            }
          ],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        }
      ],
      "isException": 0
    },
    {
      "A_name": "MainViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "MainViewController.swift - Line: 23, Column: 1",
      "G_members": [
        {
          "A_name": "viewModel",
          "B_kind": "variable",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 24, Column: 5",
          "H_initialValue": "DependencyInjector.mainViewModel()",
          "isException": 1
        },
        {
          "A_name": "mainScrollLoadingView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 28, Column: 5",
          "H_initialValue": "{\n        let loadingView = LoadingView()\n        \n        return loadingView\n    }()",
          "isException": 0
        },
        {
          "A_name": "mainScrollView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 34, Column: 5",
          "H_initialValue": "{\n        let scrollView = UIScrollView()\n        scrollView.translatesAutoresizingMaskIntoConstraints = false\n        scrollView.showsHorizontalScrollIndicator = false\n        scrollView.showsVerticalScrollIndicator = false\n        \n        let refreshControl = UIRefreshControl()\n        refreshControl.addTarget(self, action: #selector(mainScrollViewRefresh), for: .valueChanged)\n        refreshControl.tintColor = .white\n        scrollView.refreshControl = refreshControl\n        \n        return scrollView\n    }()",
          "isException": 0
        },
        {
          "A_name": "mainScrollContentView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 48, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "selectedFeelingsStackView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 54, Column: 5",
          "H_initialValue": "{\n        let stackView = UIStackView()\n        \n        stackView.axis = .horizontal\n        stackView.alignment = .center\n        stackView.distribution = .fillEqually\n        stackView.translatesAutoresizingMaskIntoConstraints = false\n        \n        return stackView\n    }()",
          "isException": 0
        },
        {
          "A_name": "selectedFeelingsStackViewScrollView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 65, Column: 5",
          "H_initialValue": "{\n        let scrollView = UIScrollView()\n        scrollView.translatesAutoresizingMaskIntoConstraints = false\n        scrollView.showsHorizontalScrollIndicator = false\n        scrollView.showsVerticalScrollIndicator = false\n        \n        return scrollView\n    }()",
          "isException": 0
        },
        {
          "A_name": "settingButton",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 74, Column: 5",
          "H_initialValue": "{\n        let button = UIButton()\n        \n        button.setImage(#imageLiteral(resourceName: \"gearshape\"), for: .normal)\n        button.imageView?.contentMode = .scaleAspectFill\n        button.tintColor = .white\n\n        button.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(tapSettingButton(_ :))))\n        \n        return button\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantTableView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "MainViewController.swift - Line: 86, Column: 5",
          "H_initialValue": "{\n        let tableView: UITableView = UITableView()\n\n        tableView.backgroundColor = .clear\n        tableView.isScrollEnabled = false\n        tableView.bounces = false\n        tableView.alwaysBounceVertical = false\n        tableView.alwaysBounceHorizontal = false\n        \n        return tableView\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantTableViewCellHeight",
          "B_kind": "variable",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 98, Column: 5",
          "H_initialValue": "{\n        var height = 0\n        height += 40\n        height += NumberConstants.layoutMarginMidium\n        height += NumberConstants.layoutMarginExtra\n        height += NumberConstants.restaurantCollectionViewCellSize\n        \n        return height\n    }()",
          "isException": 0
        },
        {
          "A_name": "viewDidLoad",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 110, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "viewWillAppear",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 124, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "Bool"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        },
        {
          "A_name": "preferredStatusBarStyle",
          "B_kind": "variable",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 128, Column: 5",
          "H_initialValue": "",
          "isException": 1
        },
        {
          "A_name": "setupVC",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 132, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupVM",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 189, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupBind",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "MainViewController.swift - Line: 199, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "onSelectRestaurant",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 236, Column: 5",
          "G_members": [
            {
              "A_name": "detailVC",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "MainViewController.swift - Line: 237, Column: 9",
              "H_initialValue": "DetailViewController()",
              "isException": 0
            },
            {
              "A_name": "detailVCBackBarButtonItem",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "MainViewController.swift - Line: 238, Column: 9",
              "H_initialValue": "{\n            let buttonItem = UIBarButtonItem()\n            \n            //            buttonItem.image = #imageLiteral(resourceName: \"arrow.backward\")\n            buttonItem.tintColor = .white\n            \n            return buttonItem\n        }()",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "RestaurantItem"
          ],
          "I_parameters": [
            "item"
          ],
          "isException": 0
        },
        {
          "A_name": "settingViewDismissCompletion",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 252, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "MainSettingViewController"
          ],
          "I_parameters": [
            "settingView"
          ],
          "isException": 0
        },
        {
          "A_name": "showMainScrollLoadingView",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 279, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "disappearMainScrollLoadingView",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "MainViewController.swift - Line: 288, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "mainScrollViewRefresh",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [
            "objc"
          ],
          "F_location": "MainViewController.swift - Line: 294, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "UIRefreshControl"
          ],
          "I_parameters": [
            "refreshControl"
          ],
          "isException": 1
        },
        {
          "A_name": "tapSettingButton",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [
            "objc"
          ],
          "F_location": "MainViewController.swift - Line: 301, Column: 5",
          "G_members": [
            {
              "A_name": "settingView",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "MainViewController.swift - Line: 305, Column: 9",
              "H_initialValue": "MainSettingViewController()",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "UITapGestureRecognizer"
          ],
          "I_parameters": [
            "_"
          ],
          "isException": 1
        }
      ],
      "isException": 1
    },
    {
      "node": {
        "A_name": "MainSettingViewController",
        "B_kind": "class",
        "C_accessLevel": "internal",
        "D_attributes": [],
        "E_adoptedClassProtocols": [
          "BaseViewController",
          "UITextFieldDelegate"
        ],
        "F_location": "MainSettingViewController.swift - Line: 12, Column: 1",
        "G_members": [
          {
            "A_name": "viewModel",
            "B_kind": "variable",
            "C_accessLevel": "public",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 13, Column: 5",
            "H_initialValue": "DependencyInjector.mainViewModel()",
            "isException": 1
          },
          {
            "A_name": "dismissCompletion",
            "B_kind": "variable",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 15, Column: 5",
            "H_initialValue": "",
            "isException": 0
          },
          {
            "A_name": "setRemoteUrl",
            "B_kind": "variable",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 16, Column: 5",
            "H_initialValue": "",
            "isException": 0
          },
          {
            "A_name": "resetButtonInitialWidth",
            "B_kind": "variable",
            "C_accessLevel": "private",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 17, Column: 5",
            "H_initialValue": "",
            "isException": 0
          },
          {
            "A_name": "antiCaptureActivateButtonInitialWidth",
            "B_kind": "variable",
            "C_accessLevel": "private",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 18, Column: 5",
            "H_initialValue": "",
            "isException": 0
          },
          {
            "A_name": "tapGesture",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 19, Column: 5",
            "H_initialValue": "UITapGestureRecognizer(target: self, action: nil)",
            "isException": 0
          },
          {
            "A_name": "buttonClickFeedback",
            "B_kind": "variable",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 21, Column: 5",
            "H_initialValue": "UIImpactFeedbackGenerator(style: .medium)",
            "isException": 0
          },
          {
            "A_name": "sampleTextView",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 25, Column: 5",
            "H_initialValue": "{\n        let textView = UITextView()\n        textView.backgroundColor = .white\n        textView.textColor = .black\n        textView.textAlignment = .left\n        textView.font = .systemFont(ofSize: 5, weight: .light)\n        textView.isEditable = true\n        \n        return textView\n    }()",
            "isException": 0
          },
          {
            "A_name": "remainOfContentView",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 36, Column: 5",
            "H_initialValue": "{\n        let view = UIView()\n        \n        view.backgroundColor = .clear\n        \n        view.addGestureRecognizer(UITapGestureRecognizer(\n            target: self, action: #selector(tapDismiss(_ :)))\n        )\n        \n        return view\n    }()",
            "isException": 0
          },
          {
            "A_name": "contentView",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 48, Column: 5",
            "H_initialValue": "{\n        let view = UIView()\n        \n        view.setRounded(50)\n        view.backgroundColor = .white\n        \n        return view\n    }()",
            "isException": 1
          },
          {
            "A_name": "mainTitleLabel",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 57, Column: 5",
            "H_initialValue": "{\n        let label = UILabel()\n        \n        label.numberOfLines = 0\n        label.font = .boldSystemFont(ofSize: CGFloat(36))\n        label.textColor = .black\n        label.text = StringConstants.setting\n        \n        return label\n    }()",
            "isException": 0
          },
          {
            "A_name": "settingScrollViewContent",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 68, Column: 5",
            "H_initialValue": "{\n        let view = UIView()\n        \n        return view\n    }()",
            "isException": 0
          },
          {
            "A_name": "setRemoteUrlTitleLabel",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 76, Column: 5",
            "H_initialValue": "{\n        let label = UILabel()\n        \n        label.numberOfLines = 0\n        label.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        label.textColor = .black\n        label.text = StringConstants.setRemoteUrlViewTitle\n        \n        return label\n    }()",
            "isException": 0
          },
          {
            "A_name": "setRemoteUrlTextField",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 87, Column: 5",
            "H_initialValue": "{\n        let textField = UITextField()\n\n        textField.setRounded()\n        textField.setBorder(.black, 8)\n        textField.layer.cornerRadius = 4\n        textField.backgroundColor = .white\n        textField.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        textField.textColor = .black\n        textField.placeholder = StringConstants.setRemoteUrlTextFieldPlaceholder\n        textField.addLeftPadding()\n        \n        textField.delegate = self\n\n        return textField\n    }()",
            "isException": 0
          },
          {
            "A_name": "resetButton",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 104, Column: 5",
            "H_initialValue": "{\n        let button = UIButton()\n        \n        button.setTitle(StringConstants.reset, for: .normal)\n        button.titleLabel?.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        button.setTitleColor(.white, for: .normal)\n        button.backgroundColor = .black\n        button.layer.cornerRadius = CGFloat(NumberConstants.settingButtonCornerRadius)\n        button.contentEdgeInsets = UIEdgeInsets(\n            top: CGFloat(NumberConstants.settingButtonContentEdgeInsetsTop),\n            left: CGFloat(NumberConstants.settingButtonContentEdgeInsetsLeft),\n            bottom: CGFloat(NumberConstants.settingButtonContentEdgeInsetsBottom),\n            right: CGFloat(NumberConstants.settingButtonContentEdgeInsetsRight)\n        )\n        \n        resetButtonInitialWidth = button.intrinsicContentSize.width\n        \n        button.addTarget(self, action: #selector(tapRemoteUrlResetButton(_:)), for: .touchUpInside)\n        \n        return button\n    }()",
            "isException": 0
          },
          {
            "A_name": "loadRemoteUrlPresetTitleLabel",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 128, Column: 5",
            "H_initialValue": "{\n        let label = UILabel()\n        \n        label.numberOfLines = 0\n        label.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        label.textColor = .black\n        label.text = StringConstants.setRemoteUrlPresetViewTitle\n        \n        return label\n    }()",
            "isException": 0
          },
          {
            "A_name": "remoteUrlPresetStackView",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 139, Column: 5",
            "H_initialValue": "{\n        let stackView = UIStackView()\n        \n        stackView.axis = .horizontal\n        stackView.alignment = .leading\n        stackView.distribution = .fill\n        stackView.spacing = CGFloat(NumberConstants.settingStackViewSpacing)\n        stackView.translatesAutoresizingMaskIntoConstraints = false\n        \n        return stackView\n    }()",
            "isException": 0
          },
          {
            "A_name": "remoteUrlPresetStackScrollView",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 151, Column: 5",
            "H_initialValue": "{\n        let scrollView = UIScrollView()\n        scrollView.translatesAutoresizingMaskIntoConstraints = false\n        scrollView.showsHorizontalScrollIndicator = false\n        scrollView.showsVerticalScrollIndicator = false\n        \n        return scrollView\n    }()",
            "isException": 0
          },
          {
            "A_name": "remoteUrlPresetClearButton",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 160, Column: 5",
            "H_initialValue": "{\n        let button = UIButton()\n\n        button.setTitle(StringConstants.clear, for: .normal)\n        button.titleLabel?.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        button.setTitleColor(.white, for: .normal)\n        button.setBackgroundColor(color: .gray, forState: .normal, cornerRadius: CGFloat(NumberConstants.settingButtonCornerRadius))\n        button.setBackgroundColor(color: .black, forState: .highlighted, cornerRadius: CGFloat(NumberConstants.settingButtonCornerRadius))\n        button.contentEdgeInsets = UIEdgeInsets(\n            top: CGFloat(NumberConstants.settingButtonContentEdgeInsetsTop),\n            left: CGFloat(NumberConstants.settingButtonContentEdgeInsetsLeft),\n            bottom: CGFloat(NumberConstants.settingButtonContentEdgeInsetsBottom),\n            right: CGFloat(NumberConstants.settingButtonContentEdgeInsetsRight)\n        )\n\n        button.addTarget(self, action: #selector(tapRemoteUrlPresetClearButton), for: .touchUpInside)\n\n        return button\n    }()",
            "isException": 0
          },
          {
            "A_name": "remoteUrlPresetAddButton",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 180, Column: 5",
            "H_initialValue": "{\n        let button = UIButton()\n        \n        button.setTitle(StringConstants.plusSymbol, for: .normal)\n        button.titleLabel?.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.settingContentLabelSize))\n        button.setTitleColor(.white, for: .normal)\n        button.setBackgroundColor(color: .gray, forState: .normal, cornerRadius: CGFloat(NumberConstants.settingButtonCornerRadius))\n        button.setBackgroundColor(color: .black, forState: .highlighted, cornerRadius: CGFloat(NumberConstants.settingButtonCornerRadius))\n        button.contentEdgeInsets = UIEdgeInsets(\n            top: CGFloat(NumberConstants.settingButtonContentEdgeInsetsTop),\n            left: CGFloat(NumberConstants.settingButtonContentEdgeInsetsLeft),\n            bottom: CGFloat(NumberConstants.settingButtonContentEdgeInsetsBottom),\n            right: CGFloat(NumberConstants.settingButtonContentEdgeInsetsRight)\n        )\n\n        button.addTarget(self, action: #selector(tapRemoteUrlPresetAddButton), for: .touchUpInside)\n\n        return button\n    }()",
            "isException": 0
          },
          {
            "A_name": "stealienImage",
            "B_kind": "variable",
            "C_accessLevel": "lazy",
            "D_attributes": [
              "lazy"
            ],
            "F_location": "MainSettingViewController.swift - Line: 200, Column: 5",
            "H_initialValue": "{\n        let imageView = UIImageView()\n        imageView.contentMode = .scaleAspectFit\n        \n        return imageView\n    }()",
            "isException": 0
          },
          {
            "A_name": "viewDidLoad",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 208, Column: 5",
            "G_members": [],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 1
          },
          {
            "A_name": "viewDidDisappear",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 232, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "Bool"
            ],
            "I_parameters": [
              "_"
            ],
            "isException": 1
          },
          {
            "A_name": "setupVC",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 236, Column: 5",
            "G_members": [],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 0
          },
          {
            "A_name": "setupVM",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 344, Column: 5",
            "G_members": [],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 0
          },
          {
            "A_name": "setupBind",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 348, Column: 5",
            "G_members": [],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 0
          },
          {
            "A_name": "touchesBegan",
            "B_kind": "function",
            "C_accessLevel": "override",
            "D_attributes": [
              "override"
            ],
            "F_location": "MainSettingViewController.swift - Line: 395, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "Set<UITouch>",
              "UIEvent?"
            ],
            "I_parameters": [
              "_",
              "with"
            ],
            "isException": 1
          },
          {
            "A_name": "tapDismiss",
            "B_kind": "function",
            "C_accessLevel": "private",
            "D_attributes": [
              "objc"
            ],
            "F_location": "MainSettingViewController.swift - Line: 401, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "UITapGestureRecognizer"
            ],
            "I_parameters": [
              "_"
            ],
            "isException": 1
          },
          {
            "A_name": "tapRemoteUrlResetButton",
            "B_kind": "function",
            "C_accessLevel": "private",
            "D_attributes": [
              "objc"
            ],
            "F_location": "MainSettingViewController.swift - Line: 408, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "UIButton"
            ],
            "I_parameters": [
              "_"
            ],
            "isException": 1
          },
          {
            "A_name": "tapRemoteUrlPresetClearButton",
            "B_kind": "function",
            "C_accessLevel": "private",
            "D_attributes": [
              "objc"
            ],
            "F_location": "MainSettingViewController.swift - Line: 416, Column: 5",
            "G_members": [
              {
                "A_name": "alertController",
                "B_kind": "variable",
                "C_accessLevel": "internal",
                "D_attributes": [],
                "F_location": "MainSettingViewController.swift - Line: 420, Column: 9",
                "H_initialValue": "UIAlertController(title: StringConstants.removeAllPresetAlertTitle, message: StringConstants.removeAllPresetAlertMessage, preferredStyle: .alert)",
                "isException": 0
              },
              {
                "A_name": "deleteAction",
                "B_kind": "variable",
                "C_accessLevel": "internal",
                "D_attributes": [],
                "F_location": "MainSettingViewController.swift - Line: 422, Column: 9",
                "H_initialValue": "UIAlertAction(title: StringConstants.alertRemove, style: .destructive) { [weak self] _ in\n            self?.viewModel.removeAllRemoteUrlPresetData()\n        }",
                "isException": 0
              },
              {
                "A_name": "cancelAction",
                "B_kind": "variable",
                "C_accessLevel": "internal",
                "D_attributes": [],
                "F_location": "MainSettingViewController.swift - Line: 427, Column: 9",
                "H_initialValue": "UIAlertAction(title: StringConstants.alertCancle, style: .cancel, handler: nil)",
                "isException": 1
              }
            ],
            "I_parameterType": [
              "UIButton"
            ],
            "I_parameters": [
              "_"
            ],
            "isException": 1
          },
          {
            "A_name": "tapRemoteUrlPresetAddButton",
            "B_kind": "function",
            "C_accessLevel": "private",
            "D_attributes": [
              "objc"
            ],
            "F_location": "MainSettingViewController.swift - Line: 433, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "UIButton"
            ],
            "I_parameters": [
              "_"
            ],
            "isException": 1
          },
          {
            "A_name": "clearRemoteUrl",
            "B_kind": "function",
            "C_accessLevel": "private",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 440, Column: 5",
            "G_members": [],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 0
          },
          {
            "A_name": "savePresetUrl",
            "B_kind": "function",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 446, Column: 5",
            "G_members": [],
            "I_parameterType": [
              "Int"
            ],
            "I_parameters": [
              "index"
            ],
            "isException": 0
          },
          {
            "A_name": "activateSecretSettings",
            "B_kind": "function",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 454, Column: 5",
            "G_members": [
              {
                "A_name": "antiCaptureSettingView",
                "B_kind": "variable",
                "C_accessLevel": "internal",
                "D_attributes": [],
                "F_location": "MainSettingViewController.swift - Line: 459, Column: 9",
                "H_initialValue": "activateAntiCaptureSettingView(topView: remoteUrlPresetStackView)",
                "isException": 0
              }
            ],
            "I_parameterType": [],
            "I_parameters": [],
            "isException": 0
          },
          {
            "A_name": "activateAntiCaptureSettingView",
            "B_kind": "function",
            "C_accessLevel": "internal",
            "D_attributes": [],
            "F_location": "MainSettingViewController.swift - Line: 463, Column: 5",
            "G_members": [
              {
                "A_name": "antiCaptureSettingView",
                "B_kind": "variable",
                "C_accessLevel": "internal",
                "D_attributes": [],
                "F_location": "MainSettingViewController.swift - Line: 466, Column: 9",
                "H_initialValue": "AntiCaptureSettingView()",
                "isException": 0
              }
            ],
            "I_parameterType": [
              "UIView"
            ],
            "I_parameters": [
              "topView"
            ],
            "J_returnType": "-> UIView",
            "isException": 0
          }
        ],
        "isException": 0
      },
      "extension": [
        {
          "A_name": "MainSettingViewController",
          "B_kind": "extension",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "E_adoptedClassProtocols": [
            "UITextFieldDelegate"
          ],
          "F_location": "MainSettingViewController.swift - Line: 493, Column: 1",
          "G_members": [
            {
              "A_name": "textFieldDidEndEditing",
              "B_kind": "function",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "MainSettingViewController.swift - Line: 494, Column: 5",
              "G_members": [],
              "I_parameterType": [
                "UITextField"
              ],
              "I_parameters": [
                "_"
              ],
              "isException": 1
            }
          ],
          "isException": 0
        }
      ],
      "children": []
    },
    {
      "A_name": "DetailViewController",
      "B_kind": "class",
      "C_accessLevel": "internal",
      "D_attributes": [],
      "E_adoptedClassProtocols": [
        "BaseViewController"
      ],
      "F_location": "DetailViewController.swift - Line: 15, Column: 1",
      "G_members": [
        {
          "A_name": "viewModel",
          "B_kind": "variable",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 16, Column: 5",
          "H_initialValue": "DependencyInjector.detailViewModel()",
          "isException": 1
        },
        {
          "A_name": "tapGestureRecognizerShowRestaurantLocationDetailView",
          "B_kind": "variable",
          "C_accessLevel": "internal",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 17, Column: 5",
          "H_initialValue": "UITapGestureRecognizer()",
          "isException": 0
        },
        {
          "A_name": "mainScrollView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 20, Column: 5",
          "H_initialValue": "{\n        let scrollView = UIScrollView()\n        scrollView.showsVerticalScrollIndicator = false\n        scrollView.showsHorizontalScrollIndicator = false\n        scrollView.isScrollEnabled = true\n        \n        return scrollView\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageCollectionViewLayout",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 29, Column: 5",
          "H_initialValue": "{\n        let layout = CenteredCollectionViewFlowLayout()\n        let cellWidth = ((Int(UIScreen.main.bounds.width) - 32) / NumberConstants.restaurantImageCollectionViewCellCount) - 8\n        \n        layout.minimumLineSpacing = 20\n        layout.itemSize = CGSize(width: cellWidth, height: 200)\n        \n        return layout\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageCollectionView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 39, Column: 5",
          "H_initialValue": "{\n        let collectionView = UICollectionView(centeredCollectionViewFlowLayout: restaurantImageCollectionViewLayout)\n        collectionView.register(DetailImageCollectionViewCell.self, forCellWithReuseIdentifier: DetailImageCollectionViewCell.reuseIdentifier)\n        collectionView.showsVerticalScrollIndicator = false\n        collectionView.showsHorizontalScrollIndicator = false\n        collectionView.translatesAutoresizingMaskIntoConstraints = false\n        collectionView.backgroundColor = .clear\n        \n        return collectionView\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageUpScaleView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 50, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        \n        view.backgroundColor = .black\n        view.alpha = 0.8\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageUpScaleViewDismissButton",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 59, Column: 5",
          "H_initialValue": "{\n        let button = UIButton()\n        \n        button.setImage(#imageLiteral(resourceName: \"xmark_circle\"), for: .normal)\n        button.imageView?.contentMode = .scaleAspectFill\n        button.tintColor = .white\n        \n        button.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(disappearRestaurantImageUpScaleView)))\n        \n        return button\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageUpScaleCollectionViewLayout",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 71, Column: 5",
          "H_initialValue": "{\n        let layout = CenteredCollectionViewFlowLayout()\n        \n//        layout.minimumLineSpacing = 20\n        layout.itemSize = CGSize(\n            width: NumberConstants.deviceWidth,\n            height: NumberConstants.deviceHeight)\n        layout.scrollDirection = .horizontal\n        \n        return layout\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantImageUpScaleCollectionView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 83, Column: 5",
          "H_initialValue": "{\n        let collectionView = UICollectionView(centeredCollectionViewFlowLayout: restaurantImageUpScaleCollectionViewLayout)\n        \n        collectionView.register(DetailImageUpScaleCollectionViewCell.self, forCellWithReuseIdentifier: DetailImageUpScaleCollectionViewCell.reuseIdentifier)\n        \n        collectionView.translatesAutoresizingMaskIntoConstraints = false\n        collectionView.showsVerticalScrollIndicator = false\n        collectionView.showsHorizontalScrollIndicator = true\n        collectionView.backgroundColor = .clear\n        \n        return collectionView\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantNameLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 96, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.font = .boldSystemFont(ofSize: CGFloat(NumberConstants.restaurantNameLabel))\n        label.textColor = .white\n        label.text = \"식당 이름\"\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "inBusinessTagView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 105, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.setRounded(5)\n        view.backgroundColor = .orange\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "inBusinessTagLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 113, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.font = .systemFont(ofSize: 12)\n        label.textColor = .white\n        label.text = \"영업 여부\"\n        label.textAlignment = .center\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "starImageView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 123, Column: 5",
          "H_initialValue": "{\n        let image = #imageLiteral(resourceName: \"star\")\n        let imageView = UIImageView(image: image)\n        \n        return imageView\n    }()",
          "isException": 0
        },
        {
          "A_name": "starLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 130, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.text = \"0.0\"\n        label.textColor = .white\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "callNumberImageView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 138, Column: 5",
          "H_initialValue": "{\n        let image = #imageLiteral(resourceName: \"phone\")\n        let imageView = UIImageView(image: image)\n        \n        return imageView\n    }()",
          "isException": 0
        },
        {
          "A_name": "callNumberLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 145, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.textColor = .white\n        label.text = \"12-345-6789\"\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "topLeftBoxView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 153, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.setBorder()\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "topLeftBoxLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 160, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"분류\\n기타 뭐시기\"\n        label.textAlignment = .center\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "topRightBoxView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 170, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.setBorder()\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "topRightBoxLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 177, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"가격대\\n가격-가격\"\n        label.textAlignment = .center\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "bottomLeftBoxView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 187, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.setBorder()\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "bottomLeftBoxLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 194, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"영업 시간\\n월-금: 00:00 - 00:00 토-일: 00:00 - 00:00\"\n        label.textAlignment = .center\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "bottomRightBoxView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 204, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.setBorder()\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "bottomRightBoxLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 211, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"휴일\\n요일\"\n        label.textAlignment = .center\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "menuDividerView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 221, Column: 5",
          "H_initialValue": "{\n        let view = UIView()\n        view.backgroundColor = .white\n        \n        return view\n    }()",
          "isException": 0
        },
        {
          "A_name": "menuLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 228, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"\\n메뉴1: 00,000원\\n메뉴2: 00,000원\\n\"\n        label.setLineSpacing()\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "restaurantLocationView",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 238, Column: 5",
          "H_initialValue": "{\n        let mapView = MKMapView()\n        mapView.showsUserLocation = true\n        mapView.setUserTrackingMode(.follow, animated: true)\n        tapGestureRecognizerShowRestaurantLocationDetailView = UITapGestureRecognizer(target: self, action: #selector(showRestaurantLocationDetailViewController))\n        mapView.addGestureRecognizer(tapGestureRecognizerShowRestaurantLocationDetailView)\n        \n//        var mapTitle = \"식당 이름\"\n//        var coordinate: CLLocationCoordinate2D?\n//        \n//        let mark = MKMapMarker(title: mapTitle, coordinate: coordinate)\n//        mapView.addAnnotation(mark)\n        \n        return mapView\n    }()",
          "isException": 0
        },
        {
          "A_name": "etcLabel",
          "B_kind": "variable",
          "C_accessLevel": "lazy",
          "D_attributes": [
            "lazy"
          ],
          "F_location": "DetailViewController.swift - Line: 254, Column: 5",
          "H_initialValue": "{\n        let label = UILabel()\n        label.numberOfLines = 0\n        label.textColor = .white\n        label.text = \"기타 정보\"\n        label.setLineSpacing()\n        \n        return label\n    }()",
          "isException": 0
        },
        {
          "A_name": "viewDidLoad",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "DetailViewController.swift - Line: 266, Column: 5",
          "G_members": [
            {
              "A_name": "barAppearance",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 270, Column: 9",
              "H_initialValue": "{\n            let appearance = UINavigationBarAppearance()\n\n            appearance.backgroundColor = .black\n            appearance.backgroundImage = UIImage()\n            appearance.shadowImage = UIImage()\n\n            return appearance\n        }()",
              "isException": 1
            }
          ],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 1
        },
        {
          "A_name": "preferredStatusBarStyle",
          "B_kind": "variable",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "DetailViewController.swift - Line: 284, Column: 5",
          "H_initialValue": "",
          "isException": 1
        },
        {
          "A_name": "setupVC",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "DetailViewController.swift - Line: 288, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupVM",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "DetailViewController.swift - Line: 451, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "setupBind",
          "B_kind": "function",
          "C_accessLevel": "override",
          "D_attributes": [
            "override"
          ],
          "F_location": "DetailViewController.swift - Line: 455, Column: 5",
          "G_members": [],
          "I_parameterType": [],
          "I_parameters": [],
          "isException": 0
        },
        {
          "A_name": "createBoxLabelText",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 535, Column: 5",
          "G_members": [
            {
              "A_name": "safeContent",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 536, Column: 9",
              "H_initialValue": "content ?? StringConstants.safeContent",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "String",
            "String?"
          ],
          "I_parameters": [
            "title",
            "content"
          ],
          "J_returnType": "-> String",
          "isException": 0
        },
        {
          "A_name": "createMenuLabelText",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 541, Column: 5",
          "G_members": [
            {
              "A_name": "safeContent",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 542, Column: 9",
              "H_initialValue": "content ?? StringConstants.safeContent",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "String?"
          ],
          "I_parameters": [
            "content"
          ],
          "J_returnType": "-> String",
          "isException": 0
        },
        {
          "A_name": "createEtcLabelText",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 547, Column: 5",
          "G_members": [
            {
              "A_name": "safeContent",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 552, Column: 9",
              "H_initialValue": "[]",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "RestaurantItem?"
          ],
          "I_parameters": [
            "data"
          ],
          "J_returnType": "-> String",
          "isException": 0
        },
        {
          "A_name": "showRestaurantImageUpScaleView",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [],
          "F_location": "DetailViewController.swift - Line: 569, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "IndexPath"
          ],
          "I_parameters": [
            "indexPath"
          ],
          "isException": 0
        },
        {
          "A_name": "disappearRestaurantImageUpScaleView",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [
            "objc"
          ],
          "F_location": "DetailViewController.swift - Line: 595, Column: 5",
          "G_members": [],
          "I_parameterType": [
            "UITapGestureRecognizer"
          ],
          "I_parameters": [
            "sender"
          ],
          "isException": 1
        },
        {
          "A_name": "showRestaurantLocationDetailViewController",
          "B_kind": "function",
          "C_accessLevel": "private",
          "D_attributes": [
            "objc"
          ],
          "F_location": "DetailViewController.swift - Line: 602, Column: 5",
          "G_members": [
            {
              "A_name": "restaurantLocationDetailVC",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 604, Column: 9",
              "H_initialValue": "RestaurantLocationDetailViewController()",
              "isException": 0
            },
            {
              "A_name": "restaurantLocationDetailVCBarButtonItem",
              "B_kind": "variable",
              "C_accessLevel": "internal",
              "D_attributes": [],
              "F_location": "DetailViewController.swift - Line: 608, Column: 9",
              "H_initialValue": "{\n            let buttonItem = UIBarButtonItem()\n            buttonItem.tintColor = .white\n\n            return buttonItem\n        }()",
              "isException": 0
            }
          ],
          "I_parameterType": [
            "UITapGestureRecognizer"
          ],
          "I_parameters": [
            "sender"
          ],
          "isException": 1
        }
      ],
      "isException": 1
    }
  ]
}